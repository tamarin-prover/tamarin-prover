theory SourceOfUniqueness begin

builtins: symmetric-encryption

// Comment
tactic: huhu
presort: c
prio:
    isFactName "ReceiverKeySimple"
    // Comment
    isFactName "Wurst"
prio:
    isInFactTerms "xsimple" | isInFactTerms "~xsimple"
prio:
    regex "KU\( ~key"

tactic: uniqueness
// Comment
presort: c
prio:
    isFactName "ReceiverKeySimple"
prio:
    regex "senc\(xsimple" /* test */ | regex "senc\(~xsimple"
prio:
    // Comment
    regex "KU\( ~key"

// Comment
rule generatecomplicated:
 [ In(x), Fr(~key)  ]
 --[ Complicated(x) ]->
 [ Out(senc(x,~key)), ReceiverKeyComplicated(~key) ]

rule generatesimple:
 [ Fr(~xsimple), Fr(~key)  ]
 --[ Simpleunique(~xsimple) ]->
 [ Out(senc(~xsimple,~key)), ReceiverKeySimple(~key) ]

rule receive:
 [ ReceiverKeyComplicated(keycomplicated), In(senc(xcomplicated,keycomplicated))
 , ReceiverKeySimple(keysimple), In(senc(xsimple,keysimple))
 ]
 --[ Unique(<xcomplicated,xsimple>) ]->
 [  ]

//this restriction artificially complicates an occurrence of an event Complicated(x)
restriction complicate:
 "All x #i. Complicated(x)@i // blabla
   ==> (Ex y #j. Complicated(y)@j & #j < #i) | (Ex y #j. Simpleunique(y)@j & #j < #i)"

lemma uniqueness[heuristic={huhu}]:
 "All #i #j x. Unique(x)@i & Unique(x)@j ==> #i=#j"

end
