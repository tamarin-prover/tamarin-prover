theory POIDC_enc_U begin

// Function signature and definition of the equational theory E

functions: e1/1 [private], e2/1 [private], e3/1 [private], false/0,
           fst/1, h/1, mangle/2, pair/2, pk/1, radec/2, raenc/3, sign/3,
           snd/1, true/0
equations:
    e1(sign(x, y, z)) = x,
    e2(sign(x, y, z)) = y,
    e3(sign(x, y, z)) = z,
    fst(<x.1, x.2>) = x.1,
    mangle(sign(m, r1, sk), r2) = sign(m, r2, sk),
    radec(raenc(m, r, pk(sk)), sk) = m,
    snd(<x.1, x.2>) = x.2



rule (modulo E) reSign:
   [ In( <sk1, r1> ), In( sign(m, r2, sk2) ) ]
  -->
   [ Out( sign(m, r1, sk1) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Get_pk:
   [ !Pk( A, pubkey ) ] --> [ Out( pubkey ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_Browser[color=#f9e79f]:
   [ Fr( ~browserID ) ]
  --[
  BrowserInits( ~browserID ), BrowserUser( ~browserID, $User ),
  Start( )
  ]->
   [ !St_Browser_Init( ~browserID, $User ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Browser_Performs_User_Action[color=#aed6f1]:
   [
   User_InputTo_Browser( $User, ~browserID,
                         <'userAction', $Server, message>
   ),
   !St_Browser_Init( ~browserID, $User ),
   !St_Browser_Session( ~browserID, $Server, ~browser_ID_TLS )
   ]
  -->
   [ !Client_to_Server_TLS( ~browser_ID_TLS, $Server, message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Browser_Redirects_To_URI[color=#aed6f1]:
   [
   !Server_to_Client_TLS( $Server1, ~browser_ID_TLS1,
                          <'redirectToURI', $uri, message>
   ),
   !St_Browser_Session( browserID, $Server1, ~browser_ID_TLS1 ),
   !St_Browser_Session( browserID, $Server2, ~browser_ID_TLS2 ),
   !Uri_belongs_to( $uri, $Server2 )
   ]
  -->
   [ !Client_to_Server_TLS( ~browser_ID_TLS2, $Server2, message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Browser_Shows[color=#aed6f1]:
   [
   !Server_to_Client_TLS( $Server, ~browser_ID_TLS, <'show', message>
   ),
   !St_Browser_Session( ~browserID, $Server, ~browser_ID_TLS ),
   !St_Browser_Init( ~browserID, $User )
   ]
  -->
   [ Browser_Shows_User( ~browserID, $User, $Server, message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_TLS_Session:
   [ !St_Browser_Init( ~browserID, $User ), Fr( ~browser_ID_TLS ) ]
  --[
  TLS_Hello( ~browserID, $Server ),
  BrowserServerSession( ~browserID, $Server, ~browser_ID_TLS )
  ]->
   [
   !St_Browser_Session( ~browserID, $Server, ~browser_ID_TLS ),
   !St_Server_Session( $Server, ~browser_ID_TLS )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_Adversary_TLS_Session[color=#f5b7b1]:
   [ In( $Server ), Fr( ~browserID ), Fr( ~browser_ID_TLS ) ]
  --[ AdversaryAction( ) ]->
   [
   !St_Server_Session( $Server, ~browser_ID_TLS ),
   !Adversary_Session_TLS( ~browserID, $Server, ~browser_ID_TLS )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Send_Adversary_TLS[color=#f5b7b1]:
   [
   !Adversary_Session_TLS( browserID, $Server, browser_ID_TLS ),
   In( message )
   ]
  --[ AdversaryAction( ) ]->
   [ !Client_to_Server_TLS( browser_ID_TLS, $Server, message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Receive_Adversary_TLS[color=#f5b7b1]:
   [
   !Adversary_Session_TLS( browserID, $Server, browser_ID_TLS ),
   !Server_to_Client_TLS( $Server, browser_ID_TLS, message )
   ]
  --[ Adversary_receives( message ), AdversaryAction( ) ]->
   [ Out( message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Compromised_IdP_leaks_Signing_Key[color=#f5b7b1]:
   [ !St_IdP_Init( $IdP ), !Ltk( $IdP, ~ltk ) ]
  --[ Is_Compromised( $IdP ), AdversaryAction( ) ]->
   [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Compromised_Server_receives[color=#f5b7b1]:
   [
   !Client_to_Server_TLS( ~browser_ID_TLS, $Server, message ),
   !St_Server_Session( $Server, ~browser_ID_TLS )
   ]
  --[
  Adversary_receives( message ), AdversaryAction( ),
  Is_Compromised( $Server )
  ]->
   [ Out( message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Compromised_Server_sends[color=#f5b7b1]:
   [ !St_Server_Session( $Server, ~browser_ID_TLS ), In( message ) ]
  --[ AdversaryAction( ), Is_Compromised( $Server ) ]->
   [ !Server_to_Client_TLS( $Server, ~browser_ID_TLS, message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) User_registers_at_IdP[color=#f9e79f]:
   [ Fr( ~userSecret ), Fr( ~skU ) ]
  --[
  UserRegisters( ~userSecret ),
  UserID_belongs_To( $userID, $User, $IdP ),
  Unique( <$userID, $IdP> )
  ]->
   [
   !User_registration_at_IdP( $User, $IdP, ~userSecret, $userID,
                              pk(~skU)
   ),
   Out( pk(~skU) ), Out( ~skU )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Adversary_registers_at_IdP[color=#f9e79f]:
   [ Fr( ~userSecretAdv ), Fr( ~skUAdv ) ]
  --[
  UserID_belongs_To( $userID, $Adversary, $IdP ),
  AdversaryRegisters( $userID ), Unique( <$userID, $IdP> ),
  AdversaryAction( )
  ]->
   [
   !User_registration_at_IdP( $Adversary, $IdP, ~userSecretAdv,
                              $userID, pk(~skUAdv)
   ),
   Out( ~userSecretAdv ), Out( pk(~skUAdv) ), Out( ~skUAdv )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Initialization_IdP[color=#f9e79f]:
   [ Fr( ~ltk ) ]
  --[ IdPInitializes( $IdP ), GoodKey( pk(~ltk) ) ]->
   [ !St_IdP_Init( $IdP ), !Ltk( $IdP, ~ltk ), !Pk( $IdP, pk(~ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Registration_RP[color=#f9e79f]:
   [ !St_IdP_Init( $IdP ), !Ltk( $IdP, ~ltk ) ]
  --[
  Neq( $RP, $IdP ), RPRegisters( $RP, $IdP ), Not_an_IdP( $RP ),
  UriBelongsTo( $redirect_uri_RP, $RP ),
  ClientIDBelongsTo( $client_id, $IdP, $RP ),
  Unique( <$client_id, $IdP> )
  ]->
   [
   Out( <<'client_id_binding', $RP, $client_id, $redirect_uri_RP>, 
         sign(<'client_id_binding', $RP, $client_id, $redirect_uri_RP>, '0',
              ~ltk)
        >
   ),
   !St_RP_Registered( $RP, $IdP, $client_id, $redirect_uri_RP,
                      <'client_id_binding', $RP, $client_id, $redirect_uri_RP>,
                      sign(<'client_id_binding', $RP, $client_id, $redirect_uri_RP>, '0',
                           ~ltk)
   ),
   !Uri_belongs_to( $redirect_uri_RP, $RP )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) User_starts_Session:
   [
   !St_Browser_Init( ~browserID, $User ),
   !User_registration_at_IdP( $User, $IdP, ~userSecret, $userID, pkU )
   ]
  --[
  UserStarts( ~browserID, $User ),
  UserStartsSession( $User, $RP, $IdP )
  ]->
   [
   St_User_1( $User, ~browserID, $IdP, $RP ),
   User_InputTo_Browser( $User, ~browserID,
                         <'userAction', $RP, 'loginWith', $IdP>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) AuthRequest_RP:
   [
   !Client_to_Server_TLS( ~browser_ID_TLS, $RP, <'loginWith', $IdP> ),
   !St_Server_Session( $RP, ~browser_ID_TLS ),
   !St_RP_Registered( $RP, $IdP, $client_id, $redirect_uri_RP,
                      client_id_binding, binding_sig
   ),
   Fr( ~nonce )
   ]
  --[ AuthRequestRP( ~nonce ) ]->
   [
   !Server_to_Client_TLS( $RP, ~browser_ID_TLS,
                          <'authRequestForBrowser', 
                           <'client_id_binding', client_id_binding>, 
                           <'binding_sig', binding_sig>, <'nonce', ~nonce>, 'IdP', $IdP>
   ),
   St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
            client_id_binding, ~nonce
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Browser_POIDC_Show_Consent_Dialogue[color=#aed6f1]:
   [
   !Server_to_Client_TLS( $RP, ~browser_ID_TLS_RP,
                          <'authRequestForBrowser', 
                           <'client_id_binding', 'client_id_binding', $RPFromBinding, 
                            clientID, redirect_uri_RP>, 
                           <'binding_sig', binding_sig>, <'nonce', nonce>, 'IdP', $IdP>
   ),
   !St_Browser_Init( ~browserID, $User ),
   !St_Browser_Session( ~browserID, $RP, ~browser_ID_TLS_RP ),
   !Pk( $IdP, pk_idp )
   ]
  --[
  ConsentDialogue( ),
  Verified( binding_sig, e1(binding_sig), pk(e3(binding_sig)),
            <'client_id_binding', $RPFromBinding, clientID, redirect_uri_RP>,
            pk_idp, true
  )
  ]->
   [
   Browser_Shows_User( ~browserID, $User, $IdP,
                       <'pleaseGiveConsent', $RPFromBinding, $IdP>
   ),
   St_Browser_1( ~browserID, nonce,
                 <'client_id_binding', $RPFromBinding, clientID, redirect_uri_RP>,
                 $IdP
   )
   ]

  /*
  rule (modulo AC) Browser_POIDC_Show_Consent_Dialogue[color=#aed6f1]:
     [
     !Server_to_Client_TLS( $RP, ~browser_ID_TLS_RP,
                            <'authRequestForBrowser', 
                             <'client_id_binding', 'client_id_binding', $RPFromBinding, 
                              clientID, redirect_uri_RP>, 
                             <'binding_sig', binding_sig>, <'nonce', nonce>, 'IdP', $IdP>
     ),
     !St_Browser_Init( ~browserID, $User ),
     !St_Browser_Session( ~browserID, $RP, ~browser_ID_TLS_RP ),
     !Pk( $IdP, pk_idp )
     ]
    --[
    ConsentDialogue( ),
    Verified( binding_sig, z, pk(z.1),
              <'client_id_binding', $RPFromBinding, clientID, redirect_uri_RP>,
              pk_idp, true
    )
    ]->
     [
     Browser_Shows_User( ~browserID, $User, $IdP,
                         <'pleaseGiveConsent', $RPFromBinding, $IdP>
     ),
     St_Browser_1( ~browserID, nonce,
                   <'client_id_binding', $RPFromBinding, clientID, redirect_uri_RP>,
                   $IdP
     )
     ]
    variants (modulo AC)
    1. binding_sig
             = binding_sig.21
       z     = e1(binding_sig.21)
       z.1   = e3(binding_sig.21)
    
    2. binding_sig
             = sign(z.32, x.45, z.33)
       z     = z.32
       z.1   = z.33
  */

rule (modulo E) User_Gives_Consent:
   [
   Browser_Shows_User( ~browserID, $User, $IdP,
                       <'pleaseGiveConsent', $RP, $IdP>
   ),
   St_User_1( $User, ~browserID, $IdP, $RP )
   ]
  --[ UserGivesConsent( $User, $RP, $IdP ) ]->
   [
   User_InputTo_Browser( $User, ~browserID,
                         <'consentGiven', $RP, $IdP>
   ),
   St_User_2( $User, ~browserID, $IdP, $RP )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Browser_POIDC_Auth_at_IdP_and_Send_AuthRequest[color=#aed6f1]:
   [
   User_InputTo_Browser( $User, ~browserID,
                         <'consentGiven', $RPFromBinding, $IdP>
   ),
   !St_Browser_Init( ~browserID, $User ),
   !St_Browser_Session( ~browserID, $IdP, ~browser_ID_TLS_IdP ),
   St_Browser_1( ~browserID, nonce,
                 <'client_id_binding', $RPFromBinding, $client_id, $redirect_uri_RP
                 >,
                 $IdP
   ),
   Fr( ~rnd ),
   !User_registration_at_IdP( $User, $IdP, ~userSecret, $userID, pkU )
   ]
  -->
   [
   !Client_to_Server_TLS( ~browser_ID_TLS_IdP, $IdP,
                          <<'userAuthenticate', $userID, ~userSecret>, 'maskedAuthRequest', 
                           raenc(<$client_id, nonce>, ~rnd, pkU)>
   ),
   St_Browser_2( ~browserID,
                 <'client_id_binding', $RPFromBinding, $client_id, $redirect_uri_RP
                 >,
                 $IdP, ~rnd, raenc(<$client_id, nonce>, ~rnd, pkU)
   ),
   Out( ~rnd )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Authentication_Response_IdP:
   [
   !Client_to_Server_TLS( ~browser_ID_TLS, $IdP,
                          <<'userAuthenticate', $userID, ~userSecret>, 'maskedAuthRequest', 
                           masked_client_id>
   ),
   !User_registration_at_IdP( $User, $IdP, ~userSecret, $userID, pkU
   ),
   !St_IdP_Init( $IdP ), !St_Server_Session( $IdP, ~browser_ID_TLS ),
   !Ltk( $IdP, ~ltk )
   ]
  -->
   [
   !Server_to_Client_TLS( $IdP, ~browser_ID_TLS,
                          <'sendToRedirectURIFromBinding', 
                           <'private_id_token', <'iss', $IdP>, <'sub', $userID>, 
                            <'private_aud', masked_client_id>, 'user_pk', pkU>, 
                           sign(<'private_id_token', <'iss', $IdP>, <'sub', $userID>, 
                                 <'private_aud', masked_client_id>, 'user_pk', pkU>,
                                '0', ~ltk)
                          >
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Browser_POIDC_Send_IdToken_to_URI_from_Binding[color=#aed6f1]:
   [
   !Server_to_Client_TLS( $IdP, ~browser_ID_TLS_IdP,
                          <'sendToRedirectURIFromBinding', 
                           <'private_id_token', <'iss', iss>, <'sub', sub>, 
                            <'private_aud', masked_client_id>, 'user_pk', pkU>, 
                           id_token_sig>
   ),
   !St_Browser_Session( ~browserID, $IdP, ~browser_ID_TLS_IdP ),
   !St_Browser_Init( ~browserID, $User ),
   !St_Browser_Session( ~browserID, $RP, ~browser_ID_TLS_RP ),
   !Uri_belongs_to( $redirect_uri_RP, $RP ),
   St_Browser_2( ~browserID,
                 <'client_id_binding', $RPFromBinding, $client_id, $redirect_uri_RP
                 >,
                 $IdP, ~rnd, masked_client_id
   )
   ]
  -->
   [
   !Client_to_Server_TLS( ~browser_ID_TLS_RP, $RP,
                          <'AuthResponse', 
                           <'private_id_token', <'iss', iss>, <'sub', sub>, 
                            <'private_aud', masked_client_id>, 'user_pk', pkU>, 
                           id_token_sig, ~rnd>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) RP_gets_idToken:
   [
   !Client_to_Server_TLS( ~browser_ID_TLS, $RP,
                          <'AuthResponse', 
                           <'private_id_token', <'iss', $IdP>, <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                            pkU>, 
                           id_token_sig, rnd>
   ),
   St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
            client_id_binding, ~nonce
   ),
   !Pk( $IdP, pk_idp )
   ]
  --[
  Finish( ), RP_gets_IDToken( $RP, $userID, $IdP ),
  Verified( id_token_sig, e1(id_token_sig), pk(e3(id_token_sig)),
            <'private_id_token', <'iss', $IdP>, <'sub', $userID>, 
             <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
             pkU>,
            pk_idp, true
  ),
  RPgetsIDToken_FromBrowser( $RP, ~browser_ID_TLS, $IdP )
  ]->
   [ ]

  /*
  rule (modulo AC) RP_gets_idToken:
     [
     !Client_to_Server_TLS( ~browser_ID_TLS, $RP,
                            <'AuthResponse', 
                             <'private_id_token', <'iss', $IdP>, <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                              pkU>, 
                             id_token_sig, rnd>
     ),
     St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
              client_id_binding, ~nonce
     ),
     !Pk( $IdP, pk_idp )
     ]
    --[
    Finish( ), RP_gets_IDToken( $RP, $userID, $IdP ),
    Verified( id_token_sig, z, pk(z.1),
              <'private_id_token', <'iss', $IdP>, <'sub', $userID>, 
               <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
               pkU>,
              pk_idp, true
    ),
    RPgetsIDToken_FromBrowser( $RP, ~browser_ID_TLS, $IdP )
    ]->
     [ ]
    variants (modulo AC)
    1. id_token_sig
             = id_token_sig.22
       z     = e1(id_token_sig.22)
       z.1   = e3(id_token_sig.22)
    
    2. id_token_sig
             = sign(z.33, x.46, z.34)
       z     = z.33
       z.1   = z.34
  */

restriction uniqueness:
  "∀ x #i #j. ((Unique( x ) @ #i) ∧ (Unique( x ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction uri_belongs_to_only_one_server:
  "∀ uri server1 server2 #i #j.
    ((UriBelongsTo( uri, server1 ) @ #i) ∧
     (UriBelongsTo( uri, server2 ) @ #j)) ⇒
    (server1 = server2)"
  // safety formula

restriction Inequality_RP_IdP:
  "∀ x #i. (Neq( x, x ) @ #i) ⇒ (⊥)"
  // safety formula

restriction registered_RP_shouldnt_be_an_IdP:
  "∀ rp #i.
    (Not_an_IdP( rp ) @ #i) ⇒ (¬(∃ #j. IdPInitializes( rp ) @ #j))"
  // safety formula

restriction IdP_initializes_Once:
  "∀ idp #i #j.
    ((IdPInitializes( idp ) @ #i) ∧ (IdPInitializes( idp ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

restriction RP_registers_at_IdP_Once:
  "∀ rp idp #i #j.
    ((RPRegisters( rp, idp ) @ #i) ∧ (RPRegisters( rp, idp ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

restriction User_has_only_one_account_at_IdP:
  "∀ uid1 uid2 usr idp #i #j.
    ((UserID_belongs_To( uid1, usr, idp ) @ #i) ∧
     (UserID_belongs_To( uid2, usr, idp ) @ #j)) ⇒
    ((#i = #j) ∧ (uid1 = uid2))"
  // safety formula

restriction Correctness:
  "∀ sig tm tpk #i #j.
    ((GoodKey( tpk ) @ #i) ∧
     (Verified( sig, tm, tpk, tm, tpk, false ) @ #j)) ⇒
    (⊥)"
  // safety formula

restriction NoForgery:
  "∀ tpk tm spk sm sig #i #j.
    ((GoodKey( tpk ) @ #i) ∧
     (Verified( sig, sm, spk, tm, tpk, true ) @ #j)) ⇒
    ((sm = tm) ∧ (spk = tpk))"
  // safety formula

restriction Consistency:
  "∀ sig sm spk tm tpk r1 r2 #i #j.
    ((Verified( sig, sm, spk, tm, tpk, r1 ) @ #i) ∧
     (Verified( sig, sm, spk, tm, tpk, r2 ) @ #j)) ⇒
    (r1 = r2)"
  // safety formula

lemma executable:
  exists-trace
  "∃ #i.
    (((((((((Finish( ) @ #i) ∧
            (∀ x y #i.1 #j.
              ((BrowserInits( x ) @ #i.1) ∧ (BrowserInits( y ) @ #j)) ⇒
              (x = y))) ∧
           (∀ x y #i.1 #j.
             ((UserRegisters( x ) @ #i.1) ∧ (UserRegisters( y ) @ #j)) ⇒
             (x = y))) ∧
          (∀ x y #i.1 #j.
            ((IdPInitializes( x ) @ #i.1) ∧ (IdPInitializes( y ) @ #j)) ⇒
            (x = y))) ∧
         (∀ rp1 rp2 idp #i.1 #j.
           ((RPRegisters( rp1, idp ) @ #i.1) ∧
            (RPRegisters( rp2, idp ) @ #j)) ⇒
           (rp1 = rp2))) ∧
        (∀ x y a b #i.1 #j.
          ((UserStarts( x, a ) @ #i.1) ∧ (UserStarts( y, b ) @ #j)) ⇒
          (((x = y) ∧ (a = b)) ∧ (#i.1 = #j)))) ∧
       (∀ x y #i.1 #j.
         ((TLS_Hello( x, y ) @ #i.1) ∧ (TLS_Hello( x, y ) @ #j)) ⇒
         (#i.1 = #j))) ∧
      (∀ x y #i.1 #j.
        ((AuthRequestRP( x ) @ #i.1) ∧ (AuthRequestRP( y ) @ #j)) ⇒
        (x = y))) ∧
     (∀ #i.1 #j.
       ((ConsentDialogue( ) @ #i.1) ∧ (ConsentDialogue( ) @ #j)) ⇒
       (#i.1 = #j))) ∧
    (¬(∃ #i.1. AdversaryAction( ) @ #i.1))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i.
  (Finish( ) @ #i)
 ∧
  (∀ x y #i.1 #j.
    (BrowserInits( x ) @ #i.1) ∧ (BrowserInits( y ) @ #j) ⇒ x = y) ∧
  (∀ x y #i.1 #j.
    (UserRegisters( x ) @ #i.1) ∧ (UserRegisters( y ) @ #j) ⇒ x = y) ∧
  (∀ x y #i.1 #j.
    (IdPInitializes( x ) @ #i.1) ∧ (IdPInitializes( y ) @ #j)
   ⇒
    x = y) ∧
  (∀ rp1 rp2 idp #i.1 #j.
    (RPRegisters( rp1, idp ) @ #i.1) ∧ (RPRegisters( rp2, idp ) @ #j)
   ⇒
    rp1 = rp2) ∧
  (∀ x y a b #i.1 #j.
    (UserStarts( x, a ) @ #i.1) ∧ (UserStarts( y, b ) @ #j)
   ⇒
    (x = y) ∧ (a = b) ∧ (#i.1 = #j)) ∧
  (∀ x y #i.1 #j.
    (TLS_Hello( x, y ) @ #i.1) ∧ (TLS_Hello( x, y ) @ #j)
   ⇒
    #i.1 = #j) ∧
  (∀ x y #i.1 #j.
    (AuthRequestRP( x ) @ #i.1) ∧ (AuthRequestRP( y ) @ #j) ⇒ x = y) ∧
  (∀ #i.1 #j.
    (ConsentDialogue( ) @ #i.1) ∧ (ConsentDialogue( ) @ #j)
   ⇒
    #i.1 = #j) ∧
  (∀ #i.1. (AdversaryAction( ) @ #i.1) ⇒ ⊥)"
*/
simplify
solve( !Client_to_Server_TLS( ~browser_ID_TLS, $RP,
                              <'AuthResponse', 
                               <'private_id_token', <'iss', $IdP>, <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                                pkU>, 
                               id_token_sig, rnd>
       ) ▶₀ #i )
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_17
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #i )
    case AuthRequest_RP
    solve( !Pk( $IdP, pk_idp ) ▶₂ #i )
      case Initialization_IdP
      SOLVED // trace found
    qed
  qed
qed

lemma User_Authentication:
  all-traces
  "∀ rp uid idp #finish.
    ((((RP_gets_IDToken( rp, uid, idp ) @ #finish) ∧
       (¬(∃ #j. Is_Compromised( idp ) @ #j))) ∧
      (¬(∃ #j. Is_Compromised( rp ) @ #j))) ∧
     (¬(∃ #j. AdversaryRegisters( uid ) @ #j))) ⇒
    (∃ usr browserSession browser #k #start #consent #m #n.
      (((((((UserGivesConsent( usr, rp, idp ) @ #consent) ∧
            (UserStartsSession( usr, rp, idp ) @ #start)) ∧
           (UserID_belongs_To( uid, usr, idp ) @ #k)) ∧
          (RPgetsIDToken_FromBrowser( rp, browserSession, idp ) @ #finish)) ∧
         (BrowserUser( browser, usr ) @ #n)) ∧
        (BrowserServerSession( browser, rp, browserSession ) @ #m)) ∧
       (#consent < #finish)) ∧
      (#start < #consent))"
/*
guarded formula characterizing all counter-examples:
"∃ rp uid idp #finish.
  (RP_gets_IDToken( rp, uid, idp ) @ #finish)
 ∧
  (∀ #j. (Is_Compromised( idp ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (Is_Compromised( rp ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (AdversaryRegisters( uid ) @ #j) ⇒ ⊥) ∧
  (∀ usr browserSession browser #k #start #consent #m #n.
    (UserGivesConsent( usr, rp, idp ) @ #consent) ∧
    (UserStartsSession( usr, rp, idp ) @ #start) ∧
    (UserID_belongs_To( uid, usr, idp ) @ #k) ∧
    (RPgetsIDToken_FromBrowser( rp, browserSession, idp ) @ #finish) ∧
    (BrowserUser( browser, usr ) @ #n) ∧
    (BrowserServerSession( browser, rp, browserSession ) @ #m)
   ⇒
    ((¬(#consent < #finish)) ∨ (¬(#start < #consent))))"
*/
simplify
solve( !Client_to_Server_TLS( ~browser_ID_TLS, $RP,
                              <'AuthResponse', 
                               <'private_id_token', <'iss', $IdP>, <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                                pkU>, 
                               id_token_sig, rnd>
       ) ▶₀ #finish )
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_01
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.42 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.42 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.44 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_04
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.43 )
        case Receive_Adversary_TLS
        solve( !KU( sign(<'client_id_binding', $RPFromBinding, $client_id, 
                          $redirect_uri_RP.1>,
                         x.1, ~ltk.2)
               ) @ #vk.40 )
          case Receive_Adversary_TLS_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_sign
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_1
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_2
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_3
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_02
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_03
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_04
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.48 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.48 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.50 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_04
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.49 )
        case Receive_Adversary_TLS
        solve( !KU( sign(<'client_id_binding', $RPFromBinding, $client_id, 
                          $redirect_uri_RP.1>,
                         x.1, ~ltk.2)
               ) @ #vk.44 )
          case Receive_Adversary_TLS_case_1
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.1, ~ltk.2)
                 ) @ #vk.57 )
            case Receive_Adversary_TLS_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.26 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case Receive_Adversary_TLS_case_2
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.2, ~ltk.2)
                 ) @ #vk.57 )
            case Receive_Adversary_TLS_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case Receive_Adversary_TLS_case_3
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.2, ~ltk.2)
                 ) @ #vk.57 )
            case Receive_Adversary_TLS_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.59 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.59 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.59 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.59 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case Registration_RP_case_1
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.1, ~ltk.2)
                 ) @ #vk.56 )
            case Registration_RP_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.26 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.60 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.62 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.62 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.62 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.62 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.60 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.60 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.60 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case Registration_RP_case_2
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.2, ~ltk.2)
                 ) @ #vk.56 )
            case Registration_RP_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case Registration_RP_case_3
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.2, ~ltk.2)
                 ) @ #vk.56 )
            case Registration_RP_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case c_sign
          solve( !KU( ~ltk.2 ) @ #vk.61 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'client_id_binding', $RPFromBinding, clientID, 
                              redirect_uri_RP.2>,
                             x.2, ~ltk.1)
                   ) @ #vk.57 )
              case Receive_Adversary_TLS_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case reSign_case_1
          solve( !KU( ~ltk.2 ) @ #vk.61 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'client_id_binding', $RPFromBinding, clientID, 
                              redirect_uri_RP.2>,
                             x.2, ~ltk.1)
                   ) @ #vk.57 )
              case Receive_Adversary_TLS_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case reSign_case_2
          solve( !KU( ~ltk.2 ) @ #vk.61 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'client_id_binding', $RPFromBinding, clientID, 
                              redirect_uri_RP.2>,
                             x.2, ~ltk.1)
                   ) @ #vk.57 )
              case Receive_Adversary_TLS_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case reSign_case_3
          solve( !KU( ~ltk.2 ) @ #vk.61 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'client_id_binding', $RPFromBinding, clientID, 
                              redirect_uri_RP.2>,
                             x.2, ~ltk.1)
                   ) @ #vk.57 )
              case Receive_Adversary_TLS_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                                'user_pk', pk(~skU)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.72 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.72 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.72 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.72 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_05
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.39 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.39 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.41 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_04
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.40 )
        case Receive_Adversary_TLS
        solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                          $redirect_uri_RP.1>,
                         x.1, ~ltk.2)
               ) @ #vk.37 )
          case Receive_Adversary_TLS_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.46 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.46 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.46 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.46 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_sign
          solve( !KU( ~ltk.2 ) @ #vk.47 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.49 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.49 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.49 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.49 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_1
          solve( !KU( ~ltk.2 ) @ #vk.47 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.51 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.51 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.51 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.51 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_2
          solve( !KU( ~ltk.2 ) @ #vk.47 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_3
          solve( !KU( ~ltk.2 ) @ #vk.47 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_06
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.39 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.39 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.41 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_04
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.40 )
        case Receive_Adversary_TLS
        solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                          $redirect_uri_RP.1>,
                         x.1, ~ltk.2)
               ) @ #vk.37 )
          case Receive_Adversary_TLS_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                            'user_pk', pk(~skU)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_sign
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_1
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_2
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_3
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skU))>, 
                              'user_pk', pk(~skU)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_07
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_08
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_09
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_10
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_11
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_12
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_13
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.42 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.42 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.44 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_04
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.43 )
        case Receive_Adversary_TLS
        solve( !KU( sign(<'client_id_binding', $RPFromBinding, $client_id, 
                          $redirect_uri_RP.1>,
                         x.1, ~ltk.2)
               ) @ #vk.40 )
          case Receive_Adversary_TLS_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_sign
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_1
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_2
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_3
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_14
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_15
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_16
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.48 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.48 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.50 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_04
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.49 )
        case Receive_Adversary_TLS
        solve( !KU( sign(<'client_id_binding', $RPFromBinding, $client_id, 
                          $redirect_uri_RP.1>,
                         x.1, ~ltk.2)
               ) @ #vk.44 )
          case Receive_Adversary_TLS_case_1
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.1, ~ltk.2)
                 ) @ #vk.57 )
            case Receive_Adversary_TLS_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.26 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case Receive_Adversary_TLS_case_2
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.2, ~ltk.2)
                 ) @ #vk.57 )
            case Receive_Adversary_TLS_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case Receive_Adversary_TLS_case_3
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.2, ~ltk.2)
                 ) @ #vk.57 )
            case Receive_Adversary_TLS_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Receive_Adversary_TLS_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.59 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.59 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.59 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.59 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case Registration_RP_case_1
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.1, ~ltk.2)
                 ) @ #vk.56 )
            case Registration_RP_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.26 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.60 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.62 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.62 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.62 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.62 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.60 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.60 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.60 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case Registration_RP_case_2
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.2, ~ltk.2)
                 ) @ #vk.56 )
            case Registration_RP_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.55 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.61 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case Registration_RP_case_3
          solve( !KU( sign(<'client_id_binding', $RP, clientID, 
                            redirect_uri_RP.2>,
                           x.2, ~ltk.2)
                 ) @ #vk.56 )
            case Registration_RP_case_1
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_2
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case Registration_RP_case_3
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk.1 ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case c_sign
          solve( !KU( ~ltk.2 ) @ #vk.61 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'client_id_binding', $RPFromBinding, clientID, 
                              redirect_uri_RP.2>,
                             x.2, ~ltk.1)
                   ) @ #vk.57 )
              case Receive_Adversary_TLS_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.63 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.29 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.64 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case reSign_case_1
          solve( !KU( ~ltk.2 ) @ #vk.61 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'client_id_binding', $RPFromBinding, clientID, 
                              redirect_uri_RP.2>,
                             x.2, ~ltk.1)
                   ) @ #vk.57 )
              case Receive_Adversary_TLS_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.65 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case reSign_case_2
          solve( !KU( ~ltk.2 ) @ #vk.61 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'client_id_binding', $RPFromBinding, clientID, 
                              redirect_uri_RP.2>,
                             x.2, ~ltk.1)
                   ) @ #vk.57 )
              case Receive_Adversary_TLS_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.66 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case reSign_case_3
          solve( !KU( ~ltk.2 ) @ #vk.61 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'client_id_binding', $RPFromBinding, clientID, 
                              redirect_uri_RP.2>,
                             x.2, ~ltk.1)
                   ) @ #vk.57 )
              case Receive_Adversary_TLS_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Receive_Adversary_TLS_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.67 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Registration_RP_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.69 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.30 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.68 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_1
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.70 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_2
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.71 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case reSign_case_3
              solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                                <'sub', $userID>, 
                                <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                                'user_pk', pk(~skUAdv)>,
                               x, ~ltk)
                     ) @ #vk.31 )
                case Receive_Adversary_TLS_case_1
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_2
                by contradiction /* from formulas */
              next
                case Receive_Adversary_TLS_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltk ) @ #vk.72 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_1
                solve( !KU( ~ltk ) @ #vk.72 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_2
                solve( !KU( ~ltk ) @ #vk.72 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              next
                case reSign_case_3
                solve( !KU( ~ltk ) @ #vk.72 )
                  case Compromised_IdP_leaks_Signing_Key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_17
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.39 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.39 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.41 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_04
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.40 )
        case Receive_Adversary_TLS
        solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                          $redirect_uri_RP.1>,
                         x.1, ~ltk.2)
               ) @ #vk.37 )
          case Receive_Adversary_TLS_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.46 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.46 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.46 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.46 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.47 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_sign
          solve( !KU( ~ltk.2 ) @ #vk.47 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.49 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.49 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.49 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.49 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_1
          solve( !KU( ~ltk.2 ) @ #vk.47 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.51 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.51 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.51 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.51 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_2
          solve( !KU( ~ltk.2 ) @ #vk.47 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.52 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_3
          solve( !KU( ~ltk.2 ) @ #vk.47 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.53 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_18
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.39 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.39 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.41 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_04
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.40 )
        case Receive_Adversary_TLS
        solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                          $redirect_uri_RP.1>,
                         x.1, ~ltk.2)
               ) @ #vk.37 )
          case Receive_Adversary_TLS_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Receive_Adversary_TLS_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_1
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.51 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_2
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case Registration_RP_case_3
          solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                            <'sub', $userID>, 
                            <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                            'user_pk', pk(~skUAdv)>,
                           x, ~ltk)
                 ) @ #vk.24 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_sign
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.54 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_1
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.56 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_2
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.57 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case reSign_case_3
          solve( !KU( ~ltk.2 ) @ #vk.52 )
            case Compromised_IdP_leaks_Signing_Key
            solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                              <'sub', $userID>, 
                              <'private_aud', raenc(<$client_id, ~nonce>, ~rnd, pk(~skUAdv))>, 
                              'user_pk', pk(~skUAdv)>,
                             x, ~ltk)
                   ) @ #vk.27 )
              case Receive_Adversary_TLS_case_1
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_2
              by contradiction /* from formulas */
            next
              case Receive_Adversary_TLS_case_3
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_1
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_2
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            next
              case reSign_case_3
              solve( !KU( ~ltk ) @ #vk.58 )
                case Compromised_IdP_leaks_Signing_Key
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_19
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_20
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_21
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_22
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_23
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_24
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP
    by contradiction /* from formulas */
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_25
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_26
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_27
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_28
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.27 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.27 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.27 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_04
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.27 )
        case Receive_Adversary_TLS
        solve( !KU( sign(<'client_id_binding', $RPFromBinding, $client_id, 
                          $redirect_uri_RP.1>,
                         x, ~z)
               ) @ #vk.22 )
          case Receive_Adversary_TLS_case_1
          by contradiction /* from formulas */
        next
          case Receive_Adversary_TLS_case_2
          by contradiction /* from formulas */
        next
          case Receive_Adversary_TLS_case_3
          by contradiction /* from formulas */
        next
          case Registration_RP_case_1
          by contradiction /* from formulas */
        next
          case Registration_RP_case_2
          by contradiction /* from formulas */
        next
          case Registration_RP_case_3
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~z ) @ #vk.40 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        next
          case reSign_case_1
          solve( !KU( ~z ) @ #vk.40 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        next
          case reSign_case_2
          solve( !KU( ~z ) @ #vk.40 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        next
          case reSign_case_3
          solve( !KU( ~z ) @ #vk.40 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_29
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.18 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.18 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.18 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_04
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.18 )
        case Receive_Adversary_TLS
        solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                          $redirect_uri_RP.1>,
                         x, ~z)
               ) @ #vk.15 )
          case Receive_Adversary_TLS_case_1
          by contradiction /* from formulas */
        next
          case Receive_Adversary_TLS_case_2
          by contradiction /* from formulas */
        next
          case Receive_Adversary_TLS_case_3
          by contradiction /* from formulas */
        next
          case Registration_RP_case_1
          by contradiction /* from formulas */
        next
          case Registration_RP_case_2
          by contradiction /* from formulas */
        next
          case Registration_RP_case_3
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~z ) @ #vk.26 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        next
          case reSign_case_1
          solve( !KU( ~z ) @ #vk.26 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        next
          case reSign_case_2
          solve( !KU( ~z ) @ #vk.26 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        next
          case reSign_case_3
          solve( !KU( ~z ) @ #vk.26 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_30
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.18 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.18 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_4
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_5
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_6
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_7
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.18 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_04
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~nonce ) @ #vk.18 )
        case Receive_Adversary_TLS
        solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                          $redirect_uri_RP.1>,
                         x, ~z)
               ) @ #vk.15 )
          case Receive_Adversary_TLS_case_1
          by contradiction /* from formulas */
        next
          case Receive_Adversary_TLS_case_2
          by contradiction /* from formulas */
        next
          case Receive_Adversary_TLS_case_3
          by contradiction /* from formulas */
        next
          case Registration_RP_case_1
          by contradiction /* from formulas */
        next
          case Registration_RP_case_2
          by contradiction /* from formulas */
        next
          case Registration_RP_case_3
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~z ) @ #vk.30 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        next
          case reSign_case_1
          solve( !KU( ~z ) @ #vk.30 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        next
          case reSign_case_2
          solve( !KU( ~z ) @ #vk.30 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        next
          case reSign_case_3
          solve( !KU( ~z ) @ #vk.30 )
            case Compromised_IdP_leaks_Signing_Key
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_31
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_32
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_33
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_34
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_35
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_36
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_37
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_38
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_39
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_40
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_41
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_42
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_43
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_44
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_45
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_46
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_47
  by contradiction /* from formulas */
next
  case Browser_POIDC_Send_IdToken_to_URI_from_Binding_case_48
  by contradiction /* from formulas */
next
  case Browser_Redirects_To_URI
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                        <'sub', $userID>, 
                        <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                        pkU>,
                       x, ~ltk)
             ) @ #vk.25 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        solve( !KU( ~nonce ) @ #vk.55 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_04
        solve( !KU( ~nonce ) @ #vk.46 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_05
        solve( !KU( ~nonce ) @ #vk.48 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        solve( !KU( ~nonce ) @ #vk.56 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_16
        solve( !KU( ~nonce ) @ #vk.47 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_17
        solve( !KU( ~nonce ) @ #vk.49 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_18
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_19
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_20
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_21
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_22
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_23
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_24
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_25
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_26
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_27
        solve( !KU( ~nonce ) @ #vk.57 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_28
        solve( !KU( ~nonce ) @ #vk.48 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_29
        solve( !KU( ~nonce ) @ #vk.50 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_30
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_31
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_32
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_33
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_34
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_35
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_36
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_1
        solve( !KU( ~userSecret.1 ) @ #vk.32 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_2
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_3
        solve( !KU( ~userSecret.1 ) @ #vk.33 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_4
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_5
        solve( !KU( ~userSecret.1 ) @ #vk.34 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_6
        by contradiction /* from formulas */
      next
        case c_sign
        solve( !KU( ~ltk ) @ #vk.28 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_1
        solve( !KU( ~ltk ) @ #vk.28 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_2
        solve( !KU( ~ltk ) @ #vk.28 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_3
        solve( !KU( ~ltk ) @ #vk.28 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                        <'sub', $userID>, 
                        <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                        pkU>,
                       x, ~ltk)
             ) @ #vk.25 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        solve( !KU( ~nonce ) @ #vk.55 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_03
        solve( !KU( ~nonce ) @ #vk.46 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_04
        solve( !KU( ~nonce ) @ #vk.48 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        solve( !KU( ~nonce ) @ #vk.56 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_15
        solve( !KU( ~nonce ) @ #vk.47 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_16
        solve( !KU( ~nonce ) @ #vk.49 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_17
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_18
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_19
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_20
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_21
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_22
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_23
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_24
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_25
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_26
        solve( !KU( ~nonce ) @ #vk.57 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_27
        solve( !KU( ~nonce ) @ #vk.48 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_28
        solve( !KU( ~nonce ) @ #vk.50 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_29
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_30
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_31
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_32
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_33
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_34
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_35
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_36
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_1
        solve( !KU( ~userSecret.1 ) @ #vk.32 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_2
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_3
        solve( !KU( ~userSecret.1 ) @ #vk.33 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_4
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_5
        solve( !KU( ~userSecret.1 ) @ #vk.34 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_6
        by contradiction /* from formulas */
      next
        case c_sign
        solve( !KU( ~ltk ) @ #vk.28 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_1
        solve( !KU( ~ltk ) @ #vk.28 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_2
        solve( !KU( ~ltk ) @ #vk.28 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_3
        solve( !KU( ~ltk ) @ #vk.28 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                        <'sub', $userID>, 
                        <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                        pkU>,
                       x, ~ltk)
             ) @ #vk.28 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        solve( !KU( ~nonce ) @ #vk.60 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_04
        solve( !KU( ~nonce ) @ #vk.51 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_05
        solve( !KU( ~nonce ) @ #vk.53 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_17
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_18
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_19
        solve( !KU( ~nonce ) @ #vk.61 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_20
        solve( !KU( ~nonce ) @ #vk.52 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_21
        solve( !KU( ~nonce ) @ #vk.54 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_22
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_23
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_24
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_25
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_26
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_27
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_28
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_29
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_30
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_31
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_32
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_33
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_34
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_35
        solve( !KU( ~nonce ) @ #vk.62 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_36
        solve( !KU( ~nonce ) @ #vk.53 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_37
        solve( !KU( ~nonce ) @ #vk.55 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_38
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_39
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_40
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_41
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_42
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_43
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_44
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_45
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_46
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_47
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_48
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_1
        solve( !KU( ~userSecret ) @ #vk.37 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_2
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_3
        solve( !KU( ~userSecret ) @ #vk.38 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_4
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_5
        solve( !KU( ~userSecret ) @ #vk.39 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_6
        by contradiction /* from formulas */
      next
        case c_sign
        solve( !KU( ~ltk ) @ #vk.33 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_1
        solve( !KU( ~ltk ) @ #vk.33 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_2
        solve( !KU( ~ltk ) @ #vk.33 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_3
        solve( !KU( ~ltk ) @ #vk.33 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                        <'sub', $userID>, 
                        <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                        pkU>,
                       x, ~ltk)
             ) @ #vk.26 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        solve( !KU( ~nonce ) @ #vk.58 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RPFromBinding, $client_id, 
                            $redirect_uri_RP.1>,
                           x, ~ltk)
                 ) @ #vk.55 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.66 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.66 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.66 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.66 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_03
        solve( !KU( ~nonce ) @ #vk.49 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x, ~ltk)
                 ) @ #vk.47 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_04
        solve( !KU( ~nonce ) @ #vk.51 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x, ~ltk)
                 ) @ #vk.49 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.55 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.55 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.55 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.55 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        solve( !KU( ~nonce ) @ #vk.59 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RPFromBinding, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.56 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.67 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.67 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.67 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.67 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_11
        solve( !KU( ~nonce ) @ #vk.50 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.48 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_12
        solve( !KU( ~nonce ) @ #vk.52 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.50 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.56 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.56 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.56 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.56 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_17
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_18
        solve( !KU( ~nonce ) @ #vk.60 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RPFromBinding, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.57 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.68 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.68 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.68 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.68 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_19
        solve( !KU( ~nonce ) @ #vk.51 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.49 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_20
        solve( !KU( ~nonce ) @ #vk.53 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.51 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.57 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.57 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.57 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.57 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_21
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_22
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_23
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_24
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_1
        solve( !KU( ~userSecret ) @ #vk.35 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_2
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_3
        solve( !KU( ~userSecret ) @ #vk.36 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_4
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_5
        solve( !KU( ~userSecret ) @ #vk.37 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_6
        by contradiction /* from formulas */
      next
        case c_sign
        solve( !KU( ~ltk ) @ #vk.31 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_1
        solve( !KU( ~ltk ) @ #vk.31 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_2
        solve( !KU( ~ltk ) @ #vk.31 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_3
        solve( !KU( ~ltk ) @ #vk.31 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
next
  case Send_Adversary_TLS
  solve( St_RP_1( $RP, $IdP, $client_id, $redirect_uri_RP,
                  client_id_binding, ~nonce
         ) ▶₁ #finish )
    case AuthRequest_RP_case_1
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                        <'sub', $userID>, 
                        <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                        pkU>,
                       x, ~ltk)
             ) @ #vk.22 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        solve( !KU( ~nonce ) @ #vk.52 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_04
        solve( !KU( ~nonce ) @ #vk.43 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_05
        solve( !KU( ~nonce ) @ #vk.44 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        solve( !KU( ~nonce ) @ #vk.53 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_16
        solve( !KU( ~nonce ) @ #vk.44 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_17
        solve( !KU( ~nonce ) @ #vk.45 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_18
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_19
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_20
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_21
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_22
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_23
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_24
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_25
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_26
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_27
        solve( !KU( ~nonce ) @ #vk.54 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_28
        solve( !KU( ~nonce ) @ #vk.45 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_29
        solve( !KU( ~nonce ) @ #vk.46 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_30
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_31
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_32
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_33
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_34
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_35
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_36
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_1
        solve( !KU( ~userSecret.1 ) @ #vk.29 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_2
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_3
        solve( !KU( ~userSecret.1 ) @ #vk.30 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_4
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_5
        solve( !KU( ~userSecret.1 ) @ #vk.31 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_6
        by contradiction /* from formulas */
      next
        case c_sign
        solve( !KU( ~ltk ) @ #vk.25 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_1
        solve( !KU( ~ltk ) @ #vk.25 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_2
        solve( !KU( ~ltk ) @ #vk.25 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_3
        solve( !KU( ~ltk ) @ #vk.25 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      qed
    qed
  next
    case AuthRequest_RP_case_2
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                        <'sub', $userID>, 
                        <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                        pkU>,
                       x, ~ltk)
             ) @ #vk.22 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        solve( !KU( ~nonce ) @ #vk.52 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_03
        solve( !KU( ~nonce ) @ #vk.43 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_04
        solve( !KU( ~nonce ) @ #vk.44 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        solve( !KU( ~nonce ) @ #vk.53 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_15
        solve( !KU( ~nonce ) @ #vk.44 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_16
        solve( !KU( ~nonce ) @ #vk.45 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_17
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_18
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_19
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_20
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_21
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_22
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_23
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_24
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_25
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_26
        solve( !KU( ~nonce ) @ #vk.54 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_27
        solve( !KU( ~nonce ) @ #vk.45 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_28
        solve( !KU( ~nonce ) @ #vk.46 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_5
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_6
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_7
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_8
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_29
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_30
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_31
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_32
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_33
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_34
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_35
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_36
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_1
        solve( !KU( ~userSecret.1 ) @ #vk.29 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_2
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_3
        solve( !KU( ~userSecret.1 ) @ #vk.30 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_4
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_5
        solve( !KU( ~userSecret.1 ) @ #vk.31 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_6
        by contradiction /* from formulas */
      next
        case c_sign
        solve( !KU( ~ltk ) @ #vk.25 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_1
        solve( !KU( ~ltk ) @ #vk.25 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_2
        solve( !KU( ~ltk ) @ #vk.25 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_3
        solve( !KU( ~ltk ) @ #vk.25 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      qed
    qed
  next
    case AuthRequest_RP_case_3
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                        <'sub', $userID>, 
                        <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                        pkU>,
                       x, ~ltk)
             ) @ #vk.24 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_03
        solve( !KU( ~nonce ) @ #vk.58 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_04
        solve( !KU( ~nonce ) @ #vk.49 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_05
        solve( !KU( ~nonce ) @ #vk.51 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_11
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_12
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_17
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_18
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_19
        solve( !KU( ~nonce ) @ #vk.59 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_20
        solve( !KU( ~nonce ) @ #vk.50 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_21
        solve( !KU( ~nonce ) @ #vk.52 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_22
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_23
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_24
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_25
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_26
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_27
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_28
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_29
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_30
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_31
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_32
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_33
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_34
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_35
        solve( !KU( ~nonce ) @ #vk.60 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_36
        solve( !KU( ~nonce ) @ #vk.51 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_37
        solve( !KU( ~nonce ) @ #vk.53 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_13
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_14
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_15
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_16
          by contradiction /* from formulas */
        qed
      next
        case Compromised_Server_receives_case_38
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_39
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_40
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_41
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_42
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_43
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_44
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_45
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_46
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_47
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_48
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_1
        solve( !KU( ~userSecret ) @ #vk.35 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_2
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_3
        solve( !KU( ~userSecret ) @ #vk.36 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_4
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_5
        solve( !KU( ~userSecret ) @ #vk.37 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_6
        by contradiction /* from formulas */
      next
        case c_sign
        solve( !KU( ~ltk ) @ #vk.31 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_1
        solve( !KU( ~ltk ) @ #vk.31 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_2
        solve( !KU( ~ltk ) @ #vk.31 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_3
        solve( !KU( ~ltk ) @ #vk.31 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      qed
    qed
  next
    case AuthRequest_RP_case_4
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( sign(<'private_id_token', <'iss', $IdP>, 
                        <'sub', $userID>, 
                        <'private_aud', raenc(<$client_id, ~nonce>, rnd, pkU)>, 'user_pk', 
                        pkU>,
                       x, ~ltk)
             ) @ #vk.23 )
        case Compromised_Server_receives_case_01
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_02
        solve( !KU( ~nonce ) @ #vk.54 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RPFromBinding, $client_id, 
                            $redirect_uri_RP.1>,
                           x, ~ltk)
                 ) @ #vk.51 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.62 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_03
        solve( !KU( ~nonce ) @ #vk.45 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x, ~ltk)
                 ) @ #vk.43 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.48 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_04
        solve( !KU( ~nonce ) @ #vk.46 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x, ~ltk)
                 ) @ #vk.45 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.52 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_05
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_06
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_07
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_08
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_09
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_10
        solve( !KU( ~nonce ) @ #vk.55 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RPFromBinding, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.52 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.63 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_11
        solve( !KU( ~nonce ) @ #vk.46 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.44 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.49 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_12
        solve( !KU( ~nonce ) @ #vk.47 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.46 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.53 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_13
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_14
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_15
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_16
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_17
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_18
        solve( !KU( ~nonce ) @ #vk.56 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RPFromBinding, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.53 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.64 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.64 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.64 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.64 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_19
        solve( !KU( ~nonce ) @ #vk.47 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.45 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.50 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.50 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.50 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.50 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_20
        solve( !KU( ~nonce ) @ #vk.48 )
          case Receive_Adversary_TLS
          solve( !KU( sign(<'client_id_binding', $RP.1, $client_id, 
                            $redirect_uri_RP.1>,
                           x.1, ~ltk)
                 ) @ #vk.47 )
            case Receive_Adversary_TLS_case_1
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_2
            by contradiction /* from formulas */
          next
            case Receive_Adversary_TLS_case_3
            by contradiction /* from formulas */
          next
            case Registration_RP_case_1
            by contradiction /* from formulas */
          next
            case Registration_RP_case_2
            by contradiction /* from formulas */
          next
            case Registration_RP_case_3
            by contradiction /* from formulas */
          next
            case c_sign
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_1
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_2
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          next
            case reSign_case_3
            solve( !KU( ~ltk ) @ #vk.54 )
              case Compromised_IdP_leaks_Signing_Key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case Compromised_Server_receives_case_21
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_22
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_23
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_24
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_1
        solve( !KU( ~userSecret ) @ #vk.31 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_2
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_3
        solve( !KU( ~userSecret ) @ #vk.32 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_4
        by contradiction /* from formulas */
      next
        case Receive_Adversary_TLS_case_5
        solve( !KU( ~userSecret ) @ #vk.33 )
          case Compromised_Server_receives_case_01
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_02
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_03
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_04
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_05
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_06
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_07
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_08
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_09
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_10
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_11
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_12
          by contradiction /* from formulas */
        qed
      next
        case Receive_Adversary_TLS_case_6
        by contradiction /* from formulas */
      next
        case c_sign
        solve( !KU( ~ltk ) @ #vk.27 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_1
        solve( !KU( ~ltk ) @ #vk.27 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_2
        solve( !KU( ~ltk ) @ #vk.27 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      next
        case reSign_case_3
        solve( !KU( ~ltk ) @ #vk.27 )
          case Compromised_IdP_leaks_Signing_Key
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end