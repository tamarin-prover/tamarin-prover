theory OIDC_CodeFlow_with_ClientSecret begin

// Function signature and definition of the equational theory E

functions: e1/1 [private], e2/1 [private], e3/1 [private], false/0,
           fst/1, mangle/2, pair/2, pk/1, sign/3, snd/1, true/0
equations:
    e1(sign(x, y, z)) = x,
    e2(sign(x, y, z)) = y,
    e3(sign(x, y, z)) = z,
    fst(<x.1, x.2>) = x.1,
    mangle(sign(m, r1, sk), r2) = sign(m, r2, sk),
    snd(<x.1, x.2>) = x.2



rule (modulo E) reSign:
   [ In( <sk1, r1> ), In( sign(m, r2, sk2) ) ]
  -->
   [ Out( sign(m, r1, sk1) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Get_pk:
   [ !Pk( A, pubkey ) ] --> [ Out( pubkey ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Get_pk:
   [ !Pk( A, pubkey ) ] --> [ Out( pubkey ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Hello_Browser_TLS:
   [
   !St_Browser_Init( ~browserID, $User ), Fr( ~client_ID_TLS_Browser )
   ]
  --[
  BrowserServerSession( ~browserID, $Server, ~client_ID_TLS_Browser )
  ]->
   [
   !St_Browser_Session( ~browserID, $Server, ~client_ID_TLS_Browser )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Hello_Client_TLS:
   [ Fr( ~client_ID_TLS ) ]
  -->
   [ !St_Client_Session( $Client, $Server, ~client_ID_TLS ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Hello_Server_TLS_with_Server:
   [ !St_Client_Session( $Client, $Server, ~client_ID_TLS ) ]
  -->
   [ !St_Server_Session( $Server, ~client_ID_TLS ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Hello_Server_TLS_with_Browser:
   [
   !St_Browser_Session( ~browserID, $Server, ~client_ID_TLS_Browser )
   ]
  -->
   [ !St_Server_Session( $Server, ~client_ID_TLS_Browser ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_Adversary_TLS_Session[color=#f5b7b1]:
   [ In( $Server ), Fr( ~browserID ), Fr( ~browser_ID_TLS ) ]
  --[
  AdversarySessionTLS( ~browserID, $Server, ~browser_ID_TLS ),
  AdversaryAction( )
  ]->
   [
   !St_Browser_Session( ~browserID, $Server, ~browser_ID_TLS ),
   !Adversary_Session_TLS( ~browserID, $Server, ~browser_ID_TLS )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Send_Adversary_TLS[color=#f5b7b1]:
   [
   !Adversary_Session_TLS( browserID, $Server, browser_ID_TLS ),
   In( message )
   ]
  --[
  AdversarySends( browser_ID_TLS, $Server, message ),
  AdversaryAction( )
  ]->
   [ !Client_to_Server_TLS( browser_ID_TLS, $Server, message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Receive_Adversary_TLS[color=#f5b7b1]:
   [
   !Adversary_Session_TLS( browserID, $Server, browser_ID_TLS ),
   !Server_to_Client_TLS( $Server, browser_ID_TLS, message ),
   AdversaryAction( )
   ]
  --[ Adversary_receives( message, 'AuthResponse' ) ]->
   [ Out( message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Browser_Redirects_to_name[color=#aed6f1]:
   [
   User_InputTo_Browser( $User, ~browserID,
                         <'sendTo', $Server, message>
   ),
   !St_Browser_Init( ~browserID, $User ),
   !St_Browser_Session( ~browserID, $Server, ~client_ID_TLS_Browser )
   ]
  -->
   [ !Client_to_Server_TLS( ~client_ID_TLS_Browser, $Server, message )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Browser_Redirects_to_uri[color=#aed6f1]:
   [
   !Server_to_Client_TLS( $Server1, ~client_ID_TLS_Browser1,
                          <'sendTo', $uri, message>
   ),
   !St_Browser_Session( browserID, $Server1, ~client_ID_TLS_Browser1
   ),
   !St_Browser_Session( browserID, $Server2, ~client_ID_TLS_Browser2
   ),
   !Uri_belongs_to( $uri, $Server2 )
   ]
  -->
   [
   !Client_to_Server_TLS( ~client_ID_TLS_Browser2, $Server2, message )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Browser_Shows[color=#aed6f1]:
   [
   !Server_to_Client_TLS( $Server, ~client_ID_TLS_Browser,
                          <'show', message>
   ),
   !St_Browser_Session( ~browserID, $Server, ~client_ID_TLS_Browser ),
   !St_Browser_Init( ~browserID, $User )
   ]
  -->
   [ Browser_Shows_User( ~browserID, $User, $Server, message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Compromised_IdP_leaks_Signing_Key[color=#f5b7b1]:
   [
   !St_IdP_Init( $IdP, $authEP_uri_IdP, ~tokenRP_uri_IdP ),
   !Ltk( $IdP, ~ltk )
   ]
  --[ Is_Compromised( $IdP ), AdversaryAction( ) ]->
   [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Compromised_Server_receives[color=#f5b7b1]:
   [
   !Client_to_Server_TLS( ~browser_ID_TLS, $Server, message ),
   !St_Server_Session( $Server, ~browser_ID_TLS )
   ]
  --[
  Compromised_Party_receives( message, 'AuthResponse' ),
  AdversaryAction( ), Is_Compromised( $Server )
  ]->
   [ Out( message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Compromised_Server_sends[color=#f5b7b1]:
   [ !St_Server_Session( $Server, ~browser_ID_TLS ), In( message ) ]
  --[ AdversaryAction( ), Is_Compromised( $Server ) ]->
   [ !Server_to_Client_TLS( $Server, ~browser_ID_TLS, message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Compromised_Client_sends[color=#f5b7b1]:
   [
   In( message ),
   !St_Client_Session( $Client, $Server, ~client_ID_TLS )
   ]
  --[ AdversaryAction( ), Is_Compromised( $Client ) ]->
   [ !Client_to_Server_TLS( ~client_ID_TLS, $Server, message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Compromised_Client_receives[color=#f5b7b1]:
   [
   !Server_to_Client_TLS( $Server, ~client_ID_TLS, message ),
   !St_Client_Session( $Client, $Server, ~client_ID_TLS )
   ]
  --[
  Compromised_Party_receives( message, 'AuthResponse' ),
  AdversaryAction( ), Is_Compromised( $Client )
  ]->
   [ Out( message ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_Browser[color=#f9e79f]:
   [ Fr( ~browserID ) ]
  --[ Start( ), BrowserUser( ~browserID, $User ) ]->
   [ !St_Browser_Init( ~browserID, $User ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) User_registers_at_IdP[color=#f9e79f]:
   [ Fr( ~userSecret ) ]
  --[ UserID_belongs_To( $userID, $User, $IdP ) ]->
   [ !User_registration_at_IdP( $User, $IdP, ~userSecret, $userID ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Adversary_registers_at_IdP[color=#f9e79f]:
   [ Fr( ~userSecretAdv ) ]
  --[
  UserID_belongs_To( $userID, $Adversary, $IdP ),
  AdversaryRegisters( $userID ), Unique( <$userID, $IdP> ),
  AdversaryAction( )
  ]->
   [
   !User_registration_at_IdP( $Adversary, $IdP, ~userSecretAdv,
                              $userID
   ),
   Out( ~userSecretAdv )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Initialization_IdP[color=#f9e79f]:
   [ Fr( ~ltk ) ]
  --[
  IdPInitializes( $IdP, $authEP_uri_IdP ),
  UriBelongsTo( $authEP_uri_IdP, $IdP ),
  UriBelongsTo( $tokenEP_uri_IdP, $IdP )
  ]->
   [
   Out( <$authEP_uri_IdP, $tokenEP_uri_IdP> ),
   !St_IdP_Init( $IdP, $authEP_uri_IdP, $tokenEP_uri_IdP ),
   !Uri_belongs_to( $authEP_uri_IdP, $IdP ),
   !Uri_belongs_to( $tokenEP_uri_IdP, $IdP ), !Ltk( $IdP, ~ltk ),
   !Pk( $IdP, pk(~ltk) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Registration_RP[color=#f9e79f]:
   [
   !St_IdP_Init( $IdP, $authEP_uri_IdP, $tokenEP_uri_IdP ),
   Fr( ~client_Secret )
   ]
  --[
  Neq( $RP, $IdP ), RPRegisters( $client_id ), Not_an_IdP( $RP ),
  UriBelongsTo( $redirect_uri_RP, $RP ), Unique( <$client_id, $IdP> )
  ]->
   [
   Out( <$client_id, $redirect_uri_RP> ),
   !St_RP_Registered( $RP, $IdP, $client_id, ~client_Secret,
                      $redirect_uri_RP, $authEP_uri_IdP, $tokenEP_uri_IdP
   ),
   !Uri_belongs_to( $redirect_uri_RP, $RP )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) User_starts_Session:
   [ !St_Browser_Init( ~browserID, $User ) ]
  --[
  UserStarts( ~browserID, $User ),
  UserStartsSession( $User, $RP, $IdP )
  ]->
   [
   St_User_1( $User, ~browserID, $IdP, $RP ),
   User_InputTo_Browser( $User, ~browserID,
                         <'sendTo', $RP, 'loginWith', $IdP>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) AuthRequest_RP:
   [
   !Client_to_Server_TLS( ~client_ID_TLS_Browser, $RP,
                          <'loginWith', $IdP>
   ),
   !St_Server_Session( $RP, ~client_ID_TLS_Browser ),
   !St_RP_Registered( $RP, $IdP, $client_id, ~client_Secret,
                      $redirect_uri_RP, $authEP_uri_IdP, $tokenEP_uri_IdP
   )
   ]
  --[
  AuthRequestRP( ),
  RP_sends_AuthRequest( $RP, $IdP, ~client_ID_TLS_Browser )
  ]->
   [
   !Server_to_Client_TLS( $RP, ~client_ID_TLS_Browser,
                          <'sendTo', $authEP_uri_IdP, 'authRequest', $client_id, 
                           $redirect_uri_RP, $authEP_uri_IdP>
   ),
   St_RP_1( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
            ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP, $tokenEP_uri_IdP
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) AuthRequest_IdP:
   [
   !Client_to_Server_TLS( ~client_ID_TLS_Browser, $IdP,
                          <'authRequest', $client_id, $redirect_uri_RP, $authEP_uri_IdP>
   ),
   !St_Server_Session( $IdP, ~client_ID_TLS_Browser ),
   !St_RP_Registered( $RP, $IdP, $client_id, ~client_Secret,
                      $redirect_uri_RP, $authEP_uri_IdP, $tokenEP_uri_IdP
   )
   ]
  --[ AuthRequestIdP( ) ]->
   [
   St_IdP_1( $IdP, $RP, ~client_ID_TLS_Browser, $client_id,
             ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP, $tokenEP_uri_IdP
   ),
   !Server_to_Client_TLS( $IdP, ~client_ID_TLS_Browser,
                          <'show', 'pleaseAuthenticate', $IdP>
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) User_Authenticates:
   [
   Browser_Shows_User( ~browserID, $User, $IdP,
                       <'pleaseAuthenticate', $IdP>
   ),
   St_User_1( $User, ~browserID, $IdP, $RP ),
   !User_registration_at_IdP( $User, $IdP, ~userSecret, $userID )
   ]
  -->
   [
   User_InputTo_Browser( $User, ~browserID,
                         <'sendTo', $IdP, 'IAuthenticate', $User, ~userSecret>
   ),
   St_User_2( $User, ~browserID, $IdP, $RP, ~userSecret )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) IdP_asks_for_Consent:
   [
   !Client_to_Server_TLS( ~client_ID_TLS_Browser, $IdP,
                          <'IAuthenticate', $User, ~userSecret>
   ),
   St_IdP_1( $IdP, $RP, ~client_ID_TLS_Browser, $client_id,
             ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP, $tokenEP_uri_IdP
   ),
   !User_registration_at_IdP( $User, $IdP, ~userSecret, $userID ),
   Fr( ~consent_nonce )
   ]
  -->
   [
   !Server_to_Client_TLS( $IdP, ~client_ID_TLS_Browser,
                          <'show', 'pleaseGiveConsent', $IdP, $RP, $User, ~consent_nonce>
   ),
   St_IdP_2( $IdP, $RP, ~client_ID_TLS_Browser, $client_id,
             ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
             $tokenEP_uri_IdP, $User, ~userSecret, $userID, ~consent_nonce
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) User_Gives_Consent:
   [
   Browser_Shows_User( ~browserID, $User, $IdP,
                       <'pleaseGiveConsent', $IdP, $RP, $User, consent_nonce>
   ),
   St_User_2( $User, ~browserID, $IdP, $RP, ~userSecret )
   ]
  --[ UserGivesConsent( $User, $RP, $IdP ) ]->
   [
   User_InputTo_Browser( $User, ~browserID,
                         <'sendTo', $IdP, 'Consent', $IdP, $RP, $User, consent_nonce>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Authentication_Response_IdP:
   [
   !Client_to_Server_TLS( ~client_ID_TLS_Browser, $IdP,
                          <'Consent', $IdP, $RP, $User, ~consent_nonce>
   ),
   St_IdP_2( $IdP, $RP, ~client_ID_TLS_Browser, $client_id,
             ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
             $tokenEP_uri_IdP, $User, ~userSecret, $userID, ~consent_nonce
   ),
   Fr( ~code )
   ]
  --[ GenCode( ~code ) ]->
   [
   !Server_to_Client_TLS( $IdP, ~client_ID_TLS_Browser,
                          <'sendTo', $redirect_uri_RP, 'AuthResponse', ~code, $IdP>
   ),
   St_IdP_3( $IdP, $RP, ~client_ID_TLS_Browser, $client_id,
             ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP, $User,
             ~userSecret, $userID, ~consent_nonce, ~code
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Token_Request_RP:
   [
   !Client_to_Server_TLS( ~client_ID_TLS_Browser, $RP,
                          <'AuthResponse', code, $IdP>
   ),
   St_RP_1( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
            ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP, $tokenEP_uri_IdP
   ),
   !Uri_belongs_to( $tokenEP_uri_IdP, $IdP ),
   !St_Client_Session( $RP, $IdP, ~client_ID_TLS_RP )
   ]
  --[ RPgetsCode( $RP, ~client_ID_TLS_Browser, $IdP ) ]->
   [
   !Client_to_Server_TLS( ~client_ID_TLS_RP, $IdP,
                          <'TokenRequest', code, $client_id, $redirect_uri_RP, ~client_Secret
                          >
   ),
   St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
            ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
            $tokenEP_uri_IdP, code, ~client_ID_TLS_RP
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Token_Response_IdP:
   [
   !Client_to_Server_TLS( ~client_ID_TLS_RP, $IdP,
                          <'TokenRequest', ~code, $client_id, $redirect_uri_RP, 
                           ~client_Secret>
   ),
   St_IdP_3( $IdP, $RP, ~client_ID_TLS_Browser, $client_id,
             ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP, $User,
             ~userSecret, $userID, ~consent_nonce, ~code
   ),
   !Ltk( $IdP, ~ltk ),
   !St_Server_Session( $Server, ~client_ID_TLS_RP )
   ]
  -->
   [
   !Server_to_Client_TLS( $IdP, ~client_ID_TLS_RP,
                          <'TokenResponse', 
                           <'idToken', <'iss', $IdP>, <'sub', $userID>, 'aud', $client_id>, 
                           sign(<'idToken', <'iss', $IdP>, <'sub', $userID>, 'aud', $client_id
                                >,
                                '0', ~ltk)
                          >
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) RP_gets_idToken:
   [
   !Server_to_Client_TLS( $IdP, ~client_ID_TLS_IdP,
                          <'TokenResponse', 
                           <'idToken', <'iss', $IdP>, <'sub', userID>, 'aud', $client_id>, 
                           id_token_sig>
   ),
   St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
            ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
            $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
   ),
   !Pk( $IdP, pk_idp )
   ]
  --[
  Finish( ), RP_gets_IDToken( $RP, userID, $IdP ),
  Verified( id_token_sig, e1(id_token_sig), pk(e3(id_token_sig)),
            <'idToken', <'iss', $IdP>, <'sub', userID>, 'aud', $client_id>,
            pk_idp, true
  )
  ]->
   [ ]

  /*
  rule (modulo AC) RP_gets_idToken:
     [
     !Server_to_Client_TLS( $IdP, ~client_ID_TLS_IdP,
                            <'TokenResponse', 
                             <'idToken', <'iss', $IdP>, <'sub', userID>, 'aud', $client_id>, 
                             id_token_sig>
     ),
     St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
              ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
              $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
     ),
     !Pk( $IdP, pk_idp )
     ]
    --[
    Finish( ), RP_gets_IDToken( $RP, userID, $IdP ),
    Verified( id_token_sig, z, pk(z.1),
              <'idToken', <'iss', $IdP>, <'sub', userID>, 'aud', $client_id>,
              pk_idp, true
    )
    ]->
     [ ]
    variants (modulo AC)
    1. id_token_sig
             = id_token_sig.22
       z     = e1(id_token_sig.22)
       z.1   = e3(id_token_sig.22)
    
    2. id_token_sig
             = sign(z.31, x.42, z.32)
       z     = z.31
       z.1   = z.32
  */

restriction uniqueness:
  "∀ x #i #j. ((Unique( x ) @ #i) ∧ (Unique( x ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction uri_belongs_to_only_one_server:
  "∀ uri server1 server2 #i #j.
    ((UriBelongsTo( uri, server1 ) @ #i) ∧
     (UriBelongsTo( uri, server2 ) @ #j)) ⇒
    (server1 = server2)"
  // safety formula

restriction Inequality_RP_IdP:
  "∀ x #i. (Neq( x, x ) @ #i) ⇒ (⊥)"
  // safety formula

restriction registered_RP_shouldnt_be_an_IdP:
  "∀ rp #i.
    (Not_an_IdP( rp ) @ #i) ⇒
    (¬(∃ x #j. IdPInitializes( rp, x ) @ #j))"
  // safety formula

restriction IdP_initializes_Once:
  "∀ idp v u #i #j.
    ((IdPInitializes( idp, v ) @ #i) ∧
     (IdPInitializes( idp, u ) @ #j)) ⇒
    ((#i = #j) ∧ (u = v))"
  // safety formula

lemma executable:
  exists-trace
  "∃ #i.
    ((((((Finish( ) @ #i) ∧
         (∀ x y a b #i.1 #j.
           ((IdPInitializes( x, a ) @ #i.1) ∧ (IdPInitializes( y, b ) @ #j)) ⇒
           ((x = y) ∧ (a = b)))) ∧
        (∀ x y #i.1 #j.
          ((RPRegisters( x ) @ #i.1) ∧ (RPRegisters( y ) @ #j)) ⇒ (x = y))) ∧
       (∀ x y a b #i.1 #j.
         ((UserStarts( x, a ) @ #i.1) ∧ (UserStarts( y, b ) @ #j)) ⇒
         (((x = y) ∧ (a = b)) ∧ (#i.1 = #j)))) ∧
      (∀ #i.1 #j.
        ((AuthRequestRP( ) @ #i.1) ∧ (AuthRequestRP( ) @ #j)) ⇒
        (#i.1 = #j))) ∧
     (∀ #i.1 #j.
       ((AuthRequestIdP( ) @ #i.1) ∧ (AuthRequestIdP( ) @ #j)) ⇒
       (#i.1 = #j))) ∧
    (¬(∃ #i.1. AdversaryAction( ) @ #i.1))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i.
  (Finish( ) @ #i)
 ∧
  (∀ x y a b #i.1 #j.
    (IdPInitializes( x, a ) @ #i.1) ∧ (IdPInitializes( y, b ) @ #j)
   ⇒
    (x = y) ∧ (a = b)) ∧
  (∀ x y #i.1 #j.
    (RPRegisters( x ) @ #i.1) ∧ (RPRegisters( y ) @ #j) ⇒ x = y) ∧
  (∀ x y a b #i.1 #j.
    (UserStarts( x, a ) @ #i.1) ∧ (UserStarts( y, b ) @ #j)
   ⇒
    (x = y) ∧ (a = b) ∧ (#i.1 = #j)) ∧
  (∀ #i.1 #j.
    (AuthRequestRP( ) @ #i.1) ∧ (AuthRequestRP( ) @ #j) ⇒ #i.1 = #j) ∧
  (∀ #i.1 #j.
    (AuthRequestIdP( ) @ #i.1) ∧ (AuthRequestIdP( ) @ #j)
   ⇒
    #i.1 = #j) ∧
  (∀ #i.1. (AdversaryAction( ) @ #i.1) ⇒ ⊥)"
*/
simplify
solve( !Server_to_Client_TLS( $IdP, ~client_ID_TLS_IdP,
                              <'TokenResponse', 
                               <'idToken', <'iss', $IdP>, <'sub', userID>, 'aud', $client_id>, 
                               id_token_sig>
       ) ▶₀ #i )
  case Token_Response_IdP_case_61
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #i )
    case Token_Request_RP
    solve( !Pk( $IdP, pk_idp ) ▶₂ #i )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_6
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser, $RP,
                                      <'loginWith', $IdP>
               ) ▶₀ #vr.6 )
          case Browser_Redirects_to_name
          solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                        <'IAuthenticate', $User, ~userSecret>
                 ) ▶₀ #vr.8 )
            case Browser_Redirects_to_name
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                          <'authRequest', $client_id, $redirect_uri_RP, 
                                           $authEP_uri_IdP>
                   ) ▶₀ #vr.13 )
              case Browser_Redirects_to_uri_case_4
              SOLVED // trace found
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma User_Authentication:
  all-traces
  "∀ rp uid idp #finish.
    ((((RP_gets_IDToken( rp, uid, idp ) @ #finish) ∧
       (¬(∃ #j. Is_Compromised( idp ) @ #j))) ∧
      (¬(∃ #j. Is_Compromised( rp ) @ #j))) ∧
     (¬(∃ #j. AdversaryRegisters( uid ) @ #j))) ⇒
    (∃ usr browserSession browser #k #start #consent #getCode #m #n.
      ((((((((UserGivesConsent( usr, rp, idp ) @ #consent) ∧
             (UserStartsSession( usr, rp, idp ) @ #start)) ∧
            (UserID_belongs_To( uid, usr, idp ) @ #k)) ∧
           (RPgetsCode( rp, browserSession, idp ) @ #getCode)) ∧
          (BrowserUser( browser, usr ) @ #n)) ∧
         (BrowserServerSession( browser, rp, browserSession ) @ #m)) ∧
        (#consent < #getCode)) ∧
       (#getCode < #finish)) ∧
      (#start < #consent))"
/*
guarded formula characterizing all counter-examples:
"∃ rp uid idp #finish.
  (RP_gets_IDToken( rp, uid, idp ) @ #finish)
 ∧
  (∀ #j. (Is_Compromised( idp ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (Is_Compromised( rp ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (AdversaryRegisters( uid ) @ #j) ⇒ ⊥) ∧
  (∀ usr browserSession browser #k #start #consent #getCode #m #n.
    (UserGivesConsent( usr, rp, idp ) @ #consent) ∧
    (UserStartsSession( usr, rp, idp ) @ #start) ∧
    (UserID_belongs_To( uid, usr, idp ) @ #k) ∧
    (RPgetsCode( rp, browserSession, idp ) @ #getCode) ∧
    (BrowserUser( browser, usr ) @ #n) ∧
    (BrowserServerSession( browser, rp, browserSession ) @ #m)
   ⇒
    ((¬(#consent < #getCode)) ∨
     (¬(#getCode < #finish)) ∨
     (¬(#start < #consent))))"
*/
simplify
solve( !Server_to_Client_TLS( $IdP, ~client_ID_TLS_IdP,
                              <'TokenResponse', 
                               <'idToken', <'iss', $IdP>, <'sub', uid>, 'aud', $client_id>, 
                               id_token_sig>
       ) ▶₀ #finish )
  case Compromised_Server_sends_case_1
  by contradiction /* from formulas */
next
  case Compromised_Server_sends_case_2
  by contradiction /* from formulas */
next
  case Compromised_Server_sends_case_3
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_01
  by solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                     ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                     $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
            ) ▶₁ #finish )
next
  case Token_Response_IdP_case_02
  by solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                     ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                     $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
            ) ▶₁ #finish )
next
  case Token_Response_IdP_case_03
  by solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                     ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                     $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
            ) ▶₁ #finish )
next
  case Token_Response_IdP_case_04
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_05
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_06
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_07
  by solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                     ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                     $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
            ) ▶₁ #finish )
next
  case Token_Response_IdP_case_08
  by solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                     ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                     $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
            ) ▶₁ #finish )
next
  case Token_Response_IdP_case_09
  by solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                     ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                     $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
            ) ▶₁ #finish )
next
  case Token_Response_IdP_case_10
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_11
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_12
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_13
  by solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                     ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                     $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
            ) ▶₁ #finish )
next
  case Token_Response_IdP_case_14
  by solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                     ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                     $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
            ) ▶₁ #finish )
next
  case Token_Response_IdP_case_15
  by solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                     ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                     $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
            ) ▶₁ #finish )
next
  case Token_Response_IdP_case_16
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_17
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_18
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_19
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_20
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_21
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_22
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_23
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_24
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_25
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_26
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_27
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_28
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_29
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_30
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_31
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_02
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_03
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_06
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_07
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_10
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_11
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_12
    by contradiction /* from formulas */
  qed
next
  case Token_Response_IdP_case_32
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_02
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_03
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_06
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_07
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_10
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_11
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_12
    by contradiction /* from formulas */
  qed
next
  case Token_Response_IdP_case_33
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_02
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_03
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_06
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_07
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_10
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_11
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_12
    by contradiction /* from formulas */
  qed
next
  case Token_Response_IdP_case_34
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_35
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_36
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_37
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Token_Response_IdP_case_38
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case Token_Response_IdP_case_39
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.5 )
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.5 )
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  qed
next
  case Token_Response_IdP_case_40
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_41
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_42
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_43
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              by contradiction /* from formulas */
            next
              case Send_Adversary_TLS
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Token_Response_IdP_case_44
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case Token_Response_IdP_case_45
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.5 )
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.5 )
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  qed
next
  case Token_Response_IdP_case_46
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_47
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_48
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_49
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.23 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.28 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.23 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.28 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.10 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.22 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.26 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.31 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.16 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.20 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.16 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.20 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.10 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.22 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.26 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.31 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.16 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.20 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.16 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.20 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.23 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.28 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.23 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.28 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Token_Response_IdP_case_50
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.10 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.10 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case Token_Response_IdP_case_51
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.8 )
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.8 )
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.10 )
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.7 )
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.7 )
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.10 )
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.7 )
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.7 )
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.8 )
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.8 )
    qed
  qed
next
  case Token_Response_IdP_case_52
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_53
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_54
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_55
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_02
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_03
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_06
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_07
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_10
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_11
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_12
    by contradiction /* from formulas */
  qed
next
  case Token_Response_IdP_case_56
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_02
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_03
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_06
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_07
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_10
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_11
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_12
    by contradiction /* from formulas */
  qed
next
  case Token_Response_IdP_case_57
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_02
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_03
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_06
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_07
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_10
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_11
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_12
    by contradiction /* from formulas */
  qed
next
  case Token_Response_IdP_case_58
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_59
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_60
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_61
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.19 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.19 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.19 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.19 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case Token_Response_IdP_case_62
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_63
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.23 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.28 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.23 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.28 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.10 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.22 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.26 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.31 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.16 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.20 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.16 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.20 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.10 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.22 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.26 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.31 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.16 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.20 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.16 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.20 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.23 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.28 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Browser_Redirects_to_name
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.23 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case Browser_Redirects_to_uri_case_1
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_2
              by contradiction /* from formulas */
            next
              case Browser_Redirects_to_uri_case_3
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.28 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Token_Response_IdP_case_64
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.10 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.10 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.7 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.8 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case Token_Response_IdP_case_65
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.8 )
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.8 )
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.10 )
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.7 )
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.7 )
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.10 )
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.7 )
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.7 )
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.8 )
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.8 )
    qed
  qed
next
  case Token_Response_IdP_case_66
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_67
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_68
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_69
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_02
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_03
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_06
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_07
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_10
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_11
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_12
    by contradiction /* from formulas */
  qed
next
  case Token_Response_IdP_case_70
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_02
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_03
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_06
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_07
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_10
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_11
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_12
    by contradiction /* from formulas */
  qed
next
  case Token_Response_IdP_case_71
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_02
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_03
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_06
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_07
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_10
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_11
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_12
    by contradiction /* from formulas */
  qed
next
  case Token_Response_IdP_case_72
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_73
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_74
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_75
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.19 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.19 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.19 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.19 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.12 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                    <'Consent', $IdP, $RP, $User, ~consent_nonce>
             ) ▶₀ #vr.2 )
        case Browser_Redirects_to_name_case_1
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_2
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_3
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_4
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_5
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_6
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_7
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_name_case_8
        by contradiction /* from formulas */
      next
        case Browser_Redirects_to_uri_case_1
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_2
        solve( !KU( ~consent_nonce ) @ #vk.16 )
          case Compromised_Server_receives_case_1
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_2
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_3
          by contradiction /* from formulas */
        next
          case Compromised_Server_receives_case_4
          by contradiction /* from formulas */
        qed
      next
        case Browser_Redirects_to_uri_case_3
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case Token_Response_IdP_case_76
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_77
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Token_Response_IdP_case_78
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case Token_Response_IdP_case_79
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.5 )
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.5 )
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  qed
next
  case Token_Response_IdP_case_80
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_81
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_82
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_83
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.19 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.25 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.12 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.18 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Client_receives
        solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                      <'Consent', $IdP, $RP, $User, ~consent_nonce>
               ) ▶₀ #vr.2 )
          case Compromised_Client_sends
          solve( !KU( ~consent_nonce ) @ #vk.15 )
            case Compromised_Client_receives
            solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.2, $RP,
                                          <'loginWith', $IdP>
                   ) ▶₀ #vr.6 )
              case Compromised_Client_sends
              solve( !Client_to_Server_TLS( ~client_ID_TLS_Browser.1, $IdP,
                                            <'IAuthenticate', $User, ~userSecret>
                     ) ▶₀ #vr.8 )
                case Compromised_Client_sends
                solve( !KU( ~userSecret ) @ #vk.21 )
                  case Compromised_Server_receives_case_1
                  by contradiction /* from formulas */
                next
                  case Compromised_Server_receives_case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Token_Response_IdP_case_84
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.5 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.3 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      solve( !KU( ~code.1 ) @ #vk.4 )
        case Compromised_Server_receives_case_1
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_2
        by contradiction /* from formulas */
      next
        case Compromised_Server_receives_case_3
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case Token_Response_IdP_case_85
  solve( St_RP_2( $RP, $IdP, ~client_ID_TLS_Browser, $client_id,
                  ~client_Secret, $redirect_uri_RP, $authEP_uri_IdP,
                  $tokenEP_uri_IdP, code, ~client_ID_TLS_IdP
         ) ▶₁ #finish )
    case Token_Request_RP_case_01
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_02
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_03
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.5 )
    qed
  next
    case Token_Request_RP_case_04
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_05
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_06
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_07
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.5 )
    qed
  next
    case Token_Request_RP_case_08
    by contradiction /* from formulas */
  next
    case Token_Request_RP_case_09
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_10
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.3 )
    qed
  next
    case Token_Request_RP_case_11
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  next
    case Token_Request_RP_case_12
    solve( !Pk( $IdP, pk_idp ) ▶₂ #finish )
      case Initialization_IdP
      by solve( !KU( ~code.1 ) @ #vk.4 )
    qed
  qed
next
  case Token_Response_IdP_case_86
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_87
  by contradiction /* from formulas */
next
  case Token_Response_IdP_case_88
  by contradiction /* from formulas */
qed

/* All well-formedness checks were successful. */

end