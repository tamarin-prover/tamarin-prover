theory GJMLocks begin

// Function signature and definition of the equational theory E

functions: adec/2, aenc/2, checkpcs/5, convertpcs/2, fakepcs/4,
           fst/1, pair/2, pcs/3, pk/1, sign/2, sk/1 [private], snd/1, true/0,
           verify/2
equations:
    adec(aenc(m, pk(i)), sk(i)) = m,
    checkpcs(c, pk(s), pk(v), pk(ttp),
             fakepcs(pk(s), sk(v), pk(ttp), c))
  = true,
    checkpcs(c, pk(s), pk(v), pk(ttp),
             pcs(sign(c, sk(s)), pk(v), pk(ttp)))
  = true,
    convertpcs(sk(ttp), pcs(sign(c, sk(s)), pk(v), pk(ttp)))
  = sign(c, sk(s)),
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(m, sk(i)), pk(i)) = m

section{* Garay-Jakobsson-MacKenzie contract signing protocol *}

rule (modulo E) Init:
   [ Fr( ~prog_ ) ]
  --[ Init( ), ProgressFrom_( ~prog_ ) ]->
   [ State_( ~prog_ ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) MessageID_rule:
   [ Fr( ~x ) ] --> [ MID_Sender( ~x ), MID_Receiver( ~x ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Par:
   [ State_( ~prog_ ) ]
  --[ ProgressTo_2( ~prog_ ), ProgressTo_1( ~prog_ ) ]->
   [ State_1( ~prog_ ), State_2( ~prog_ ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_01:
   [ State_1( ~prog_ ) ] --> [ !Semistate_11( ~prog_ ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_11:
   [ !Semistate_11( ~prog_ ) ] --> [ State_11( ~prog_ ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_A_B_TTP_TTP_TEXT_11:
   [
   Fr( ~prog_111 ), State_11( ~prog_ ),
   In( <'c', $A, $B, <'TTP', $TTP>, $TEXT> )
   ]
  --[
  ProgressFrom_111( ~prog_111 ),
  ChannelInEvent( <'c', $A, $B, <'TTP', $TTP>, $TEXT> )
  ]->
   [ State_111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_TTP_TTP_TTP_111:
   [ State_111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ) ]
  --[ Event( ), TTP( <'TTP', $TTP> ) ]->
   [ State_1111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Par1111:
   [ State_1111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ) ]
  -->
   [
   State_11111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ),
   State_11112( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Par11111:
   [ State_11111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ) ]
  --[ ProgressTo_111112( ~prog_111 ) ]->
   [
   State_111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ),
   State_111112( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Par111111:
   [ State_111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ) ]
  --[ ProgressTo_1111112( ~prog_111 ) ]->
   [
   State_1111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ),
   State_1111112( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) new_sida1111111:
   [
   State_1111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ), Fr( sida )
   ]
  -->
   [ State_11111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_StartA_A_B_A_B_TEXT_TTP_TTP_sida11111111:
   [ State_11111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida ) ]
  --[ Event( ), StartA( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [ State_111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_c_pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP_111111111:
   [
   State_111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida ),
   In( 'c' )
   ]
  --[ ChannelInEvent( 'c' ) ]->
   [
   State_1111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida ),
   Out( pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
            pk(<'TTP', $TTP>))
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP_11111111111:
   [
   State_1111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida ),
   In( <'c', 
        pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
            pk(<'TTP', $TTP>))
       >
   )
   ]
  --[
  ChannelInEvent( <'c', 
                   pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
                       pk(<'TTP', $TTP>))
                  >
  )
  ]->
   [
   State_111111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_c_sign_A_B_TEXT_TTP_TTP_1_sk_A111111111111:
   [
   State_111111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida ),
   In( 'c' )
   ]
  --[ ChannelInEvent( 'c' ) ]->
   [
   State_1111111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   ),
   Out( sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_sign_A_B_TEXT_TTP_TTP_2_sk_B11111111111111:
   [
   State_1111111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   ),
   In( <'c', sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))> )
   ]
  --[
  ChannelInEvent( <'c', 
                   sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
  )
  ]->
   [
   State_111111111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_ContractA_A_B_A_B_TEXT_TTP_TTP_sida111111111111111:
   [
   State_111111111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   )
   ]
  --[
  Event( ), ContractA( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_1111111111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndA4_A_B_A_B_TEXT_TTP_TTP_sida1111111111111111:
   [
   State_1111111111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           sida
   )
   ]
  --[
  ProgressTo_11111111111111111( ~prog_111 ), Event( ),
  EndA4( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_11111111111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero11111111111111111:
   [
   State_11111111111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            sida
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_TTP_TTP_sida_sign_A_B_TEXT_TTP_TTP_1_sk_A_pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP__11111111111112:
   [
   MID_Sender( mid_11111111111112 ),
   State_1111111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida )
   ]
  --[
  ProgressTo_111111111111121( ~prog_111 ),
  Send( mid_11111111111112,
        <<'TTP', $TTP>, sida, 
         sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), 
         pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
             pk(<'TTP', $TTP>))
        >
  )
  ]->
   [
   Out( <<'TTP', $TTP>, sida, 
         sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), 
         pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
             pk(<'TTP', $TTP>))
        >
   ),
   State_111111111111121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_A_sida_sign_A_B_TEXT_TTP_TTP_2_sk_B_111111111111121:
   [
   Fr( ~prog_1111111111111211 ),
   State_111111111111121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   ),
   In( <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
   ),
   MID_Receiver( mid_111111111111121 )
   ]
  --[
  ProgressFrom_1111111111111211( ~prog_1111111111111211 ),
  Receive( mid_111111111111121,
           <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
  )
  ]->
   [
   State_1111111111111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_1111111111111211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_ContractA_A_B_A_B_TEXT_TTP_TTP_sida1111111111111211:
   [
   State_1111111111111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_1111111111111211, sida
   )
   ]
  --[
  Event( ), ContractA( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_11111111111112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_1111111111111211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndA3_A_B_A_B_TEXT_TTP_TTP_sida11111111111112111:
   [
   State_11111111111112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_1111111111111211, sida
   )
   ]
  --[
  ProgressTo_111111111111121111( ~prog_1111111111111211 ), Event( ),
  EndA3( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_111111111111121111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_1111111111111211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero111111111111121111:
   [
   State_111111111111121111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_1111111111111211, sida
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_fakepcspk_B_sk_A_pk_TTP_TTP__A_B_TEXT_TTP_TTP_2_111111111121:
   [
   State_1111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida ),
   In( <'c', 
        fakepcs(pk($B), sk($A), pk(<'TTP', $TTP>),
                <<$A, $B, $TEXT, 'TTP', $TTP>, '2'>)
       >
   )
   ]
  --[
  ChannelInEvent( <'c', 
                   fakepcs(pk($B), sk($A), pk(<'TTP', $TTP>),
                           <<$A, $B, $TEXT, 'TTP', $TTP>, '2'>)
                  >
  )
  ]->
   [
   State_1111111111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_c_sign_A_B_TEXT_TTP_TTP_1_sk_A1111111111211:
   [
   State_1111111111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   ),
   In( 'c' )
   ]
  --[ ChannelInEvent( 'c' ) ]->
   [
   State_11111111112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   ),
   Out( sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_sign_A_B_TEXT_TTP_TTP_2_sk_B111111111121111:
   [
   State_11111111112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   ),
   In( <'c', sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))> )
   ]
  --[
  ChannelInEvent( <'c', 
                   sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
  )
  ]->
   [
   State_1111111111211111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_ContractA_A_B_A_B_TEXT_TTP_TTP_sida1111111111211111:
   [
   State_1111111111211111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           sida
   )
   ]
  --[
  Event( ), ContractA( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_11111111112111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndA4_A_B_A_B_TEXT_TTP_TTP_sida11111111112111111:
   [
   State_11111111112111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            sida
   )
   ]
  --[
  ProgressTo_111111111121111111( ~prog_111 ), Event( ),
  EndA4( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_111111111121111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero111111111121111111:
   [
   State_111111111121111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             sida
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_TTP_TTP_sida_sign_A_B_TEXT_TTP_TTP_1_sk_A_fakepcspk_B_sk_A_pk_TTP_TTP__A_B_TEXT_TTP_TTP_2__111111111121112:
   [
   MID_Sender( mid_111111111121112 ),
   State_11111111112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   )
   ]
  --[
  ProgressTo_1111111111211121( ~prog_111 ),
  Send( mid_111111111121112,
        <<'TTP', $TTP>, sida, 
         sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), 
         fakepcs(pk($B), sk($A), pk(<'TTP', $TTP>),
                 <<$A, $B, $TEXT, 'TTP', $TTP>, '2'>)
        >
  )
  ]->
   [
   Out( <<'TTP', $TTP>, sida, 
         sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), 
         fakepcs(pk($B), sk($A), pk(<'TTP', $TTP>),
                 <<$A, $B, $TEXT, 'TTP', $TTP>, '2'>)
        >
   ),
   State_1111111111211121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_A_sida_sign_A_B_TEXT_TTP_TTP_2_sk_B_1111111111211121:
   [
   Fr( ~prog_11111111112111211 ),
   State_1111111111211121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           sida
   ),
   In( <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
   ),
   MID_Receiver( mid_1111111111211121 )
   ]
  --[
  ProgressFrom_11111111112111211( ~prog_11111111112111211 ),
  Receive( mid_1111111111211121,
           <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
  )
  ]->
   [
   State_11111111112111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_11111111112111211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_ContractA_A_B_A_B_TEXT_TTP_TTP_sida11111111112111211:
   [
   State_11111111112111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_11111111112111211, sida
   )
   ]
  --[
  Event( ), ContractA( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_111111111121112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_11111111112111211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndA3_A_B_A_B_TEXT_TTP_TTP_sida111111111121112111:
   [
   State_111111111121112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_11111111112111211, sida
   )
   ]
  --[
  ProgressTo_1111111111211121111( ~prog_11111111112111211 ),
  Event( ), EndA3( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_1111111111211121111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                              ~prog_11111111112111211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero1111111111211121111:
   [
   State_1111111111211121111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                              ~prog_11111111112111211, sida
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_TTP_TTP_sida_sign_A_B_TEXT_TTP_TTP_A_B_abort_sk_A__111111111122:
   [
   MID_Sender( mid_111111111122 ),
   State_1111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida )
   ]
  --[
  ProgressTo_1111111111221( ~prog_111 ),
  Send( mid_111111111122,
        <<'TTP', $TTP>, sida, 
         sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk('A'))>
  )
  ]->
   [
   Out( <<'TTP', $TTP>, sida, 
         sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk('A'))>
   ),
   State_1111111111221( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_A_sida_signsign_A_B_TEXT_TTP_TTP_A_B_abort_sk_A__sk_TTP_TTP__11111111112211:
   [
   Fr( ~prog_111111111122111 ),
   State_1111111111221( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   ),
   In( <$A, sida, 
        sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>,
                  sk('A')),
             sk(<'TTP', $TTP>))
       >
   ),
   MID_Receiver( mid_11111111112211 )
   ]
  --[
  ProgressFrom_111111111122111( ~prog_111111111122111 ),
  Receive( mid_11111111112211,
           <$A, sida, 
            sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>,
                      sk('A')),
                 sk(<'TTP', $TTP>))
           >
  )
  ]->
   [
   State_111111111122111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                          ~prog_111111111122111, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_AbortA_A_B_A_B_TEXT_TTP_TTP_sida111111111122111:
   [
   State_111111111122111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                          ~prog_111111111122111, sida
   )
   ]
  --[ Event( ), AbortA( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_1111111111221111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111111122111, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndA1_A_B_A_B_TEXT_TTP_TTP_sida1111111111221111:
   [
   State_1111111111221111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111111122111, sida
   )
   ]
  --[
  ProgressTo_11111111112211111( ~prog_111111111122111 ), Event( ),
  EndA1( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_11111111112211111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111111122111, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero11111111112211111:
   [
   State_11111111112211111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111111122111, sida
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_A_sida_sign_A_B_TEXT_TTP_TTP_2_sk_B_11111111112212:
   [
   Fr( ~prog_111111111122121 ),
   State_1111111111221( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111, sida
   ),
   In( <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
   ),
   MID_Receiver( mid_11111111112212 )
   ]
  --[
  ProgressFrom_111111111122121( ~prog_111111111122121 ),
  Receive( mid_11111111112212,
           <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
  )
  ]->
   [
   State_111111111122121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                          ~prog_111111111122121, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_ContractA_A_B_A_B_TEXT_TTP_TTP_sida111111111122121:
   [
   State_111111111122121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                          ~prog_111111111122121, sida
   )
   ]
  --[
  Event( ), ContractA( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_1111111111221211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111111122121, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndA2_A_B_A_B_TEXT_TTP_TTP_sida1111111111221211:
   [
   State_1111111111221211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111111122121, sida
   )
   ]
  --[
  ProgressTo_11111111112212111( ~prog_111111111122121 ), Event( ),
  EndA2( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sida )
  ]->
   [
   State_11111111112212111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111111122121, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero11111111112212111:
   [
   State_11111111112212111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111111122121, sida
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP_11111121:
   [
   Fr( ~prog_111111211 ),
   State_1111112( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ),
   In( <'c', 
        pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
            pk(<'TTP', $TTP>))
       >
   )
   ]
  --[
  ProgressFrom_111111211( ~prog_111111211 ),
  ChannelInEvent( <'c', 
                   pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
                       pk(<'TTP', $TTP>))
                  >
  )
  ]->
   [
   State_111111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                    ~prog_111111211
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) new_sidb111111211:
   [
   State_111111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                    ~prog_111111211
   ),
   Fr( sidb )
   ]
  -->
   [
   State_1111112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                     ~prog_111111211, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_StartB_A_B_A_B_TEXT_TTP_TTP_sidb1111112111:
   [
   State_1111112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                     ~prog_111111211, sidb
   )
   ]
  --[ Event( ), StartB( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_11111121111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                      ~prog_111111211, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_c_pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP_11111121111:
   [
   State_11111121111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                      ~prog_111111211, sidb
   ),
   In( 'c' )
   ]
  --[ ChannelInEvent( 'c' ) ]->
   [
   State_111111211111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                       ~prog_111111211, sidb
   ),
   Out( pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
            pk(<'TTP', $TTP>))
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_sign_A_B_TEXT_TTP_TTP_1_sk_A1111112111111:
   [
   State_111111211111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                       ~prog_111111211, sidb
   ),
   In( <'c', sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))> )
   ]
  --[
  ChannelInEvent( <'c', 
                   sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))>
  )
  ]->
   [
   State_11111121111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                         ~prog_111111211, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_ContractB_A_B_A_B_TEXT_TTP_TTP_sidb11111121111111:
   [
   State_11111121111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                         ~prog_111111211, sidb
   )
   ]
  --[
  Event( ), ContractB( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_111111211111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                          ~prog_111111211, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndB3_A_B_A_B_TEXT_TTP_TTP_sidb111111211111111:
   [
   State_111111211111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                          ~prog_111111211, sidb
   )
   ]
  --[ Event( ), EndB3( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_1111112111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111211, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_c_sign_A_B_TEXT_TTP_TTP_2_sk_B1111112111111111:
   [
   State_1111112111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111211, sidb
   ),
   In( 'c' )
   ]
  --[
  ProgressTo_11111121111111111( ~prog_111111211 ),
  ChannelInEvent( 'c' )
  ]->
   [
   State_11111121111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111211, sidb
   ),
   Out( sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero11111121111111111:
   [
   State_11111121111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111211, sidb
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_TTP_TTP_sidb_aenc_pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__sign_A_B_TEXT_TTP_TTP_2_sk_B_pk_TTP_TTP__1111112111112:
   [
   MID_Sender( mid_1111112111112 ),
   State_111111211111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                       ~prog_111111211, sidb
   )
   ]
  --[
  ProgressTo_11111121111121( ~prog_111111211 ),
  Send( mid_1111112111112,
        <<'TTP', $TTP>, sidb, 
         aenc(<
               pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
                   pk(<'TTP', $TTP>)), 
               sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>,
              pk(<'TTP', $TTP>))
        >
  )
  ]->
   [
   Out( <<'TTP', $TTP>, sidb, 
         aenc(<
               pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
                   pk(<'TTP', $TTP>)), 
               sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>,
              pk(<'TTP', $TTP>))
        >
   ),
   State_11111121111121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                         ~prog_111111211, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_B_sidb_signsign_A_B_TEXT_TTP_TTP_A_B_abort_sk_A__sk_TTP_TTP__111111211111211:
   [
   Fr( ~prog_1111112111112111 ),
   State_11111121111121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                         ~prog_111111211, sidb
   ),
   In( <$B, sidb, 
        sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>,
                  sk('A')),
             sk(<'TTP', $TTP>))
       >
   ),
   MID_Receiver( mid_111111211111211 )
   ]
  --[
  ProgressFrom_1111112111112111( ~prog_1111112111112111 ),
  Receive( mid_111111211111211,
           <$B, sidb, 
            sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>,
                      sk('A')),
                 sk(<'TTP', $TTP>))
           >
  )
  ]->
   [
   State_1111112111112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111211, ~prog_1111112111112111, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_AbortB_A_B_A_B_TEXT_TTP_TTP_sidb1111112111112111:
   [
   State_1111112111112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111211, ~prog_1111112111112111, sidb
   )
   ]
  --[ Event( ), AbortB( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_11111121111121111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111211, ~prog_1111112111112111, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndB1_A_B_A_B_TEXT_TTP_TTP_sidb11111121111121111:
   [
   State_11111121111121111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111211, ~prog_1111112111112111, sidb
   )
   ]
  --[
  ProgressTo_111111211111211111( ~prog_1111112111112111 ), Event( ),
  EndB1( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_111111211111211111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_111111211, ~prog_1111112111112111, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero111111211111211111:
   [
   State_111111211111211111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_111111211, ~prog_1111112111112111, sidb
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_B_sidb_sign_A_B_TEXT_TTP_TTP_1_sk_A_111111211111212:
   [
   Fr( ~prog_1111112111112121 ),
   State_11111121111121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                         ~prog_111111211, sidb
   ),
   In( <$B, sidb, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))>
   ),
   MID_Receiver( mid_111111211111212 )
   ]
  --[
  ProgressFrom_1111112111112121( ~prog_1111112111112121 ),
  Receive( mid_111111211111212,
           <$B, sidb, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))>
  )
  ]->
   [
   State_1111112111112121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111211, ~prog_1111112111112121, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_ContractB_A_B_A_B_TEXT_TTP_TTP_sidb1111112111112121:
   [
   State_1111112111112121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111211, ~prog_1111112111112121, sidb
   )
   ]
  --[
  Event( ), ContractB( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_11111121111121211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111211, ~prog_1111112111112121, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndB2_A_B_A_B_TEXT_TTP_TTP_sidb11111121111121211:
   [
   State_11111121111121211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111211, ~prog_1111112111112121, sidb
   )
   ]
  --[
  ProgressTo_111111211111212111( ~prog_1111112111112121 ), Event( ),
  EndB2( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_111111211111212111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_111111211, ~prog_1111112111112121, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero111111211111212111:
   [
   State_111111211111212111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_111111211, ~prog_1111112111112121, sidb
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_fakepcspk_A_sk_B_pk_TTP_TTP__A_B_TEXT_TTP_TTP_1_11111122:
   [
   Fr( ~prog_111111221 ),
   State_1111112( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ),
   In( <'c', 
        fakepcs(pk($A), sk($B), pk(<'TTP', $TTP>),
                <<$A, $B, $TEXT, 'TTP', $TTP>, '1'>)
       >
   )
   ]
  --[
  ProgressFrom_111111221( ~prog_111111221 ),
  ChannelInEvent( <'c', 
                   fakepcs(pk($A), sk($B), pk(<'TTP', $TTP>),
                           <<$A, $B, $TEXT, 'TTP', $TTP>, '1'>)
                  >
  )
  ]->
   [
   State_111111221( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                    ~prog_111111221
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) new_sidb111111221:
   [
   State_111111221( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                    ~prog_111111221
   ),
   Fr( sidb )
   ]
  -->
   [
   State_1111112211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                     ~prog_111111221, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_StartB_A_B_A_B_TEXT_TTP_TTP_sidb1111112211:
   [
   State_1111112211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                     ~prog_111111221, sidb
   )
   ]
  --[ Event( ), StartB( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_11111122111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                      ~prog_111111221, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_c_pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP_11111122111:
   [
   State_11111122111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                      ~prog_111111221, sidb
   ),
   In( 'c' )
   ]
  --[ ChannelInEvent( 'c' ) ]->
   [
   State_111111221111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                       ~prog_111111221, sidb
   ),
   Out( pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
            pk(<'TTP', $TTP>))
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_sign_A_B_TEXT_TTP_TTP_1_sk_A1111112211111:
   [
   State_111111221111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                       ~prog_111111221, sidb
   ),
   In( <'c', sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))> )
   ]
  --[
  ChannelInEvent( <'c', 
                   sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))>
  )
  ]->
   [
   State_11111122111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                         ~prog_111111221, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_ContractB_A_B_A_B_TEXT_TTP_TTP_sidb11111122111111:
   [
   State_11111122111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                         ~prog_111111221, sidb
   )
   ]
  --[
  Event( ), ContractB( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_111111221111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                          ~prog_111111221, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndB3_A_B_A_B_TEXT_TTP_TTP_sidb111111221111111:
   [
   State_111111221111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                          ~prog_111111221, sidb
   )
   ]
  --[ Event( ), EndB3( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_1111112211111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111221, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_c_sign_A_B_TEXT_TTP_TTP_2_sk_B1111112211111111:
   [
   State_1111112211111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111221, sidb
   ),
   In( 'c' )
   ]
  --[
  ProgressTo_11111122111111111( ~prog_111111221 ),
  ChannelInEvent( 'c' )
  ]->
   [
   State_11111122111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111221, sidb
   ),
   Out( sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero11111122111111111:
   [
   State_11111122111111111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111221, sidb
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_TTP_TTP_sidb_aenc_fakepcspk_A_sk_B_pk_TTP_TTP__A_B_TEXT_TTP_TTP_1__sign_A_B_TEXT_TTP_TTP_2_sk_B_pk_TTP_TTP__1111112211112:
   [
   MID_Sender( mid_1111112211112 ),
   State_111111221111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                       ~prog_111111221, sidb
   )
   ]
  --[
  ProgressTo_11111122111121( ~prog_111111221 ),
  Send( mid_1111112211112,
        <<'TTP', $TTP>, sidb, 
         aenc(<
               fakepcs(pk($A), sk($B), pk(<'TTP', $TTP>),
                       <<$A, $B, $TEXT, 'TTP', $TTP>, '1'>), 
               sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>,
              pk(<'TTP', $TTP>))
        >
  )
  ]->
   [
   Out( <<'TTP', $TTP>, sidb, 
         aenc(<
               fakepcs(pk($A), sk($B), pk(<'TTP', $TTP>),
                       <<$A, $B, $TEXT, 'TTP', $TTP>, '1'>), 
               sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>,
              pk(<'TTP', $TTP>))
        >
   ),
   State_11111122111121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                         ~prog_111111221, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_B_sidb_signsign_A_B_TEXT_TTP_TTP_A_B_abort_sk_A__sk_TTP_TTP__111111221111211:
   [
   Fr( ~prog_1111112211112111 ),
   State_11111122111121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                         ~prog_111111221, sidb
   ),
   In( <$B, sidb, 
        sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>,
                  sk('A')),
             sk(<'TTP', $TTP>))
       >
   ),
   MID_Receiver( mid_111111221111211 )
   ]
  --[
  ProgressFrom_1111112211112111( ~prog_1111112211112111 ),
  Receive( mid_111111221111211,
           <$B, sidb, 
            sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>,
                      sk('A')),
                 sk(<'TTP', $TTP>))
           >
  )
  ]->
   [
   State_1111112211112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111221, ~prog_1111112211112111, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_AbortB_A_B_A_B_TEXT_TTP_TTP_sidb1111112211112111:
   [
   State_1111112211112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111221, ~prog_1111112211112111, sidb
   )
   ]
  --[ Event( ), AbortB( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_11111122111121111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111221, ~prog_1111112211112111, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndB1_A_B_A_B_TEXT_TTP_TTP_sidb11111122111121111:
   [
   State_11111122111121111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111221, ~prog_1111112211112111, sidb
   )
   ]
  --[
  ProgressTo_111111221111211111( ~prog_1111112211112111 ), Event( ),
  EndB1( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_111111221111211111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_111111221, ~prog_1111112211112111, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero111111221111211111:
   [
   State_111111221111211111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_111111221, ~prog_1111112211112111, sidb
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_B_sidb_sign_A_B_TEXT_TTP_TTP_1_sk_A_111111221111212:
   [
   Fr( ~prog_1111112211112121 ),
   State_11111122111121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                         ~prog_111111221, sidb
   ),
   In( <$B, sidb, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))>
   ),
   MID_Receiver( mid_111111221111212 )
   ]
  --[
  ProgressFrom_1111112211112121( ~prog_1111112211112121 ),
  Receive( mid_111111221111212,
           <$B, sidb, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))>
  )
  ]->
   [
   State_1111112211112121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111221, ~prog_1111112211112121, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_ContractB_A_B_A_B_TEXT_TTP_TTP_sidb1111112211112121:
   [
   State_1111112211112121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                           ~prog_111111221, ~prog_1111112211112121, sidb
   )
   ]
  --[
  Event( ), ContractB( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_11111122111121211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111221, ~prog_1111112211112121, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_EndB2_A_B_A_B_TEXT_TTP_TTP_sidb11111122111121211:
   [
   State_11111122111121211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                            ~prog_111111221, ~prog_1111112211112121, sidb
   )
   ]
  --[
  ProgressTo_111111221111212111( ~prog_1111112211112121 ), Event( ),
  EndB2( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP>, sidb )
  ]->
   [
   State_111111221111212111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_111111221, ~prog_1111112211112121, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero111111221111212111:
   [
   State_111111221111212111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                             ~prog_111111221, ~prog_1111112211112121, sidb
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_TTP_TTP_sida_sign_A_B_TEXT_TTP_TTP_A_B_abort_sk_A_1111121:
   [
   Fr( ~prog_11111211 ),
   State_111112( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ),
   In( <<'TTP', $TTP>, sida, 
        sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk($A))>
   ),
   MID_Receiver( mid_1111121 )
   ]
  --[
  ProgressFrom_11111211( ~prog_11111211 ),
  Receive( mid_1111121,
           <<'TTP', $TTP>, sida, 
            sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk($A))>
  )
  ]->
   [
   State_11111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                   ~prog_11111211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lock_A_B_TEXT_TTP_TTP_11111211:
   [
   State_11111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                   ~prog_11111211, sida
   ),
   Fr( ~lock6 )
   ]
  --[ Lock( ~lock6, <$A, $B, $TEXT, 'TTP', $TTP> ) ]->
   [
   State_111112111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                    ~prog_11111211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_A_sida_signsign_A_B_TEXT_TTP_TTP_A_B_abort_sk_A_sk_TTP_TTP__111112111:
   [
   MID_Sender( mid_111112111 ),
   State_111112111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                    ~prog_11111211, sida
   )
   ]
  --[
  Send( mid_111112111,
        <$A, sida, 
         sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk($A)),
              sk(<'TTP', $TTP>))
        >
  )
  ]->
   [
   Out( <$A, sida, 
         sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk($A)),
              sk(<'TTP', $TTP>))
        >
   ),
   State_1111121111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                     ~prog_11111211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_AbortCert_A_B_A_B_TEXT_TTP_TTP_1111121111:
   [
   State_1111121111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                     ~prog_11111211, sida
   )
   ]
  --[
  ProgressTo_11111211111( ~prog_11111211 ), Event( ),
  AbortCert( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP> )
  ]->
   [
   State_11111211111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                      ~prog_11111211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_TTP_TTP_sidb_aenc_pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__sign_A_B_TEXT_TTP_TTP_2_sk_B_pk_TTP_TTP__11111211111:
   [
   Fr( ~prog_111112111111 ),
   State_11111211111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                      ~prog_11111211, sida
   ),
   In( <<'TTP', $TTP>, sidb, 
        aenc(<
              pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
                  pk(<'TTP', $TTP>)), 
              sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>,
             pk(<'TTP', $TTP>))
       >
   ),
   MID_Receiver( mid_11111211111 )
   ]
  --[
  ProgressFrom_111112111111( ~prog_111112111111 ),
  Receive( mid_11111211111,
           <<'TTP', $TTP>, sidb, 
            aenc(<
                  pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
                      pk(<'TTP', $TTP>)), 
                  sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>,
                 pk(<'TTP', $TTP>))
           >
  )
  ]->
   [
   State_111112111111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                       ~prog_11111211, ~prog_111112111111, sida, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_B_sidb_signsign_A_B_TEXT_TTP_TTP_A_B_abort_sk_A_sk_TTP_TTP__111112111111:
   [
   MID_Sender( mid_111112111111 ),
   State_111112111111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                       ~prog_11111211, ~prog_111112111111, sida, sidb
   )
   ]
  --[
  ProgressTo_1111121111111( ~prog_111112111111 ),
  Send( mid_111112111111,
        <$B, sidb, 
         sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk($A)),
              sk(<'TTP', $TTP>))
        >
  )
  ]->
   [
   Out( <$B, sidb, 
         sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk($A)),
              sk(<'TTP', $TTP>))
        >
   ),
   State_1111121111111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_,
                        ~prog_111, ~prog_11111211, ~prog_111112111111, sida, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero1111121111111:
   [
   State_1111121111111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_,
                        ~prog_111, ~prog_11111211, ~prog_111112111111, sida, sidb
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_TTP_TTP_sida_sign_A_B_TEXT_TTP_TTP_1_sk_A_pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP__11111221:
   [
   Fr( ~prog_111112211 ),
   State_111112( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ),
   In( <<'TTP', $TTP>, sida, 
        sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), 
        pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
            pk(<'TTP', $TTP>))
       >
   ),
   MID_Receiver( mid_11111221 )
   ]
  --[
  ProgressFrom_111112211( ~prog_111112211 ),
  Receive( mid_11111221,
           <<'TTP', $TTP>, sida, 
            sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), 
            pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
                pk(<'TTP', $TTP>))
           >
  )
  ]->
   [
   State_111112211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                    ~prog_111112211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lock_A_B_TEXT_TTP_TTP_111112211:
   [
   State_111112211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                    ~prog_111112211, sida
   ),
   Fr( ~lock6 )
   ]
  --[ Lock( ~lock6, <$A, $B, $TEXT, 'TTP', $TTP> ) ]->
   [
   State_1111122111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                     ~prog_111112211, sida
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_A_sida_convertpcssk_TTP_TTP__pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP__1111122111:
   [
   MID_Sender( mid_1111122111 ),
   State_1111122111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                     ~prog_111112211, sida
   )
   ]
  --[
  ProgressTo_11111221111( ~prog_111112211 ),
  Send( mid_1111122111,
        <$A, sida, 
         convertpcs(sk(<'TTP', $TTP>),
                    pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
                        pk(<'TTP', $TTP>)))
        >
  )
  ]->
   [
   Out( <$A, sida, 
         convertpcs(sk(<'TTP', $TTP>),
                    pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
                        pk(<'TTP', $TTP>)))
        >
   ),
   State_11111221111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                      ~prog_111112211, sida
   )
   ]

  /*
  rule (modulo AC) out_r_A_sida_convertpcssk_TTP_TTP__pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP__1111122111:
     [
     MID_Sender( mid_1111122111 ),
     State_1111122111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                       ~prog_111112211, sida
     )
     ]
    --[
    ProgressTo_11111221111( ~prog_111112211 ),
    Send( mid_1111122111,
          <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
    )
    ]->
     [
     Out( <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
     ),
     State_11111221111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                        ~prog_111112211, sida
     )
     ]
  */

rule (modulo E) in_r_TTP_TTP_sidb_aenc_pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__sign_A_B_TEXT_TTP_TTP_2_sk_B_pk_TTP_TTP__11111221111:
   [
   Fr( ~prog_111112211111 ),
   State_11111221111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                      ~prog_111112211, sida
   ),
   In( <<'TTP', $TTP>, sidb, 
        aenc(<
              pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
                  pk(<'TTP', $TTP>)), 
              sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>,
             pk(<'TTP', $TTP>))
       >
   ),
   MID_Receiver( mid_11111221111 )
   ]
  --[
  ProgressFrom_111112211111( ~prog_111112211111 ),
  Receive( mid_11111221111,
           <<'TTP', $TTP>, sidb, 
            aenc(<
                  pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
                      pk(<'TTP', $TTP>)), 
                  sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>,
                 pk(<'TTP', $TTP>))
           >
  )
  ]->
   [
   State_111112211111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                       ~prog_111112211, ~prog_111112211111, sida, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_B_sidb_sign_A_B_TEXT_TTP_TTP_1_sk_A_111112211111:
   [
   MID_Sender( mid_111112211111 ),
   State_111112211111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_, ~prog_111,
                       ~prog_111112211, ~prog_111112211111, sida, sidb
   )
   ]
  --[
  Send( mid_111112211111,
        <$B, sidb, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))>
  )
  ]->
   [
   Out( <$B, sidb, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))>
   ),
   State_1111122111111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_,
                        ~prog_111, ~prog_111112211, ~prog_111112211111, sida, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_ResolveCert_A_B_A_B_TEXT_TTP_TTP_1111122111111:
   [
   State_1111122111111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_,
                        ~prog_111, ~prog_111112211, ~prog_111112211111, sida, sidb
   )
   ]
  --[
  ProgressTo_11111221111111( ~prog_111112211111 ), Event( ),
  ResolveCert( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP> )
  ]->
   [
   State_11111221111111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_,
                         ~prog_111, ~prog_111112211, ~prog_111112211111, sida, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero11111221111111:
   [
   State_11111221111111( $A, $B, $TEXT, $TTP, ~lock6, ~prog_,
                         ~prog_111, ~prog_111112211, ~prog_111112211111, sida, sidb
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_TTP_TTP_sidb_aenc_pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__sign_A_B_TEXT_TTP_TTP_2_sk_B_pk_TTP_TTP__11111222:
   [
   Fr( ~prog_111112221 ),
   State_111112( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ),
   In( <<'TTP', $TTP>, sidb, 
        aenc(<
              pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
                  pk(<'TTP', $TTP>)), 
              sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>,
             pk(<'TTP', $TTP>))
       >
   ),
   MID_Receiver( mid_11111222 )
   ]
  --[
  ProgressFrom_111112221( ~prog_111112221 ),
  Receive( mid_11111222,
           <<'TTP', $TTP>, sidb, 
            aenc(<
                  pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
                      pk(<'TTP', $TTP>)), 
                  sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>,
                 pk(<'TTP', $TTP>))
           >
  )
  ]->
   [
   State_111112221( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                    ~prog_111112221, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lock_A_B_TEXT_TTP_TTP_111112221:
   [
   State_111112221( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                    ~prog_111112221, sidb
   ),
   Fr( ~lock7 )
   ]
  --[ Lock( ~lock7, <$A, $B, $TEXT, 'TTP', $TTP> ) ]->
   [
   State_1111122211( $A, $B, $TEXT, $TTP, ~lock7, ~prog_, ~prog_111,
                     ~prog_111112221, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_B_sidb_convertpcssk_TTP_TTP__pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__1111122211:
   [
   MID_Sender( mid_1111122211 ),
   State_1111122211( $A, $B, $TEXT, $TTP, ~lock7, ~prog_, ~prog_111,
                     ~prog_111112221, sidb
   )
   ]
  --[
  Send( mid_1111122211,
        <$B, sidb, 
         convertpcs(sk(<'TTP', $TTP>),
                    pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
                        pk(<'TTP', $TTP>)))
        >
  )
  ]->
   [
   Out( <$B, sidb, 
         convertpcs(sk(<'TTP', $TTP>),
                    pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), pk($B),
                        pk(<'TTP', $TTP>)))
        >
   ),
   State_11111222111( $A, $B, $TEXT, $TTP, ~lock7, ~prog_, ~prog_111,
                      ~prog_111112221, sidb
   )
   ]

  /*
  rule (modulo AC) out_r_B_sidb_convertpcssk_TTP_TTP__pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__1111122211:
     [
     MID_Sender( mid_1111122211 ),
     State_1111122211( $A, $B, $TEXT, $TTP, ~lock7, ~prog_, ~prog_111,
                       ~prog_111112221, sidb
     )
     ]
    --[
    Send( mid_1111122211,
          <$B, sidb, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))>
    )
    ]->
     [
     Out( <$B, sidb, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A))>
     ),
     State_11111222111( $A, $B, $TEXT, $TTP, ~lock7, ~prog_, ~prog_111,
                        ~prog_111112221, sidb
     )
     ]
  */

rule (modulo E) event_ResolveCert_A_B_A_B_TEXT_TTP_TTP_11111222111:
   [
   State_11111222111( $A, $B, $TEXT, $TTP, ~lock7, ~prog_, ~prog_111,
                      ~prog_111112221, sidb
   )
   ]
  --[
  ProgressTo_111112221111( ~prog_111112221 ), Event( ),
  ResolveCert( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP> )
  ]->
   [
   State_111112221111( $A, $B, $TEXT, $TTP, ~lock7, ~prog_, ~prog_111,
                       ~prog_111112221, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_TTP_TTP_sida_sign_A_B_TEXT_TTP_TTP_A_B_abort_sk_A_1111122211111:
   [
   Fr( ~prog_11111222111111 ),
   State_111112221111( $A, $B, $TEXT, $TTP, ~lock7, ~prog_, ~prog_111,
                       ~prog_111112221, sidb
   ),
   In( <<'TTP', $TTP>, sida, 
        sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk($A))>
   ),
   MID_Receiver( mid_1111122211111 )
   ]
  --[
  ProgressFrom_11111222111111( ~prog_11111222111111 ),
  Receive( mid_1111122211111,
           <<'TTP', $TTP>, sida, 
            sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk($A))>
  )
  ]->
   [
   State_11111222111111( $A, $B, $TEXT, $TTP, ~lock7, ~prog_,
                         ~prog_111, ~prog_111112221, ~prog_11111222111111, sida, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_A_sida_sign_A_B_TEXT_TTP_TTP_2_sk_B_11111222111111:
   [
   MID_Sender( mid_11111222111111 ),
   State_11111222111111( $A, $B, $TEXT, $TTP, ~lock7, ~prog_,
                         ~prog_111, ~prog_111112221, ~prog_11111222111111, sida, sidb
   )
   ]
  --[
  ProgressTo_111112221111111( ~prog_11111222111111 ),
  Send( mid_11111222111111,
        <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
  )
  ]->
   [
   Out( <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
   ),
   State_111112221111111( $A, $B, $TEXT, $TTP, ~lock7, ~prog_,
                          ~prog_111, ~prog_111112221, ~prog_11111222111111, sida, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero111112221111111:
   [
   State_111112221111111( $A, $B, $TEXT, $TTP, ~lock7, ~prog_,
                          ~prog_111, ~prog_111112221, ~prog_11111222111111, sida, sidb
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_TTP_TTP_sida_sign_A_B_TEXT_TTP_TTP_1_sk_A_pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP__1111122211112:
   [
   Fr( ~prog_11111222111121 ),
   State_111112221111( $A, $B, $TEXT, $TTP, ~lock7, ~prog_, ~prog_111,
                       ~prog_111112221, sidb
   ),
   In( <<'TTP', $TTP>, sida, 
        sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), 
        pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
            pk(<'TTP', $TTP>))
       >
   ),
   MID_Receiver( mid_1111122211112 )
   ]
  --[
  ProgressFrom_11111222111121( ~prog_11111222111121 ),
  Receive( mid_1111122211112,
           <<'TTP', $TTP>, sida, 
            sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), 
            pcs(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B)), pk($A),
                pk(<'TTP', $TTP>))
           >
  )
  ]->
   [
   State_11111222111121( $A, $B, $TEXT, $TTP, ~lock7, ~prog_,
                         ~prog_111, ~prog_111112221, ~prog_11111222111121, sida, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_r_A_sida_sign_A_B_TEXT_TTP_TTP_2_sk_B_11111222111121:
   [
   MID_Sender( mid_11111222111121 ),
   State_11111222111121( $A, $B, $TEXT, $TTP, ~lock7, ~prog_,
                         ~prog_111, ~prog_111112221, ~prog_11111222111121, sida, sidb
   )
   ]
  --[
  ProgressTo_111112221111211( ~prog_11111222111121 ),
  Send( mid_11111222111121,
        <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
  )
  ]->
   [
   Out( <$A, sida, sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
   ),
   State_111112221111211( $A, $B, $TEXT, $TTP, ~lock7, ~prog_,
                          ~prog_111, ~prog_111112221, ~prog_11111222111121, sida, sidb
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero111112221111211:
   [
   State_111112221111211( $A, $B, $TEXT, $TTP, ~lock7, ~prog_,
                          ~prog_111, ~prog_111112221, ~prog_11111222111121, sida, sidb
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) Par11112:
   [ State_11112( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ) ]
  --[ ProgressTo_111122( ~prog_111 ), ProgressTo_111121( ~prog_111 )
  ]->
   [
   State_111121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ),
   State_111122( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_sign_A_B_TEXT_TTP_TTP_1_sk_A_sign_A_B_TEXT_TTP_TTP_2_sk_B_111121:
   [
   Fr( ~prog_1111211 ),
   State_111121( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ),
   In( <'c', sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), 
        sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
   )
   ]
  --[
  ProgressFrom_1111211( ~prog_1111211 ),
  ChannelInEvent( <'c', 
                   sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '1'>, sk($A)), 
                   sign(<<$A, $B, $TEXT, 'TTP', $TTP>, '2'>, sk($B))>
  )
  ]->
   [
   State_1111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                  ~prog_1111211
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_ContractJudge_A_B_A_B_TEXT_TTP_TTP_1111211:
   [
   State_1111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                  ~prog_1111211
   )
   ]
  --[
  ProgressTo_11112111( ~prog_1111211 ), Event( ),
  ContractJudge( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP> )
  ]->
   [
   State_11112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                   ~prog_1111211
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero11112111:
   [
   State_11112111( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                   ~prog_1111211
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_signsign_A_B_TEXT_TTP_TTP_A_B_abort_sk_A_sk_TTP_TTP_111122:
   [
   Fr( ~prog_1111221 ),
   State_111122( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111 ),
   In( <'c', 
        sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk($A)),
             sk(<'TTP', $TTP>))
       >
   )
   ]
  --[
  ProgressFrom_1111221( ~prog_1111221 ),
  ChannelInEvent( <'c', 
                   sign(sign(<<$A, $B, $TEXT, 'TTP', $TTP>, $A, $B, 'abort'>, sk($A)),
                        sk(<'TTP', $TTP>))
                  >
  )
  ]->
   [
   State_1111221( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                  ~prog_1111221
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_AbortJudge_A_B_A_B_TEXT_TTP_TTP_1111221:
   [
   State_1111221( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                  ~prog_1111221
   )
   ]
  --[
  ProgressTo_11112211( ~prog_1111221 ), Event( ),
  AbortJudge( $A, $B, <$A, $B, $TEXT, 'TTP', $TTP> )
  ]->
   [
   State_11112211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                   ~prog_1111221
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero11112211:
   [
   State_11112211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                   ~prog_1111221
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_02:
   [ State_2( ~prog_ ) ] --> [ !Semistate_21( ~prog_ ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_12:
   [ !Semistate_21( ~prog_ ) ] --> [ State_21( ~prog_ ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_c_corrupt_x_21:
   [ Fr( ~prog_211 ), State_21( ~prog_ ), In( <'c', 'corrupt', $x> ) ]
  --[
  ProgressFrom_211( ~prog_211 ),
  ChannelInEvent( <'c', 'corrupt', $x> )
  ]->
   [ State_211( $x, ~prog_, ~prog_211 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_Corrupt_x211:
   [ State_211( $x, ~prog_, ~prog_211 ) ]
  --[ Event( ), Corrupt( $x ) ]->
   [ State_2111( $x, ~prog_, ~prog_211 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_c_sk_x2111:
   [ State_2111( $x, ~prog_, ~prog_211 ), In( 'c' ) ]
  --[ ProgressTo_21111( ~prog_211 ), ChannelInEvent( 'c' ) ]->
   [ State_21111( $x, ~prog_, ~prog_211 ), Out( sk($x) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_021111:
   [ State_21111( $x, ~prog_, ~prog_211 ) ]
  -->
   [ !Semistate_211111( $x, ~prog_, ~prog_211 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_121111:
   [ !Semistate_211111( $x, ~prog_, ~prog_211 ) ]
  -->
   [ State_211111( $x, ~prog_, ~prog_211 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_r_x_sid_m_211111:
   [
   State_211111( $x, ~prog_, ~prog_211 ), In( <$x, sid, m> ),
   MID_Receiver( mid_211111 )
   ]
  --[ Receive( mid_211111, <$x, sid, m> ) ]->
   [ State_2111111( $x, ~prog_, ~prog_211, m, sid ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero2111111:
   [ State_2111111( $x, ~prog_, ~prog_211, m, sid ) ] --> [ ]

  /* has exactly the trivial AC variant */

restriction locking:
  "∀ l x lp #t1 #t3.
    ((Lock( l, x ) @ #t1) ∧ (Lock( lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock( l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0. (Unlock( l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ lp.1 #t0.
            (Lock( lp.1, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ lp.1 #t0.
           (Unlock( lp.1, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction progress_111112221_to_111112221111:
  "∀ p #t1.
    (ProgressFrom_111112221( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_111112221111( p ) @ #t2)"

restriction progress_111111221_to_11111122111111111_or_11111122111121:
  "∀ p #t1.
    (ProgressFrom_111111221( p ) @ #t1) ⇒
    ((∃ #t2. ProgressTo_11111122111111111( p ) @ #t2) ∨
     (∃ #t2. ProgressTo_11111122111121( p ) @ #t2))"

restriction progress_1111221_to_11112211:
  "∀ p #t1.
    (ProgressFrom_1111221( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_11112211( p ) @ #t2)"

restriction progress_111111111122121_to_11111111112212111:
  "∀ p #t1.
    (ProgressFrom_111111111122121( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_11111111112212111( p ) @ #t2)"

restriction progress_1111112211112121_to_111111221111212111:
  "∀ p #t1.
    (ProgressFrom_1111112211112121( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_111111221111212111( p ) @ #t2)"

restriction progress_1111112111112121_to_111111211111212111:
  "∀ p #t1.
    (ProgressFrom_1111112111112121( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_111111211111212111( p ) @ #t2)"

restriction progress_11111222111121_to_111112221111211:
  "∀ p #t1.
    (ProgressFrom_11111222111121( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_111112221111211( p ) @ #t2)"

restriction progress_111112211_to_11111221111:
  "∀ p #t1.
    (ProgressFrom_111112211( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_11111221111( p ) @ #t2)"

restriction progress_11111111112111211_to_1111111111211121111:
  "∀ p #t1.
    (ProgressFrom_11111111112111211( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_1111111111211121111( p ) @ #t2)"

restriction progress_1111111111111211_to_111111111111121111:
  "∀ p #t1.
    (ProgressFrom_1111111111111211( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_111111111111121111( p ) @ #t2)"

restriction progress_111111211_to_11111121111111111_or_11111121111121:
  "∀ p #t1.
    (ProgressFrom_111111211( p ) @ #t1) ⇒
    ((∃ #t2. ProgressTo_11111121111111111( p ) @ #t2) ∨
     (∃ #t2. ProgressTo_11111121111121( p ) @ #t2))"

restriction progress_11111211_to_11111211111:
  "∀ p #t1.
    (ProgressFrom_11111211( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_11111211111( p ) @ #t2)"

restriction progress_1111211_to_11112111:
  "∀ p #t1.
    (ProgressFrom_1111211( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_11112111( p ) @ #t2)"

restriction progress_211_to_21111:
  "∀ p #t1.
    (ProgressFrom_211( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_21111( p ) @ #t2)"

restriction progress_111111111122111_to_11111111112211111:
  "∀ p #t1.
    (ProgressFrom_111111111122111( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_11111111112211111( p ) @ #t2)"

restriction progress_1111112211112111_to_111111221111211111:
  "∀ p #t1.
    (ProgressFrom_1111112211112111( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_111111221111211111( p ) @ #t2)"

restriction progress_1111112111112111_to_111111211111211111:
  "∀ p #t1.
    (ProgressFrom_1111112111112111( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_111111211111211111( p ) @ #t2)"

restriction progress_111112211111_to_11111221111111:
  "∀ p #t1.
    (ProgressFrom_111112211111( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_11111221111111( p ) @ #t2)"

restriction progress_11111222111111_to_111112221111111:
  "∀ p #t1.
    (ProgressFrom_11111222111111( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_111112221111111( p ) @ #t2)"

restriction progress_111112111111_to_1111121111111:
  "∀ p #t1.
    (ProgressFrom_111112111111( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_1111121111111( p ) @ #t2)"

restriction progress_111_to_111122:
  "∀ p #t1.
    (ProgressFrom_111( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_111122( p ) @ #t2)"

restriction progress_111_to_1111112:
  "∀ p #t1.
    (ProgressFrom_111( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_1111112( p ) @ #t2)"

restriction progress_111_to_111112:
  "∀ p #t1.
    (ProgressFrom_111( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_111112( p ) @ #t2)"

restriction progress_111_to_111121:
  "∀ p #t1.
    (ProgressFrom_111( p ) @ #t1) ⇒
    (∃ #t2. ProgressTo_111121( p ) @ #t2)"

restriction progress_111_to_11111111111111111_or_111111111121111111_or_111111111111121_or_1111111111211121_or_1111111111221:
  "∀ p #t1.
    (ProgressFrom_111( p ) @ #t1) ⇒
    (((((∃ #t2. ProgressTo_11111111111111111( p ) @ #t2) ∨
        (∃ #t2. ProgressTo_111111111121111111( p ) @ #t2)) ∨
       (∃ #t2. ProgressTo_111111111111121( p ) @ #t2)) ∨
      (∃ #t2. ProgressTo_1111111111211121( p ) @ #t2)) ∨
     (∃ #t2. ProgressTo_1111111111221( p ) @ #t2))"

restriction progress__to_2:
  "∀ p #t1.
    (ProgressFrom_( p ) @ #t1) ⇒ (∃ #t2. ProgressTo_2( p ) @ #t2)"

restriction progress__to_1:
  "∀ p #t1.
    (ProgressFrom_( p ) @ #t1) ⇒ (∃ #t2. ProgressTo_1( p ) @ #t2)"

restriction progress_init:
  "∃ #t. Init( ) @ #t"

restriction resilient:
  "∀ #i x y.
    (Send( x, y ) @ #i) ⇒ (∃ #j. (Receive( x, y ) @ #j) ∧ (#i < #j))"

lemma sanity_a4b3:
  exists-trace
  "∃ #i #j a b t sida sidb.
    (((EndA4( a, b, t, sida ) @ #i) ∧ (EndB3( a, b, t, sidb ) @ #j)) ∧
     (¬(∃ #k. Corrupt( a ) @ #k))) ∧
    (¬(∃ #k. Corrupt( b ) @ #k))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i #j a b t sida sidb.
  (EndA4( a, b, t, sida ) @ #i) ∧ (EndB3( a, b, t, sidb ) @ #j)
 ∧
  (∀ #k. (Corrupt( a ) @ #k) ⇒ ⊥) ∧ (∀ #k. (Corrupt( b ) @ #k) ⇒ ⊥)"
*/
by sorry

lemma sanity_a1b1:
  exists-trace
  "∃ #i #j a b t sida sidb.
    (((EndA1( a, b, t, sida ) @ #i) ∧ (EndB1( a, b, t, sidb ) @ #j)) ∧
     (¬(∃ #k. Corrupt( a ) @ #k))) ∧
    (¬(∃ #k. Corrupt( b ) @ #k))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i #j a b t sida sidb.
  (EndA1( a, b, t, sida ) @ #i) ∧ (EndB1( a, b, t, sidb ) @ #j)
 ∧
  (∀ #k. (Corrupt( a ) @ #k) ⇒ ⊥) ∧ (∀ #k. (Corrupt( b ) @ #k) ⇒ ⊥)"
*/
by sorry

lemma sanity_a2b2:
  exists-trace
  "∃ #i #j a b t sida sidb.
    (((EndA2( a, b, t, sida ) @ #i) ∧ (EndB2( a, b, t, sidb ) @ #j)) ∧
     (¬(∃ #k. Corrupt( a ) @ #k))) ∧
    (¬(∃ #k. Corrupt( b ) @ #k))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i #j a b t sida sidb.
  (EndA2( a, b, t, sida ) @ #i) ∧ (EndB2( a, b, t, sidb ) @ #j)
 ∧
  (∀ #k. (Corrupt( a ) @ #k) ⇒ ⊥) ∧ (∀ #k. (Corrupt( b ) @ #k) ⇒ ⊥)"
*/
by sorry

lemma sanity_a3b3:
  exists-trace
  "∃ #i #j a b t sida sidb.
    (((EndA3( a, b, t, sida ) @ #i) ∧ (EndB3( a, b, t, sidb ) @ #j)) ∧
     (¬(∃ #k. Corrupt( a ) @ #k))) ∧
    (¬(∃ #k. Corrupt( b ) @ #k))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i #j a b t sida sidb.
  (EndA3( a, b, t, sida ) @ #i) ∧ (EndB3( a, b, t, sidb ) @ #j)
 ∧
  (∀ #k. (Corrupt( a ) @ #k) ⇒ ⊥) ∧ (∀ #k. (Corrupt( b ) @ #k) ⇒ ⊥)"
*/
by sorry

lemma timelinessA [reuse]:
  all-traces
  "∀ #i a b t sida.
    (StartA( a, b, t, sida ) @ #i) ⇒
    (((∃ #j. ContractA( a, b, t, sida ) @ #j) ∨
      (∃ #j. AbortA( a, b, t, sida ) @ #j)) ∨
     (∃ #j. Corrupt( a ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ #i a b t sida.
  (StartA( a, b, t, sida ) @ #i)
 ∧
  (∀ #j. (ContractA( a, b, t, sida ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (AbortA( a, b, t, sida ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (Corrupt( a ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma timelinessB [reuse]:
  all-traces
  "∀ #i a b t nb.
    (StartB( a, b, t, nb ) @ #i) ⇒
    (((∃ #j. ContractB( a, b, t, nb ) @ #j) ∨
      (∃ #j. AbortB( a, b, t, nb ) @ #j)) ∨
     (∃ #j. Corrupt( b ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ #i a b t nb.
  (StartB( a, b, t, nb ) @ #i)
 ∧
  (∀ #j. (ContractB( a, b, t, nb ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (AbortB( a, b, t, nb ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (Corrupt( b ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma fullfairnessA:
  all-traces
  "∀ #i a b t.
    (ContractJudge( a, b, t ) @ #i) ⇒
    ((∃ #j sida. ContractA( a, b, t, sida ) @ #j) ∨
     (∃ #k. Corrupt( a ) @ #k))"
/*
guarded formula characterizing all counter-examples:
"∃ #i a b t.
  (ContractJudge( a, b, t ) @ #i)
 ∧
  (∀ #j sida. (ContractA( a, b, t, sida ) @ #j) ⇒ ⊥) ∧
  (∀ #k. (Corrupt( a ) @ #k) ⇒ ⊥)"
*/
by sorry

lemma fullfairnessB:
  all-traces
  "∀ #i a b t.
    (ContractJudge( a, b, t ) @ #i) ⇒
    ((∃ #j nb. ContractB( a, b, t, nb ) @ #j) ∨
     (∃ #k. Corrupt( b ) @ #k))"
/*
guarded formula characterizing all counter-examples:
"∃ #i a b t.
  (ContractJudge( a, b, t ) @ #i)
 ∧
  (∀ #j nb. (ContractB( a, b, t, nb ) @ #j) ⇒ ⊥) ∧
  (∀ #k. (Corrupt( b ) @ #k) ⇒ ⊥)"
*/
simplify
solve( State_1111211( $A, $B, $TEXT, $TTP, ~prog_, ~prog_111,
                      ~prog_1111211
       ) ▶₀ #i )
  case in_c_sign_A_B_TEXT_TTP_TTP_1_sk_A_sign_A_B_TEXT_TTP_TTP_2_sk_B_111121
  solve( State_( ~prog_ ) ▶₀ #t2 )
    case Init
    solve( State_( ~prog_ ) ▶₀ #t2.1 )
      case Init
      solve( State_( ~prog_ ) ▶₀ #t2.1 )
        case Init
        solve( State_( ~prog_ ) ▶₀ #t2.1 )
          case Init
          solve( State_111111( $A.1, $B.1, $TEXT.1, $TTP.1, ~prog_.1,
                               ~prog_111
                 ) ▶₀ #t2.1 )
            case Par11111
            solve( State_11111( $A.1, $B.1, $TEXT.1, $TTP.1, ~prog_.1,
                                ~prog_111
                   ) ▶₀ #t2.2 )
              case Par1111
              solve( State_11112( $A.1, $B.1, $TEXT.1, $TTP.1, ~prog_.1,
                                  ~prog_111
                     ) ▶₀ #t2.3 )
                case Par1111
                solve( State_11112( $A.1, $B.1, $TEXT.1, $TTP.1, ~prog_.1,
                                    ~prog_111
                       ) ▶₀ #t2.3 )
                  case Par1111
                  solve( State_1111211( $A.1, $B.1, $TEXT.1, $TTP.1, ~prog_.1,
                                        ~prog_111.1, ~prog_1111211
                         ) ▶₀ #t2.3 )
                    case in_c_sign_A_B_TEXT_TTP_TTP_1_sk_A_sign_A_B_TEXT_TTP_TTP_2_sk_B_111121
                    solve( State_( ~prog_ ) ▶₀ #t2.3 )
                      case Init
                      solve( State_( ~prog_ ) ▶₀ #t2.3 )
                        case Init
                        solve( State_( ~prog_ ) ▶₀ #t2.3 )
                          case Init
                          solve( State_( ~prog_ ) ▶₀ #t2.3 )
                            case Init
                            solve( State_( ~prog_ ) ▶₀ #t2.3 )
                              case Init
                              solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                case Init
                                solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                  case Init
                                  solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                    case Init
                                    solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                      case Init
                                      solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                        case Init
                                        solve( State_111111( $A.1, $B.1, $TEXT.1, $TTP.1, ~prog_.1,
                                                             ~prog_111
                                               ) ▶₀ #t2.3 )
                                          case Par11111
                                          solve( State_11111( $A.1, $B.1, $TEXT.1, $TTP.1, ~prog_.1,
                                                              ~prog_111
                                                 ) ▶₀ #t2.3 )
                                            case Par1111
                                            solve( State_11112( $A.1, $B.1, $TEXT.1, $TTP.1,
                                                                ~prog_.1, ~prog_111
                                                   ) ▶₀ #t2.3 )
                                              case Par1111
                                              solve( State_11112( $A.1, $B.1, $TEXT.1, $TTP.1,
                                                                  ~prog_.1, ~prog_111
                                                     ) ▶₀ #t2.3 )
                                                case Par1111
                                                solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                                  case Init
                                                  solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                                    case Init
                                                    solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                                      case Init
                                                      solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                                        case Init
                                                        solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                                          case Init
                                                          solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                                            case Init
                                                            solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                                              case Init
                                                              solve( State_( ~prog_ ) ▶₀ #t2.3 )
                                                                case Init
                                                                solve( !KU( sign(<
                                                                                  <$A, $B, $TEXT, 
                                                                                   'TTP', $TTP>, 
                                                                                  '2'>,
                                                                                 sk($B))
                                                                       ) @ #vk.5 )
                                                                  case csign
                                                                  solve( !KU( sk($B) ) @ #vk.19 )
                                                                    case out_c_sk_x2111
                                                                    by contradiction
                                                                       /* from formulas */
                                                                  qed
                                                                next
                                                                  case out_c_sign_A_B_TEXT_TTP_TTP_2_sk_B1111112111111111
                                                                  by contradiction
                                                                     /* from formulas */
                                                                next
                                                                  case out_c_sign_A_B_TEXT_TTP_TTP_2_sk_B1111112211111111
                                                                  by contradiction
                                                                     /* from formulas */
                                                                next
                                                                  case out_r_A_sida_convertpcssk_TTP_TTP__pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP__1111122111
                                                                  solve( State_1111122111( $A.5,
                                                                                           $B.5,
                                                                                           $TEXT.5,
                                                                                           $TTP.5,
                                                                                           ~lock6.1,
                                                                                           ~prog_.5,
                                                                                           ~prog_111.2,
                                                                                           ~prog_111112211,
                                                                                           sida.1
                                                                         ) ▶₁ #t2.9 )
                                                                    case lock_A_B_TEXT_TTP_TTP_111112211
                                                                    solve( State_( ~prog_
                                                                           ) ▶₀ #t2.3 )
                                                                      case Init
                                                                      solve( State_( ~prog_
                                                                             ) ▶₀ #t2.3 )
                                                                        case Init
                                                                        solve( State_111111( $A.1,
                                                                                             $B.1,
                                                                                             $TEXT.1,
                                                                                             $TTP.1,
                                                                                             ~prog_.1,
                                                                                             ~prog_111.1
                                                                               ) ▶₀ #t2.3 )
                                                                          case Par11111
                                                                          solve( State_11111( $A.1,
                                                                                              $B.1,
                                                                                              $TEXT.1,
                                                                                              $TTP.1,
                                                                                              ~prog_.1,
                                                                                              ~prog_111.1
                                                                                 ) ▶₀ #t2.4 )
                                                                            case Par1111
                                                                            solve( State_11112( $A.1,
                                                                                                $B.1,
                                                                                                $TEXT.1,
                                                                                                $TTP.1,
                                                                                                ~prog_.1,
                                                                                                ~prog_111.1
                                                                                   ) ▶₀ #t2.5 )
                                                                              case Par1111
                                                                              solve( State_11112( $A.1,
                                                                                                  $B.1,
                                                                                                  $TEXT.1,
                                                                                                  $TTP.1,
                                                                                                  ~prog_.1,
                                                                                                  ~prog_111.1
                                                                                     ) ▶₀ #t2.6 )
                                                                                case Par1111
                                                                                solve( State_( ~prog_
                                                                                       ) ▶₀ #t2.6 )
                                                                                  case Init
                                                                                  solve( State_( ~prog_
                                                                                         ) ▶₀ #t2.6 )
                                                                                    case Init
                                                                                    solve( State_111111( $A.1,
                                                                                                         $B.1,
                                                                                                         $TEXT.1,
                                                                                                         $TTP.1,
                                                                                                         ~prog_.1,
                                                                                                         ~prog_111.1
                                                                                           ) ▶₀ #t2.6 )
                                                                                      case Par11111
                                                                                      solve( State_11111( $A.1,
                                                                                                          $B.1,
                                                                                                          $TEXT.1,
                                                                                                          $TTP.1,
                                                                                                          ~prog_.1,
                                                                                                          ~prog_111.1
                                                                                             ) ▶₀ #t2.6 )
                                                                                        case Par1111
                                                                                        solve( State_11112( $A.1,
                                                                                                            $B.1,
                                                                                                            $TEXT.1,
                                                                                                            $TTP.1,
                                                                                                            ~prog_.1,
                                                                                                            ~prog_111.1
                                                                                               ) ▶₀ #t2.6 )
                                                                                          case Par1111
                                                                                          solve( State_11112( $A.1,
                                                                                                              $B.1,
                                                                                                              $TEXT.1,
                                                                                                              $TTP.1,
                                                                                                              ~prog_.1,
                                                                                                              ~prog_111.1
                                                                                                 ) ▶₀ #t2.6 )
                                                                                            case Par1111
                                                                                            solve( State_( ~prog_
                                                                                                   ) ▶₀ #t2.6 )
                                                                                              case Init
                                                                                              solve( State_( ~prog_
                                                                                                     ) ▶₀ #t2.6 )
                                                                                                case Init
                                                                                                solve( State_( ~prog_
                                                                                                       ) ▶₀ #t2.6 )
                                                                                                  case Init
                                                                                                  solve( State_( ~prog_
                                                                                                         ) ▶₀ #t2.6 )
                                                                                                    case Init
                                                                                                    solve( State_( ~prog_
                                                                                                           ) ▶₀ #t2.6 )
                                                                                                      case Init
                                                                                                      solve( State_( ~prog_
                                                                                                             ) ▶₀ #t2.6 )
                                                                                                        case Init
                                                                                                        solve( State_( ~prog_
                                                                                                               ) ▶₀ #t2.6 )
                                                                                                          case Init
                                                                                                          solve( State_( ~prog_
                                                                                                                 ) ▶₀ #t2.6 )
                                                                                                            case Init
                                                                                                            solve( State_( ~prog_
                                                                                                                   ) ▶₀ #t2.6 )
                                                                                                              case Init
                                                                                                              solve( State_( ~prog_
                                                                                                                     ) ▶₀ #t2.6 )
                                                                                                                case Init
                                                                                                                solve( State_( ~prog_
                                                                                                                       ) ▶₀ #t2.6 )
                                                                                                                  case Init
                                                                                                                  solve( State_( ~prog_
                                                                                                                         ) ▶₀ #t2.6 )
                                                                                                                    case Init
                                                                                                                    solve( !KU( pcs(sign(<
                                                                                                                                          <
                                                                                                                                           $A, 
                                                                                                                                           $B, 
                                                                                                                                           $TEXT, 
                                                                                                                                           'TTP', 
                                                                                                                                           $TTP
                                                                                                                                          >, 
                                                                                                                                          '2'
                                                                                                                                         >,
                                                                                                                                         sk($B)),
                                                                                                                                    pk($A),
                                                                                                                                    pk(<
                                                                                                                                        'TTP', 
                                                                                                                                        $TTP
                                                                                                                                       >))
                                                                                                                           ) @ #vk.19 )
                                                                                                                      case cpcs
                                                                                                                      by contradiction
                                                                                                                         /*
                                                                                                                         cyclic
                                                                                                                         */
                                                                                                                    next
                                                                                                                      case out_c_pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP_11111121111
                                                                                                                      solve( (∃ #t2.
                                                                                                                               (ProgressTo_11111121111111111( ~prog_111111211
                                                                                                                                ) @ #t2))  ∥
                                                                                                                             (∃ #t2.
                                                                                                                               (ProgressTo_11111121111121( ~prog_111111211
                                                                                                                                ) @ #t2)) )
                                                                                                                        case case_1
                                                                                                                        solve( State_1111112111111111( $A.5,
                                                                                                                                                       $B.5,
                                                                                                                                                       $TEXT.5,
                                                                                                                                                       $TTP.5,
                                                                                                                                                       ~prog_.5,
                                                                                                                                                       ~prog_111.3,
                                                                                                                                                       ~prog_111111211,
                                                                                                                                                       sidb
                                                                                                                               ) ▶₀ #t2.16 )
                                                                                                                          case event_EndB3_A_B_A_B_TEXT_TTP_TTP_sidb111111211111111
                                                                                                                          by contradiction
                                                                                                                             /*
                                                                                                                             from formulas
                                                                                                                             */
                                                                                                                        qed
                                                                                                                      next
                                                                                                                        case case_2
                                                                                                                        solve( State_111111211111( $A.5,
                                                                                                                                                   $B.5,
                                                                                                                                                   $TEXT.5,
                                                                                                                                                   $TTP.5,
                                                                                                                                                   ~prog_.5,
                                                                                                                                                   ~prog_111.3,
                                                                                                                                                   ~prog_111111211,
                                                                                                                                                   sidb
                                                                                                                               ) ▶₁ #t2.16 )
                                                                                                                          case out_c_pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP_11111121111
                                                                                                                          solve( Receive( mid_1111112111112,
                                                                                                                                          <
                                                                                                                                           <
                                                                                                                                            'TTP', 
                                                                                                                                            $TTP
                                                                                                                                           >, 
                                                                                                                                           ~n, 
                                                                                                                                           aenc(<
                                                                                                                                                 pcs(sign(<
                                                                                                                                                           <
                                                                                                                                                            $A, 
                                                                                                                                                            $B, 
                                                                                                                                                            $TEXT, 
                                                                                                                                                            'TTP', 
                                                                                                                                                            $TTP
                                                                                                                                                           >, 
                                                                                                                                                           '1'
                                                                                                                                                          >,
                                                                                                                                                          sk($A)),
                                                                                                                                                     pk($B),
                                                                                                                                                     pk(<
                                                                                                                                                         'TTP', 
                                                                                                                                                         $TTP
                                                                                                                                                        >)), 
                                                                                                                                                 sign(<
                                                                                                                                                       <
                                                                                                                                                        $A, 
                                                                                                                                                        $B, 
                                                                                                                                                        $TEXT, 
                                                                                                                                                        'TTP', 
                                                                                                                                                        $TTP
                                                                                                                                                       >, 
                                                                                                                                                       '2'
                                                                                                                                                      >,
                                                                                                                                                      sk($B))
                                                                                                                                                >,
                                                                                                                                                pk(<
                                                                                                                                                    'TTP', 
                                                                                                                                                    $TTP
                                                                                                                                                   >))
                                                                                                                                          >
                                                                                                                                 ) @ #j.2 )
                                                                                                                            case in_r_TTP_TTP_sidb_aenc_pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__sign_A_B_TEXT_TTP_TTP_2_sk_B_pk_TTP_TTP__11111211111
                                                                                                                            solve( State_111112111111( $A.9,
                                                                                                                                                       $B.9,
                                                                                                                                                       $TEXT.9,
                                                                                                                                                       $TTP.9,
                                                                                                                                                       ~lock6.2,
                                                                                                                                                       ~prog_.10,
                                                                                                                                                       ~prog_111.4,
                                                                                                                                                       ~prog_11111211.1,
                                                                                                                                                       ~prog_111112111111,
                                                                                                                                                       sida.2,
                                                                                                                                                       sidb
                                                                                                                                   ) ▶₁ #t2.23 )
                                                                                                                              case in_r_TTP_TTP_sidb_aenc_pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__sign_A_B_TEXT_TTP_TTP_2_sk_B_pk_TTP_TTP__11111211111
                                                                                                                              solve( ((#vr.11 < #vr.32) ∧
                                                                                                                                      (∃ #t2.
                                                                                                                                        (Unlock( ~lock6.1,
                                                                                                                                                 <
                                                                                                                                                  $A, 
                                                                                                                                                  $B, 
                                                                                                                                                  $TEXT, 
                                                                                                                                                  'TTP', 
                                                                                                                                                  $TTP
                                                                                                                                                 >
                                                                                                                                         ) @ #t2)
                                                                                                                                       ∧
                                                                                                                                        (#vr.11 < #t2) ∧
                                                                                                                                        (#t2 < #vr.32) ∧
                                                                                                                                        (∀ #t0.
                                                                                                                                          (Unlock( ~lock6.1,
                                                                                                                                                   <
                                                                                                                                                    $A, 
                                                                                                                                                    $B, 
                                                                                                                                                    $TEXT, 
                                                                                                                                                    'TTP', 
                                                                                                                                                    $TTP
                                                                                                                                                   >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          #t0 =
                                                                                                                                          #t2) ∧
                                                                                                                                        (∀ lp
                                                                                                                                           #t0.
                                                                                                                                          (Lock( lp,
                                                                                                                                                 <
                                                                                                                                                  $A, 
                                                                                                                                                  $B, 
                                                                                                                                                  $TEXT, 
                                                                                                                                                  'TTP', 
                                                                                                                                                  $TTP
                                                                                                                                                 >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          (#t0 < #vr.11) ∨
                                                                                                                                          (#t0 =
                                                                                                                                           #vr.11) ∨
                                                                                                                                          (#t2 < #t0)) ∧
                                                                                                                                        (∀ lp
                                                                                                                                           #t0.
                                                                                                                                          (Unlock( lp,
                                                                                                                                                   <
                                                                                                                                                    $A, 
                                                                                                                                                    $B, 
                                                                                                                                                    $TEXT, 
                                                                                                                                                    'TTP', 
                                                                                                                                                    $TTP
                                                                                                                                                   >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          (#t0 < #vr.11) ∨
                                                                                                                                          (#t2 < #t0) ∨
                                                                                                                                          (#t2 =
                                                                                                                                           #t0))))  ∥
                                                                                                                                     (#vr.32 < #vr.11) )
                                                                                                                                case case_1
                                                                                                                                by solve( Unlock( ~lock6.1,
                                                                                                                                                  <
                                                                                                                                                   $A, 
                                                                                                                                                   $B, 
                                                                                                                                                   $TEXT, 
                                                                                                                                                   'TTP', 
                                                                                                                                                   $TTP
                                                                                                                                                  >
                                                                                                                                          ) @ #t2.31 )
                                                                                                                              next
                                                                                                                                case case_2
                                                                                                                                by solve( Unlock( ~lock6,
                                                                                                                                                  <
                                                                                                                                                   $A, 
                                                                                                                                                   $B, 
                                                                                                                                                   $TEXT, 
                                                                                                                                                   'TTP', 
                                                                                                                                                   $TTP
                                                                                                                                                  >
                                                                                                                                          ) @ #t2.31 )
                                                                                                                              qed
                                                                                                                            qed
                                                                                                                          next
                                                                                                                            case in_r_TTP_TTP_sidb_aenc_pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__sign_A_B_TEXT_TTP_TTP_2_sk_B_pk_TTP_TTP__11111221111
                                                                                                                            solve( State_1111122111111( $A.9,
                                                                                                                                                        $B.9,
                                                                                                                                                        $TEXT.9,
                                                                                                                                                        $TTP.9,
                                                                                                                                                        ~lock6.2,
                                                                                                                                                        ~prog_.10,
                                                                                                                                                        ~prog_111.4,
                                                                                                                                                        ~prog_111112211.2,
                                                                                                                                                        ~prog_111112211111,
                                                                                                                                                        sida.2,
                                                                                                                                                        sidb
                                                                                                                                   ) ▶₀ #t2.23 )
                                                                                                                              case out_r_B_sidb_sign_A_B_TEXT_TTP_TTP_1_sk_A_111112211111
                                                                                                                              solve( ((#vr.11 < #vr.33) ∧
                                                                                                                                      (∃ #t2.
                                                                                                                                        (Unlock( ~lock6.1,
                                                                                                                                                 <
                                                                                                                                                  $A, 
                                                                                                                                                  $B, 
                                                                                                                                                  $TEXT, 
                                                                                                                                                  'TTP', 
                                                                                                                                                  $TTP
                                                                                                                                                 >
                                                                                                                                         ) @ #t2)
                                                                                                                                       ∧
                                                                                                                                        (#vr.11 < #t2) ∧
                                                                                                                                        (#t2 < #vr.33) ∧
                                                                                                                                        (∀ #t0.
                                                                                                                                          (Unlock( ~lock6.1,
                                                                                                                                                   <
                                                                                                                                                    $A, 
                                                                                                                                                    $B, 
                                                                                                                                                    $TEXT, 
                                                                                                                                                    'TTP', 
                                                                                                                                                    $TTP
                                                                                                                                                   >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          #t0 =
                                                                                                                                          #t2) ∧
                                                                                                                                        (∀ lp
                                                                                                                                           #t0.
                                                                                                                                          (Lock( lp,
                                                                                                                                                 <
                                                                                                                                                  $A, 
                                                                                                                                                  $B, 
                                                                                                                                                  $TEXT, 
                                                                                                                                                  'TTP', 
                                                                                                                                                  $TTP
                                                                                                                                                 >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          (#t0 < #vr.11) ∨
                                                                                                                                          (#t0 =
                                                                                                                                           #vr.11) ∨
                                                                                                                                          (#t2 < #t0)) ∧
                                                                                                                                        (∀ lp
                                                                                                                                           #t0.
                                                                                                                                          (Unlock( lp,
                                                                                                                                                   <
                                                                                                                                                    $A, 
                                                                                                                                                    $B, 
                                                                                                                                                    $TEXT, 
                                                                                                                                                    'TTP', 
                                                                                                                                                    $TTP
                                                                                                                                                   >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          (#t0 < #vr.11) ∨
                                                                                                                                          (#t2 < #t0) ∨
                                                                                                                                          (#t2 =
                                                                                                                                           #t0))))  ∥
                                                                                                                                     (#vr.33 < #vr.11)  ∥
                                                                                                                                     (#vr.11 =
                                                                                                                                      #vr.33) )
                                                                                                                                case case_1
                                                                                                                                by solve( Unlock( ~lock6.1,
                                                                                                                                                  <
                                                                                                                                                   $A, 
                                                                                                                                                   $B, 
                                                                                                                                                   $TEXT, 
                                                                                                                                                   'TTP', 
                                                                                                                                                   $TTP
                                                                                                                                                  >
                                                                                                                                          ) @ #t2.31 )
                                                                                                                              next
                                                                                                                                case case_2
                                                                                                                                by solve( Unlock( ~lock6,
                                                                                                                                                  <
                                                                                                                                                   $A, 
                                                                                                                                                   $B, 
                                                                                                                                                   $TEXT, 
                                                                                                                                                   'TTP', 
                                                                                                                                                   $TTP
                                                                                                                                                  >
                                                                                                                                          ) @ #t2.31 )
                                                                                                                              next
                                                                                                                                case case_3
                                                                                                                                solve( State_1111122111( $A.13,
                                                                                                                                                         $B.13,
                                                                                                                                                         $TEXT.13,
                                                                                                                                                         $TTP.13,
                                                                                                                                                         ~lock6.1,
                                                                                                                                                         ~prog_.13,
                                                                                                                                                         ~prog_111.3,
                                                                                                                                                         ~prog_111112211,
                                                                                                                                                         sida.1
                                                                                                                                       ) ▶₁ #t2.30 )
                                                                                                                                  case lock_A_B_TEXT_TTP_TTP_111112211
                                                                                                                                  solve( State_11112( $A.16,
                                                                                                                                                      $B.16,
                                                                                                                                                      $TEXT.16,
                                                                                                                                                      $TTP.16,
                                                                                                                                                      ~prog_.16,
                                                                                                                                                      ~prog_111.1
                                                                                                                                         ) ▶₀ #t2.35 )
                                                                                                                                    case Par1111
                                                                                                                                    solve( Receive( ~x.3,
                                                                                                                                                    <
                                                                                                                                                     $B, 
                                                                                                                                                     ~n, 
                                                                                                                                                     sign(<
                                                                                                                                                           <
                                                                                                                                                            $A, 
                                                                                                                                                            $B, 
                                                                                                                                                            $TEXT, 
                                                                                                                                                            'TTP', 
                                                                                                                                                            $TTP
                                                                                                                                                           >, 
                                                                                                                                                           '1'
                                                                                                                                                          >,
                                                                                                                                                          sk($A))
                                                                                                                                                    >
                                                                                                                                           ) @ #j.5 )
                                                                                                                                      case in_r_B_sidb_sign_A_B_TEXT_TTP_TTP_1_sk_A_111111211111212
                                                                                                                                      solve( State_11111121111121211( $A.16,
                                                                                                                                                                      $B.16,
                                                                                                                                                                      $TEXT.16,
                                                                                                                                                                      $TTP.16,
                                                                                                                                                                      ~prog_.17,
                                                                                                                                                                      ~prog_111.4,
                                                                                                                                                                      ~prog_111111211.2,
                                                                                                                                                                      ~prog_1111112111112121,
                                                                                                                                                                      sidb
                                                                                                                                             ) ▶₀ #t2.37 )
                                                                                                                                        case event_ContractB_A_B_A_B_TEXT_TTP_TTP_sidb1111112111112121
                                                                                                                                        by contradiction
                                                                                                                                           /*
                                                                                                                                           from formulas
                                                                                                                                           */
                                                                                                                                      qed
                                                                                                                                    next
                                                                                                                                      case in_r_B_sidb_sign_A_B_TEXT_TTP_TTP_1_sk_A_111111221111212
                                                                                                                                      by solve( State_11111122111121211( $A.16,
                                                                                                                                                                         $B.16,
                                                                                                                                                                         $TEXT.16,
                                                                                                                                                                         $TTP.16,
                                                                                                                                                                         ~prog_.17,
                                                                                                                                                                         ~prog_111.4,
                                                                                                                                                                         ~prog_111111221.1,
                                                                                                                                                                         ~prog_1111112211112121,
                                                                                                                                                                         sidb
                                                                                                                                                ) ▶₀ #t2.37 )
                                                                                                                                    next
                                                                                                                                      case in_r_x_sid_m_211111
                                                                                                                                      solve( State_211111( $B,
                                                                                                                                                           ~prog_.1,
                                                                                                                                                           ~prog_211
                                                                                                                                             ) ▶₀ #j.1 )
                                                                                                                                        case Rep_121111
                                                                                                                                        by contradiction
                                                                                                                                           /*
                                                                                                                                           from formulas
                                                                                                                                           */
                                                                                                                                      qed
                                                                                                                                    qed
                                                                                                                                  qed
                                                                                                                                qed
                                                                                                                              qed
                                                                                                                            qed
                                                                                                                          next
                                                                                                                            case in_r_TTP_TTP_sidb_aenc_pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__sign_A_B_TEXT_TTP_TTP_2_sk_B_pk_TTP_TTP__11111222
                                                                                                                            solve( State_11111222111( $A.9,
                                                                                                                                                      $B.9,
                                                                                                                                                      $TEXT.9,
                                                                                                                                                      $TTP.9,
                                                                                                                                                      ~lock7,
                                                                                                                                                      ~prog_.10,
                                                                                                                                                      ~prog_111.4,
                                                                                                                                                      ~prog_111112221,
                                                                                                                                                      sidb
                                                                                                                                   ) ▶₀ #t2.23 )
                                                                                                                              case out_r_B_sidb_convertpcssk_TTP_TTP__pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__1111122211
                                                                                                                              solve( ((#vr.11 < #vr.30) ∧
                                                                                                                                      (∃ #t2.
                                                                                                                                        (Unlock( ~lock6,
                                                                                                                                                 <
                                                                                                                                                  $A, 
                                                                                                                                                  $B, 
                                                                                                                                                  $TEXT, 
                                                                                                                                                  'TTP', 
                                                                                                                                                  $TTP
                                                                                                                                                 >
                                                                                                                                         ) @ #t2)
                                                                                                                                       ∧
                                                                                                                                        (#vr.11 < #t2) ∧
                                                                                                                                        (#t2 < #vr.30) ∧
                                                                                                                                        (∀ #t0.
                                                                                                                                          (Unlock( ~lock6,
                                                                                                                                                   <
                                                                                                                                                    $A, 
                                                                                                                                                    $B, 
                                                                                                                                                    $TEXT, 
                                                                                                                                                    'TTP', 
                                                                                                                                                    $TTP
                                                                                                                                                   >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          #t0 =
                                                                                                                                          #t2) ∧
                                                                                                                                        (∀ lp
                                                                                                                                           #t0.
                                                                                                                                          (Lock( lp,
                                                                                                                                                 <
                                                                                                                                                  $A, 
                                                                                                                                                  $B, 
                                                                                                                                                  $TEXT, 
                                                                                                                                                  'TTP', 
                                                                                                                                                  $TTP
                                                                                                                                                 >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          (#t0 < #vr.11) ∨
                                                                                                                                          (#t0 =
                                                                                                                                           #vr.11) ∨
                                                                                                                                          (#t2 < #t0)) ∧
                                                                                                                                        (∀ lp
                                                                                                                                           #t0.
                                                                                                                                          (Unlock( lp,
                                                                                                                                                   <
                                                                                                                                                    $A, 
                                                                                                                                                    $B, 
                                                                                                                                                    $TEXT, 
                                                                                                                                                    'TTP', 
                                                                                                                                                    $TTP
                                                                                                                                                   >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          (#t0 < #vr.11) ∨
                                                                                                                                          (#t2 < #t0) ∨
                                                                                                                                          (#t2 =
                                                                                                                                           #t0))))  ∥
                                                                                                                                     (#vr.30 < #vr.11) )
                                                                                                                                case case_1
                                                                                                                                by solve( Unlock( ~lock6,
                                                                                                                                                  <
                                                                                                                                                   $A, 
                                                                                                                                                   $B, 
                                                                                                                                                   $TEXT, 
                                                                                                                                                   'TTP', 
                                                                                                                                                   $TTP
                                                                                                                                                  >
                                                                                                                                          ) @ #t2.30 )
                                                                                                                              next
                                                                                                                                case case_2
                                                                                                                                by solve( Unlock( ~lock7,
                                                                                                                                                  <
                                                                                                                                                   $A, 
                                                                                                                                                   $B, 
                                                                                                                                                   $TEXT, 
                                                                                                                                                   'TTP', 
                                                                                                                                                   $TTP
                                                                                                                                                  >
                                                                                                                                          ) @ #t2.30 )
                                                                                                                              qed
                                                                                                                            qed
                                                                                                                          qed
                                                                                                                        qed
                                                                                                                      qed
                                                                                                                    next
                                                                                                                      case out_c_pcssign_A_B_TEXT_TTP_TTP_2_sk_B_pk_A_pk_TTP_TTP_11111122111
                                                                                                                      by contradiction
                                                                                                                         /*
                                                                                                                         from formulas
                                                                                                                         */
                                                                                                                    qed
                                                                                                                  qed
                                                                                                                qed
                                                                                                              qed
                                                                                                            qed
                                                                                                          qed
                                                                                                        qed
                                                                                                      qed
                                                                                                    qed
                                                                                                  qed
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                next
                                                                  case out_r_A_sida_sign_A_B_TEXT_TTP_TTP_2_sk_B_11111222111111
                                                                  solve( State_11111222111111( $A.6,
                                                                                               $B.6,
                                                                                               $TEXT.6,
                                                                                               $TTP.6,
                                                                                               ~lock7.2,
                                                                                               ~prog_.6,
                                                                                               ~prog_111.3,
                                                                                               ~prog_111112221.1,
                                                                                               ~prog_11111222111111,
                                                                                               sida.1,
                                                                                               sidb.2
                                                                         ) ▶₁ #t2.10 )
                                                                    case in_r_TTP_TTP_sida_sign_A_B_TEXT_TTP_TTP_A_B_abort_sk_A_1111122211111
                                                                    solve( State_11111222111( $A.10,
                                                                                              $B.10,
                                                                                              $TEXT.10,
                                                                                              $TTP.10,
                                                                                              ~lock7.2,
                                                                                              ~prog_.10,
                                                                                              ~prog_111.3,
                                                                                              ~prog_111112221,
                                                                                              sidb.2
                                                                           ) ▶₀ #t2.16 )
                                                                      case out_r_B_sidb_convertpcssk_TTP_TTP__pcssign_A_B_TEXT_TTP_TTP_1_sk_A_pk_B_pk_TTP_TTP__1111122211
                                                                      solve( State_11112( $A.13,
                                                                                          $B.13,
                                                                                          $TEXT.13,
                                                                                          $TTP.13,
                                                                                          ~prog_.13,
                                                                                          ~prog_111.1
                                                                             ) ▶₀ #t2.21 )
                                                                        case Par1111
                                                                        solve( Receive( ~x.2,
                                                                                        <$B, sidb, 
                                                                                         sign(<
                                                                                               <$A, 
                                                                                                $B, 
                                                                                                $TEXT, 
                                                                                                'TTP', 
                                                                                                $TTP
                                                                                               >, 
                                                                                               '1'>,
                                                                                              sk($A))
                                                                                        >
                                                                               ) @ #j.4 )
                                                                          case in_r_B_sidb_sign_A_B_TEXT_TTP_TTP_1_sk_A_111111211111212
                                                                          solve( State_11111121111121211( $A.13,
                                                                                                          $B.13,
                                                                                                          $TEXT.13,
                                                                                                          $TTP.13,
                                                                                                          ~prog_.14,
                                                                                                          ~prog_111.4,
                                                                                                          ~prog_111111211.1,
                                                                                                          ~prog_1111112111112121,
                                                                                                          sidb.2
                                                                                 ) ▶₀ #t2.24 )
                                                                            case event_ContractB_A_B_A_B_TEXT_TTP_TTP_sidb1111112111112121
                                                                            by contradiction
                                                                               /* from formulas */
                                                                          qed
                                                                        next
                                                                          case in_r_B_sidb_sign_A_B_TEXT_TTP_TTP_1_sk_A_111111221111212
                                                                          solve( State_11111122111121211( $A.13,
                                                                                                          $B.13,
                                                                                                          $TEXT.13,
                                                                                                          $TTP.13,
                                                                                                          ~prog_.14,
                                                                                                          ~prog_111.4,
                                                                                                          ~prog_111111221.1,
                                                                                                          ~prog_1111112211112121,
                                                                                                          sidb.2
                                                                                 ) ▶₀ #t2.24 )
                                                                            case event_ContractB_A_B_A_B_TEXT_TTP_TTP_sidb1111112211112121
                                                                            by contradiction
                                                                               /* from formulas */
                                                                          qed
                                                                        next
                                                                          case in_r_x_sid_m_211111
                                                                          solve( State_211111( $B,
                                                                                               ~prog_.1,
                                                                                               ~prog_211
                                                                                 ) ▶₀ #j )
                                                                            case Rep_121111
                                                                            by contradiction
                                                                               /* from formulas */
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                next
                                                                  case out_r_A_sida_sign_A_B_TEXT_TTP_TTP_2_sk_B_11111222111121
                                                                  solve( Receive( ~x.2,
                                                                                  <$B, sidb, 
                                                                                   sign(<
                                                                                         <$A, $B, 
                                                                                          $TEXT, 
                                                                                          'TTP', 
                                                                                          $TTP>, 
                                                                                         '1'>,
                                                                                        sk($A))
                                                                                  >
                                                                         ) @ #j.1 )
                                                                    case in_r_B_sidb_sign_A_B_TEXT_TTP_TTP_1_sk_A_111111211111212
                                                                    solve( State_11111121111121211( $A.7,
                                                                                                    $B.7,
                                                                                                    $TEXT.7,
                                                                                                    $TTP.7,
                                                                                                    ~prog_.8,
                                                                                                    ~prog_111.5,
                                                                                                    ~prog_111111211.1,
                                                                                                    ~prog_1111112111112121,
                                                                                                    sidb.3
                                                                           ) ▶₀ #t2.11 )
                                                                      case event_ContractB_A_B_A_B_TEXT_TTP_TTP_sidb1111112111112121
                                                                      by contradiction
                                                                         /* from formulas */
                                                                    qed
                                                                  next
                                                                    case in_r_B_sidb_sign_A_B_TEXT_TTP_TTP_1_sk_A_111111221111212
                                                                    solve( State_11111122111121211( $A.7,
                                                                                                    $B.7,
                                                                                                    $TEXT.7,
                                                                                                    $TTP.7,
                                                                                                    ~prog_.8,
                                                                                                    ~prog_111.5,
                                                                                                    ~prog_111111221.1,
                                                                                                    ~prog_1111112211112121,
                                                                                                    sidb.3
                                                                           ) ▶₀ #t2.11 )
                                                                      case event_ContractB_A_B_A_B_TEXT_TTP_TTP_sidb1111112211112121
                                                                      by contradiction
                                                                         /* from formulas */
                                                                    qed
                                                                  next
                                                                    case in_r_x_sid_m_211111
                                                                    solve( State_211111( $B,
                                                                                         ~prog_.1,
                                                                                         ~prog_211
                                                                           ) ▶₀ #j )
                                                                      case Rep_121111
                                                                      by contradiction
                                                                         /* from formulas */
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end