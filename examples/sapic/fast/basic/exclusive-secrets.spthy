/*

simple example of a device that stores 2 secrets; it can be configured
to either output the left or the right secret, but not both

(this is similar in spirit, but simpler, then the statverif_left-Right
example)

*/ 


theory ExclusiveSecrets

begin

functions: store/0, left/0, right/0

let P = lookup store as v in 
    if v = left() then out(a)
    else if v = right() then out(b)
else 0

in(x); insert store, x; event SetStore(x); new a; new b; event Secret(a,b); ! P


//sanity check that the left secret can be learned
lemma a_not_secret:
      exists-trace
      "Ex #i #j x y. Secret(x,y)@i & K(x)@j"

//sanity check that the right secret can be learned
lemma b_not_secret:
      exists-trace
      "Ex #i #j x y. Secret(x,y)@i & K(y)@j"

// if the left secret is learned then store is configured to left
lemma sanity:
      "All #i #j #k x y z. Secret(x,y)@i & K(x)@j &
      	      	      	   SetStore(z)@k ==> z = left"


// an attacker cannot learn both secrets at the same time
lemma exclusive_secrets:
      "not Ex #i #j #k x y. Secret(x,y)@i & K(x)@j & K(y)@k"


end
