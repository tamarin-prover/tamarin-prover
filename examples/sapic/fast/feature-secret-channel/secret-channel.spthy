/*
example illustrating private channels
*/

theory ChannelsTestOne
begin

builtins: signing
/* Check for communication on private channels */
/*  - communication is private */
/*  - communication is possible */

process:
new skP1; new skP2; new c1; new c2; (
event Secret(skP1); out (c1, skP1); out(c2, skP2)
| in(sign('test',=skP1)); event Accept(skP1)
| in(sign('test',=skP2)); event Accept2(skP2)
| in(c1, x); event Received(x); out(sign('test',x))
| in(c2, x); event Received2(x); out(sign('test',x))
)

lemma secret :
      "All x #i. ( Secret(x) @ i ==> not (Ex #j. K(x) @ j) )"

lemma auth :
      "All x #i. ( Accept(x) @ i ==> (Ex #j. j<i ∧ Received(x) @ j) )"

lemma auth2 :
      "All x #i. ( Accept2(x) @ i ==> (Ex #j. j<i ∧ Received2(x) @ j) )"


lemma accept : exists-trace
      "Ex x #i. Accept(x) @ i"

lemma accept2 : exists-trace
      "Ex x #i. Accept2(x) @ i"


end
