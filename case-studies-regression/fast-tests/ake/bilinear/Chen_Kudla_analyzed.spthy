theory Chen_Kudla begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, bilinear-pairing
functions: fst/1, h/1, hp/1, kdf/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



section{* A variant of the Chen-Kudla protocol that uses ordered concatenation instead 
          addition of points *}

rule (modulo E) KGC_Setup:
   [ Fr( ~msk ) ]
  --[ KGCSetup( ) ]->
   [ !MSK( ~msk ), !MPK( pmult(~msk, 'P') ), Out( pmult(~msk, 'P') ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KGC_request:
   [ !MSK( ~msk ) ] --> [ !LTK( $ID, pmult(~msk, hp($ID)) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_ltk:
   [ !LTK( $ID, skID ) ] --[ LtkRev( $ID ) ]-> [ Out( skID ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_master_key:
   [ !MSK( ~msk ) ] --[ MskRev( ) ]-> [ Out( ~msk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_session_key:
   [ !Sessk( ~ey, kdf(sek) ) ] --[ SesskRev( ~ey ) ]-> [ Out( kdf(sek) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_ephemeral_key:
   [ !Ephk( ~ex ) ] --[ EphkRev( ~ex ) ]-> [ Out( ~ex ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_1:
   [ Fr( ~ex ) ]
  -->
   [ Init( ~ex, $A, $B ), Out( pmult(~ex, 'P') ), !Ephk( ~ex ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_2:
   [
   Init( ~ex, $A, $B ), !MPK( pmult(~s2, 'P') ),
   !LTK( $A, pmult(~s1, hp($A)) ), In( Y )
   ]
  --[
  Accept( ~ex, $A, $B,
          kdf(<em(hp($B), pmult(~s2, 'P'))^~ex, em(Y, pmult(~s1, hp($A))), 
               pmult(~ex, Y), $A, $B, pmult(~ex, 'P'), Y>)
  ),
  Sid( ~ex, <'Init', $A, $B, pmult(~ex, 'P'), Y> ),
  Match( ~ex, <'Resp', $B, $A, pmult(~ex, 'P'), Y> )
  ]->
   [
   !Sessk( ~ex,
           kdf(<em(hp($B), pmult(~s2, 'P'))^~ex, em(Y, pmult(~s1, hp($A))), 
                pmult(~ex, Y), $A, $B, pmult(~ex, 'P'), Y>)
   )
   ]

  /*
  rule (modulo AC) Init_2:
     [
     Init( ~ex, $A, $B ), !MPK( pmult(~x.1, 'P') ),
     !LTK( $A, pmult(~x, hp($A)) ), In( Y )
     ]
    --[
    Accept( ~ex, $A, $B,
            kdf(<em('P', hp($B))^(~ex*~x.1), z, z.1, $A, $B, pmult(~ex, 'P'), Y>)
    ),
    Sid( ~ex, <'Init', $A, $B, pmult(~ex, 'P'), Y> ),
    Match( ~ex, <'Resp', $B, $A, pmult(~ex, 'P'), Y> )
    ]->
     [
     !Sessk( ~ex,
             kdf(<em('P', hp($B))^(~ex*~x.1), z, z.1, $A, $B, pmult(~ex, 'P'), Y>)
     )
     ]
    variants (modulo AC)
     1. $A    = $A.52
        ~ex   = ~ex.54
        ~x    = ~ex.54
        Y     = pmult(inv(~ex.54), z.62)
        z     = em(z.62, hp($A.52))
        z.1   = z.62
    
     2. $A    = $A.55
        ~ex   = ~ex.57
        ~x    = ~x.74
        Y     = Y.60
        z     = em(Y.60, hp($A.55))^~x.74
        z.1   = pmult(~ex.57, Y.60)
    
     3. $A    = $A.55
        ~ex   = ~ex.57
        ~x    = ~x.74
        Y     = pmult(inv(~ex.57), z.65)
        z     = em(z.65, hp($A.55))^(~x.74*inv(~ex.57))
        z.1   = z.65
    
     4. $A    = $A.619
        ~ex   = ~ex.621
        ~x    = ~x.638
        Y     = pmult(x.1235, x.1236)
        z     = em(x.1236, hp($A.619))^(~x.638*x.1235)
        z.1   = pmult((~ex.621*x.1235), x.1236)
    
     5. $A    = $A.620
        ~ex   = ~ex.622
        ~x    = ~x.639
        Y     = pmult(inv(~x.639), x.1238)
        z     = em(x.1238, hp($A.620))
        z.1   = pmult((~ex.622*inv(~x.639)), x.1238)
    
     6. $A    = $A.621
        ~ex   = ~ex.623
        ~x    = ~x.640
        Y     = pmult(inv((~ex.623*~x.640)), x.1240)
        z     = em(x.1240, hp($A.621))^inv(~ex.623)
        z.1   = pmult(inv(~x.640), x.1240)
    
     7. $A    = $A.621
        ~ex   = ~ex.623
        ~x    = ~ex.623
        Y     = pmult(inv((~ex.623*x.1239)), x.1240)
        z     = em(x.1240, hp($A.621))^inv(x.1239)
        z.1   = pmult(inv(x.1239), x.1240)
    
     8. $A    = $A.621
        ~ex   = ~ex.623
        ~x    = ~x.640
        Y     = pmult(inv((~x.640*x.1239)), x.1240)
        z     = em(x.1240, hp($A.621))^inv(x.1239)
        z.1   = pmult((~ex.623*inv((~x.640*x.1239))), x.1240)
    
     9. $A    = $A.621
        ~ex   = ~ex.623
        ~x    = ~ex.623
        Y     = pmult((x.1239*inv(~ex.623)), x.1240)
        z     = em(x.1240, hp($A.621))^x.1239
        z.1   = pmult(x.1239, x.1240)
    
    10. $A    = $A.621
        ~ex   = ~ex.623
        ~x    = ~x.640
        Y     = pmult((x.1239*inv(~x.640)), x.1240)
        z     = em(x.1240, hp($A.621))^x.1239
        z.1   = pmult((~ex.623*x.1239*inv(~x.640)), x.1240)
    
    11. $A    = $A.622
        ~ex   = ~ex.624
        ~x    = ~x.641
        Y     = pmult(inv((~ex.624*~x.641*x.1241)), x.1242)
        z     = em(x.1242, hp($A.622))^inv((~ex.624*x.1241))
        z.1   = pmult(inv((~x.641*x.1241)), x.1242)
    
    12. $A    = $A.622
        ~ex   = ~ex.624
        ~x    = ~x.641
        Y     = pmult(inv((~ex.624*x.1241)), x.1242)
        z     = em(x.1242, hp($A.622))^(~x.641*inv((~ex.624*x.1241)))
        z.1   = pmult(inv(x.1241), x.1242)
    
    13. $A    = $A.622
        ~ex   = ~ex.624
        ~x    = ~ex.624
        Y     = pmult((x.1240*inv((~ex.624*x.1241))), x.1242)
        z     = em(x.1242, hp($A.622))^(x.1240*inv(x.1241))
        z.1   = pmult((x.1240*inv(x.1241)), x.1242)
    
    14. $A    = $A.622
        ~ex   = ~ex.624
        ~x    = ~x.641
        Y     = pmult((x.1240*inv((~x.641*x.1241))), x.1242)
        z     = em(x.1242, hp($A.622))^(x.1240*inv(x.1241))
        z.1   = pmult((~ex.624*x.1240*inv((~x.641*x.1241))), x.1242)
    
    15. $A    = $A.622
        ~ex   = ~ex.624
        ~x    = ~x.641
        Y     = pmult((x.1241*inv(~ex.624)), x.1242)
        z     = em(x.1242, hp($A.622))^(~x.641*x.1241*inv(~ex.624))
        z.1   = pmult(x.1241, x.1242)
    
    16. $A    = $A.622
        ~ex   = ~ex.624
        ~x    = ~x.641
        Y     = pmult((x.1241*inv((~ex.624*~x.641))), x.1242)
        z     = em(x.1242, hp($A.622))^(x.1241*inv(~ex.624))
        z.1   = pmult((x.1241*inv(~x.641)), x.1242)
    
    17. $A    = $A.623
        ~ex   = ~ex.625
        ~x    = ~x.642
        Y     = pmult((x.1242*inv((~ex.625*~x.642*x.1243))), x.1244)
        z     = em(x.1244, hp($A.623))^(x.1242*inv((~ex.625*x.1243)))
        z.1   = pmult((x.1242*inv((~x.642*x.1243))), x.1244)
    
    18. $A    = $A.623
        ~ex   = ~ex.625
        ~x    = ~x.642
        Y     = pmult((x.1242*inv((~ex.625*x.1243))), x.1244)
        z     = em(x.1244, hp($A.623))^(~x.642*x.1242*inv((~ex.625*x.1243)))
        z.1   = pmult((x.1242*inv(x.1243)), x.1244)
  */

rule (modulo E) Resp_1:
   [
   Fr( ~ey ), !LTK( $B, pmult(~msk, hp($B)) ), !MPK( pmult(~msk, 'P') ),
   In( X )
   ]
  --[
  Accept( ~ey, $B, $A,
          kdf(<em(X, pmult(~msk, hp($B))), em(hp($A), pmult(~msk, 'P'))^~ey, 
               pmult(~ey, X), $A, $B, X, pmult(~ey, 'P')>)
  ),
  Sid( ~ey, <'Resp', $B, $A, X, pmult(~ey, 'P')> ),
  Match( ~ey, <'Init', $A, $B, X, pmult(~ey, 'P')> )
  ]->
   [
   Out( pmult(~ey, 'P') ),
   !Sessk( ~ey,
           kdf(<em(X, pmult(~msk, hp($B))), em(hp($A), pmult(~msk, 'P'))^~ey, 
                pmult(~ey, X), $A, $B, X, pmult(~ey, 'P')>)
   ),
   !Ephk( ~ey )
   ]

  /*
  rule (modulo AC) Resp_1:
     [
     Fr( ~ey ), !LTK( $B, pmult(~x, hp($B)) ), !MPK( pmult(~x, 'P') ), In( X )
     ]
    --[
    Accept( ~ey, $B, $A,
            kdf(<z, em('P', hp($A))^(~ey*~x), z.1, $A, $B, X, pmult(~ey, 'P')>)
    ),
    Sid( ~ey, <'Resp', $B, $A, X, pmult(~ey, 'P')> ),
    Match( ~ey, <'Init', $A, $B, X, pmult(~ey, 'P')> )
    ]->
     [
     Out( pmult(~ey, 'P') ),
     !Sessk( ~ey,
             kdf(<z, em('P', hp($A))^(~ey*~x), z.1, $A, $B, X, pmult(~ey, 'P')>)
     ),
     !Ephk( ~ey )
     ]
    variants (modulo AC)
     1. $B    = $B.44
        ~ey   = ~ey.45
        ~x    = ~ey.45
        X     = pmult(inv(~ey.45), z.53)
        z     = em(z.53, hp($B.44))
        z.1   = z.53
    
     2. $B    = $B.49
        ~ey   = ~ey.50
        ~x    = ~x.63
        X     = X.52
        z     = em(X.52, hp($B.49))^~x.63
        z.1   = pmult(~ey.50, X.52)
    
     3. $B    = $B.49
        ~ey   = ~ey.50
        ~x    = ~x.63
        X     = pmult(inv(~ey.50), z.58)
        z     = em(z.58, hp($B.49))^(~x.63*inv(~ey.50))
        z.1   = z.58
    
     4. $B    = $B.612
        ~ey   = ~ey.613
        ~x    = ~x.626
        X     = pmult(x.1220, x.1221)
        z     = em(x.1221, hp($B.612))^(~x.626*x.1220)
        z.1   = pmult((~ey.613*x.1220), x.1221)
    
     5. $B    = $B.612
        ~ey   = ~ey.613
        ~x    = ~x.626
        X     = pmult(inv(~x.626), x.1221)
        z     = em(x.1221, hp($B.612))
        z.1   = pmult((~ey.613*inv(~x.626)), x.1221)
    
     6. $B    = $B.613
        ~ey   = ~ey.614
        ~x    = ~x.627
        X     = pmult(inv((~ey.614*~x.627)), x.1223)
        z     = em(x.1223, hp($B.613))^inv(~ey.614)
        z.1   = pmult(inv(~x.627), x.1223)
    
     7. $B    = $B.613
        ~ey   = ~ey.614
        ~x    = ~ey.614
        X     = pmult(inv((~ey.614*x.1222)), x.1223)
        z     = em(x.1223, hp($B.613))^inv(x.1222)
        z.1   = pmult(inv(x.1222), x.1223)
    
     8. $B    = $B.613
        ~ey   = ~ey.614
        ~x    = ~x.627
        X     = pmult(inv((~x.627*x.1222)), x.1223)
        z     = em(x.1223, hp($B.613))^inv(x.1222)
        z.1   = pmult((~ey.614*inv((~x.627*x.1222))), x.1223)
    
     9. $B    = $B.613
        ~ey   = ~ey.614
        ~x    = ~ey.614
        X     = pmult((x.1222*inv(~ey.614)), x.1223)
        z     = em(x.1223, hp($B.613))^x.1222
        z.1   = pmult(x.1222, x.1223)
    
    10. $B    = $B.613
        ~ey   = ~ey.614
        ~x    = ~x.627
        X     = pmult((x.1222*inv(~x.627)), x.1223)
        z     = em(x.1223, hp($B.613))^x.1222
        z.1   = pmult((~ey.614*x.1222*inv(~x.627)), x.1223)
    
    11. $B    = $B.614
        ~ey   = ~ey.615
        ~x    = ~x.628
        X     = pmult(inv((~ey.615*~x.628*x.1224)), x.1225)
        z     = em(x.1225, hp($B.614))^inv((~ey.615*x.1224))
        z.1   = pmult(inv((~x.628*x.1224)), x.1225)
    
    12. $B    = $B.614
        ~ey   = ~ey.615
        ~x    = ~x.628
        X     = pmult(inv((~ey.615*x.1224)), x.1225)
        z     = em(x.1225, hp($B.614))^(~x.628*inv((~ey.615*x.1224)))
        z.1   = pmult(inv(x.1224), x.1225)
    
    13. $B    = $B.614
        ~ey   = ~ey.615
        ~x    = ~ey.615
        X     = pmult((x.1223*inv((~ey.615*x.1224))), x.1225)
        z     = em(x.1225, hp($B.614))^(x.1223*inv(x.1224))
        z.1   = pmult((x.1223*inv(x.1224)), x.1225)
    
    14. $B    = $B.614
        ~ey   = ~ey.615
        ~x    = ~x.628
        X     = pmult((x.1223*inv((~x.628*x.1224))), x.1225)
        z     = em(x.1225, hp($B.614))^(x.1223*inv(x.1224))
        z.1   = pmult((~ey.615*x.1223*inv((~x.628*x.1224))), x.1225)
    
    15. $B    = $B.614
        ~ey   = ~ey.615
        ~x    = ~x.628
        X     = pmult((x.1224*inv(~ey.615)), x.1225)
        z     = em(x.1225, hp($B.614))^(~x.628*x.1224*inv(~ey.615))
        z.1   = pmult(x.1224, x.1225)
    
    16. $B    = $B.614
        ~ey   = ~ey.615
        ~x    = ~x.628
        X     = pmult((x.1224*inv((~ey.615*~x.628))), x.1225)
        z     = em(x.1225, hp($B.614))^(x.1224*inv(~ey.615))
        z.1   = pmult((x.1224*inv(~x.628)), x.1225)
    
    17. $B    = $B.615
        ~ey   = ~ey.616
        ~x    = ~x.629
        X     = pmult((x.1225*inv((~ey.616*~x.629*x.1226))), x.1227)
        z     = em(x.1227, hp($B.615))^(x.1225*inv((~ey.616*x.1226)))
        z.1   = pmult((x.1225*inv((~x.629*x.1226))), x.1227)
    
    18. $B    = $B.615
        ~ey   = ~ey.616
        ~x    = ~x.629
        X     = pmult((x.1225*inv((~ey.616*x.1226))), x.1227)
        z     = em(x.1227, hp($B.615))^(~x.629*x.1225*inv((~ey.616*x.1226)))
        z.1   = pmult((x.1225*inv(x.1226)), x.1227)
  */

lemma key_agreement_reachable:
  exists-trace
  "∃ #i #j A B SID t1 t2 k.
    (((Accept( t1, A, B, k ) @ #i) ∧ (Match( t1, SID ) @ #i)) ∧
     (Accept( t2, B, A, k ) @ #j)) ∧
    (Sid( t2, SID ) @ #j)"
/*
guarded formula characterizing all satisfying traces:
"∃ #i #j A B SID t1 t2 k.
  (Accept( t1, A, B, k ) @ #i) ∧
  (Match( t1, SID ) @ #i) ∧
  (Accept( t2, B, A, k ) @ #j) ∧
  (Sid( t2, SID ) @ #j)"
*/
simplify
solve( Accept( t1, A, B, k ) @ #i )
  case Init_2
  solve( Init( ~ex, $A, $B ) ▶₀ #i )
    case Init_1
    solve( !MPK( pmult(~x, 'P') ) ▶₁ #i )
      case KGC_Setup
      solve( !LTK( $A, pmult(~x.1, hp($A)) ) ▶₂ #i )
        case KGC_request
        solve( Match( ~ex, SID ) @ #i )
          case Init_2
          solve( Accept( t2, $B, $A,
                         kdf(<em('P', hp($B))^(~ex*~x), z, z.1, $A, $B, pmult(~ex, 'P'), Y>)
                 ) @ #j )
            case Resp_1
            solve( !LTK( $B, pmult(~x, hp($B)) ) ▶₁ #j )
              case KGC_request
              solve( !MPK( pmult(~x, 'P') ) ▶₂ #j )
                case KGC_Setup
                solve( Sid( ~ey, <'Resp', $B, $A, pmult(~ex, 'P'), pmult(~ey, 'P')>
                       ) @ #j )
                  case Resp_1
                  solve( !KU( pmult(~ey, 'P') ) @ #vk )
                    case Resp_1
                    solve( !KU( pmult(~ex, 'P') ) @ #vk.1 )
                      case Init_1
                      SOLVED // trace found
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma key_secrecy_ephemeral_no_WPFS:
  all-traces
  "∀ #i1 #i2 test A B k.
    ((Accept( test, A, B, k ) @ #i1) ∧ (K( k ) @ #i2)) ⇒
    ((((∃ #i3. SesskRev( test ) @ #i3) ∨
       (∃ #i3 #i4.
         ((KGCSetup( ) @ #i3) ∧ (KGCSetup( ) @ #i4)) ∧ (¬(#i3 = #i4)))) ∨
      (∃ matching #i3 #i4 sid.
        ((Sid( matching, sid ) @ #i3) ∧ (Match( test, sid ) @ #i4)) ∧
        ((((∃ #i5. SesskRev( matching ) @ #i5) ∨
           (((∃ #i5. LtkRev( B ) @ #i5) ∨ (∃ #i5. MskRev( ) @ #i5)) ∧
            (∃ #i5. EphkRev( matching ) @ #i5))) ∨
          ((∃ #i5. EphkRev( matching ) @ #i5) ∧ (∃ #i5. EphkRev( test ) @ #i5))) ∨
         (((∃ #i5. LtkRev( A ) @ #i5) ∨ (∃ #i5. MskRev( ) @ #i5)) ∧
          (∃ #i5. EphkRev( test ) @ #i5))))) ∨
     ((¬(∃ matching #i3 #i4 sid.
          (Sid( matching, sid ) @ #i3) ∧ (Match( test, sid ) @ #i4))) ∧
      (((∃ #i5. LtkRev( B ) @ #i5) ∨ (∃ #i3. EphkRev( test ) @ #i3)) ∨
       (∃ #i3. MskRev( ) @ #i3))))"
/*
guarded formula characterizing all counter-examples:
"∃ #i1 #i2 test A B k.
  (Accept( test, A, B, k ) @ #i1) ∧ (K( k ) @ #i2)
 ∧
  (∀ #i3. (SesskRev( test ) @ #i3) ⇒ ⊥) ∧
  (∀ #i3 #i4. (KGCSetup( ) @ #i3) ∧ (KGCSetup( ) @ #i4) ⇒ #i3 = #i4) ∧
  (∀ matching #i3 #i4 sid.
    (Sid( matching, sid ) @ #i3) ∧ (Match( test, sid ) @ #i4)
   ⇒
    (∀ #i5. (SesskRev( matching ) @ #i5) ⇒ ⊥) ∧
    ((((∀ #i5. (LtkRev( B ) @ #i5) ⇒ ⊥) ∧ (∀ #i5. (MskRev( ) @ #i5) ⇒ ⊥)) ∨
      (∀ #i5. (EphkRev( matching ) @ #i5) ⇒ ⊥))) ∧
    (((∀ #i5. (EphkRev( matching ) @ #i5) ⇒ ⊥) ∨
      (∀ #i5. (EphkRev( test ) @ #i5) ⇒ ⊥))) ∧
    ((((∀ #i5. (LtkRev( A ) @ #i5) ⇒ ⊥) ∧ (∀ #i5. (MskRev( ) @ #i5) ⇒ ⊥)) ∨
      (∀ #i5. (EphkRev( test ) @ #i5) ⇒ ⊥)))) ∧
  (((∃ matching #i3 #i4 sid.
      (Sid( matching, sid ) @ #i3) ∧ (Match( test, sid ) @ #i4)) ∨
    ((∀ #i5. (LtkRev( B ) @ #i5) ⇒ ⊥) ∧
     (∀ #i3. (EphkRev( test ) @ #i3) ⇒ ⊥) ∧
     (∀ #i3. (MskRev( ) @ #i3) ⇒ ⊥))))"
*/
simplify
solve( (∃ matching #i3 #i4 sid.
         (Sid( matching, sid ) @ #i3) ∧ (Match( test, sid ) @ #i4))  ∥
       ((∀ #i5. (LtkRev( B ) @ #i5) ⇒ ⊥) ∧
        (∀ #i3. (EphkRev( test ) @ #i3) ⇒ ⊥) ∧
        (∀ #i3. (MskRev( ) @ #i3) ⇒ ⊥)) )
  case case_1
  solve( ((∀ #i5. (LtkRev( B ) @ #i5) ⇒ ⊥) ∧
          (∀ #i5. (MskRev( ) @ #i5) ⇒ ⊥))  ∥
         (∀ #i5. (EphkRev( matching ) @ #i5) ⇒ ⊥) )
    case case_1
    solve( (∀ #i5. (EphkRev( matching ) @ #i5) ⇒ ⊥)  ∥
           (∀ #i5. (EphkRev( test ) @ #i5) ⇒ ⊥) )
      case case_1
      solve( ((∀ #i5. (LtkRev( A ) @ #i5) ⇒ ⊥) ∧
              (∀ #i5. (MskRev( ) @ #i5) ⇒ ⊥))  ∥
             (∀ #i5. (EphkRev( test ) @ #i5) ⇒ ⊥) )
        case case_1
        solve( Accept( test, A, B, k ) @ #i1 )
          case Init_2
          solve( Init( ~ex, $A, $B ) ▶₀ #i1 )
            case Init_1
            solve( !MPK( pmult(~x, 'P') ) ▶₁ #i1 )
              case KGC_Setup
              solve( !LTK( $A, pmult(~x.1, hp($A)) ) ▶₂ #i1 )
                case KGC_request
                solve( Sid( matching, sid ) @ #i3 )
                  case Init_2
                  solve( Init( ~ex.1, $A.1, $B.1 ) ▶₀ #i3 )
                    case Init_1
                    solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                      case KGC_Setup
                      solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                        case KGC_request
                        by solve( Match( ~ex, <'Init', $A.1, $B.1, pmult(~ex.1, 'P'), Y.1>
                                  ) @ #i4 )
                      qed
                    qed
                  qed
                next
                  case Resp_1
                  solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                    case KGC_request
                    solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                      case KGC_Setup
                      solve( Match( ~ex, <'Resp', $B.1, $A.1, X, pmult(~ey, 'P')> ) @ #i4 )
                        case Init_2
                        solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i4 )
                          case Init_1
                          solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                           pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                                 ) @ #vk )
                            case Reveal_session_key_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_session_key_case_2
                            by contradiction /* from formulas */
                          next
                            case c_kdf
                            solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                              case Init_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case KGC_Setup
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.10 )
                                  case KGC_Setup
                                  solve( !KU( ~ey ) @ #vk.17 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( ~x ) @ #vk.17 )
                                    case Reveal_master_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Reveal_ltk_case_1
                                  by contradiction /* from formulas */
                                next
                                  case Reveal_ltk_case_2
                                  by contradiction /* from formulas */
                                next
                                  case c_exp
                                  solve( !KU( ~ey ) @ #vk.18 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case Reveal_ltk_case_1
                              by contradiction /* from formulas */
                            next
                              case Reveal_ltk_case_2
                              by contradiction /* from formulas */
                            next
                              case c_exp
                              solve( !KU( ~ex ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                solve( !KU( ~x ) @ #vk.17 )
                                  case Reveal_master_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Resp_1
          solve( !LTK( $B, pmult(~x, hp($B)) ) ▶₁ #i1 )
            case KGC_request
            solve( !MPK( pmult(~x, 'P') ) ▶₂ #i1 )
              case KGC_Setup
              solve( Sid( matching, sid ) @ #i3 )
                case Init_2
                solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i3 )
                  case Init_1
                  solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                    case KGC_Setup
                    solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                      case KGC_request
                      solve( Match( ~ey, <'Init', $A.1, $B.1, pmult(~ex, 'P'), Y> ) @ #i4 )
                        case Resp_1
                        solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                         pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                               ) @ #vk )
                          case Reveal_session_key_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_session_key_case_2
                          by contradiction /* from formulas */
                        next
                          case c_kdf
                          solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                            case Init_1
                            solve( !KU( ~x ) @ #vk.15 )
                              case Reveal_master_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case KGC_Setup
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case Reveal_ltk_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_ltk_case_2
                            by contradiction /* from formulas */
                          next
                            case c_exp
                            solve( !KU( ~ex ) @ #vk.16 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case Resp_1
                solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                  case KGC_request
                  solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                    case KGC_Setup
                    solve( Match( ~ey, <'Resp', $B.1, $A.1, X.1, pmult(~ey.1, 'P')> ) @ #i4 )
                      case Init_2
                      by solve( Init( ~ey, $A.1, $B.1 ) ▶₀ #i4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case case_2
        solve( Accept( test, A, B, k ) @ #i1 )
          case Init_2
          solve( Init( ~ex, $A, $B ) ▶₀ #i1 )
            case Init_1
            solve( !MPK( pmult(~x, 'P') ) ▶₁ #i1 )
              case KGC_Setup
              solve( !LTK( $A, pmult(~x.1, hp($A)) ) ▶₂ #i1 )
                case KGC_request
                solve( Sid( matching, sid ) @ #i3 )
                  case Init_2
                  solve( Init( ~ex.1, $A.1, $B.1 ) ▶₀ #i3 )
                    case Init_1
                    solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                      case KGC_Setup
                      solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                        case KGC_request
                        by solve( Match( ~ex, <'Init', $A.1, $B.1, pmult(~ex.1, 'P'), Y.1>
                                  ) @ #i4 )
                      qed
                    qed
                  qed
                next
                  case Resp_1
                  solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                    case KGC_request
                    solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                      case KGC_Setup
                      solve( Match( ~ex, <'Resp', $B.1, $A.1, X, pmult(~ey, 'P')> ) @ #i4 )
                        case Init_2
                        solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i4 )
                          case Init_1
                          solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                           pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                                 ) @ #vk )
                            case Reveal_session_key_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_session_key_case_2
                            by contradiction /* from formulas */
                          next
                            case c_kdf
                            solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                              case Init_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case KGC_Setup
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_1
                              by contradiction /* from formulas */
                            next
                              case Reveal_ltk_case_2
                              by contradiction /* from formulas */
                            next
                              case c_exp
                              solve( !KU( ~ex ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Resp_1
          solve( !LTK( $B, pmult(~x, hp($B)) ) ▶₁ #i1 )
            case KGC_request
            solve( !MPK( pmult(~x, 'P') ) ▶₂ #i1 )
              case KGC_Setup
              solve( Sid( matching, sid ) @ #i3 )
                case Init_2
                solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i3 )
                  case Init_1
                  solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                    case KGC_Setup
                    solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                      case KGC_request
                      solve( Match( ~ey, <'Init', $A.1, $B.1, pmult(~ex, 'P'), Y> ) @ #i4 )
                        case Resp_1
                        solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                         pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                               ) @ #vk )
                          case Reveal_session_key_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_session_key_case_2
                          by contradiction /* from formulas */
                        next
                          case c_kdf
                          solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                            case Init_1
                            solve( !KU( ~x ) @ #vk.15 )
                              case Reveal_master_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case KGC_Setup
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case Reveal_ltk_case_1
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case Reveal_ltk_case_2
                            solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.8 )
                              case KGC_Setup
                              solve( !KU( ~ey ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Resp_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_1
                              by contradiction /* from formulas */
                            next
                              case Reveal_ltk_case_2
                              by contradiction /* from formulas */
                            next
                              case c_exp
                              solve( !KU( ~ey ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          next
                            case c_exp
                            solve( !KU( ~ex ) @ #vk.16 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case Resp_1
                solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                  case KGC_request
                  solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                    case KGC_Setup
                    solve( Match( ~ey, <'Resp', $B.1, $A.1, X.1, pmult(~ey.1, 'P')> ) @ #i4 )
                      case Init_2
                      by solve( Init( ~ey, $A.1, $B.1 ) ▶₀ #i4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case case_2
      solve( ((∀ #i5. (LtkRev( A ) @ #i5) ⇒ ⊥) ∧
              (∀ #i5. (MskRev( ) @ #i5) ⇒ ⊥))  ∥
             (∀ #i5. (EphkRev( test ) @ #i5) ⇒ ⊥) )
        case case_1
        solve( Accept( test, A, B, k ) @ #i1 )
          case Init_2
          solve( Init( ~ex, $A, $B ) ▶₀ #i1 )
            case Init_1
            solve( !MPK( pmult(~x, 'P') ) ▶₁ #i1 )
              case KGC_Setup
              solve( !LTK( $A, pmult(~x.1, hp($A)) ) ▶₂ #i1 )
                case KGC_request
                solve( Sid( matching, sid ) @ #i3 )
                  case Init_2
                  solve( Init( ~ex.1, $A.1, $B.1 ) ▶₀ #i3 )
                    case Init_1
                    solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                      case KGC_Setup
                      solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                        case KGC_request
                        by solve( Match( ~ex, <'Init', $A.1, $B.1, pmult(~ex.1, 'P'), Y.1>
                                  ) @ #i4 )
                      qed
                    qed
                  qed
                next
                  case Resp_1
                  solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                    case KGC_request
                    solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                      case KGC_Setup
                      solve( Match( ~ex, <'Resp', $B.1, $A.1, X, pmult(~ey, 'P')> ) @ #i4 )
                        case Init_2
                        solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i4 )
                          case Init_1
                          solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                           pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                                 ) @ #vk )
                            case Reveal_session_key_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_session_key_case_2
                            by contradiction /* from formulas */
                          next
                            case c_kdf
                            solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                              case Init_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case KGC_Setup
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_1
                              by contradiction /* from formulas */
                            next
                              case Reveal_ltk_case_2
                              by contradiction /* from formulas */
                            next
                              case c_exp
                              solve( !KU( ~ex ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Resp_1
          solve( !LTK( $B, pmult(~x, hp($B)) ) ▶₁ #i1 )
            case KGC_request
            solve( !MPK( pmult(~x, 'P') ) ▶₂ #i1 )
              case KGC_Setup
              solve( Sid( matching, sid ) @ #i3 )
                case Init_2
                solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i3 )
                  case Init_1
                  solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                    case KGC_Setup
                    solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                      case KGC_request
                      solve( Match( ~ey, <'Init', $A.1, $B.1, pmult(~ex, 'P'), Y> ) @ #i4 )
                        case Resp_1
                        solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                         pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                               ) @ #vk )
                          case Reveal_session_key_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_session_key_case_2
                          by contradiction /* from formulas */
                        next
                          case c_kdf
                          solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                            case Init_1
                            solve( !KU( ~x ) @ #vk.15 )
                              case Reveal_master_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case KGC_Setup
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.10 )
                                case KGC_Setup
                                solve( !KU( ~ey ) @ #vk.17 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Resp_1
                                solve( !KU( ~x ) @ #vk.17 )
                                  case Reveal_master_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Reveal_ltk_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_ltk_case_2
                                by contradiction /* from formulas */
                              next
                                case c_exp
                                solve( !KU( ~ey ) @ #vk.18 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case Reveal_ltk_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_ltk_case_2
                            by contradiction /* from formulas */
                          next
                            case c_exp
                            solve( !KU( ~ex ) @ #vk.16 )
                              case Reveal_ephemeral_key
                              solve( !KU( ~x ) @ #vk.17 )
                                case Reveal_master_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case Resp_1
                solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                  case KGC_request
                  solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                    case KGC_Setup
                    solve( Match( ~ey, <'Resp', $B.1, $A.1, X.1, pmult(~ey.1, 'P')> ) @ #i4 )
                      case Init_2
                      by solve( Init( ~ey, $A.1, $B.1 ) ▶₀ #i4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case case_2
        solve( Accept( test, A, B, k ) @ #i1 )
          case Init_2
          solve( Init( ~ex, $A, $B ) ▶₀ #i1 )
            case Init_1
            solve( !MPK( pmult(~x, 'P') ) ▶₁ #i1 )
              case KGC_Setup
              solve( !LTK( $A, pmult(~x.1, hp($A)) ) ▶₂ #i1 )
                case KGC_request
                solve( Sid( matching, sid ) @ #i3 )
                  case Init_2
                  solve( Init( ~ex.1, $A.1, $B.1 ) ▶₀ #i3 )
                    case Init_1
                    solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                      case KGC_Setup
                      solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                        case KGC_request
                        by solve( Match( ~ex, <'Init', $A.1, $B.1, pmult(~ex.1, 'P'), Y.1>
                                  ) @ #i4 )
                      qed
                    qed
                  qed
                next
                  case Resp_1
                  solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                    case KGC_request
                    solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                      case KGC_Setup
                      solve( Match( ~ex, <'Resp', $B.1, $A.1, X, pmult(~ey, 'P')> ) @ #i4 )
                        case Init_2
                        solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i4 )
                          case Init_1
                          solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                           pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                                 ) @ #vk )
                            case Reveal_session_key_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_session_key_case_2
                            by contradiction /* from formulas */
                          next
                            case c_kdf
                            solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                              case Init_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case KGC_Setup
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_1
                              by contradiction /* from formulas */
                            next
                              case Reveal_ltk_case_2
                              by contradiction /* from formulas */
                            next
                              case c_exp
                              solve( !KU( ~ex ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Resp_1
          solve( !LTK( $B, pmult(~x, hp($B)) ) ▶₁ #i1 )
            case KGC_request
            solve( !MPK( pmult(~x, 'P') ) ▶₂ #i1 )
              case KGC_Setup
              solve( Sid( matching, sid ) @ #i3 )
                case Init_2
                solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i3 )
                  case Init_1
                  solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                    case KGC_Setup
                    solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                      case KGC_request
                      solve( Match( ~ey, <'Init', $A.1, $B.1, pmult(~ex, 'P'), Y> ) @ #i4 )
                        case Resp_1
                        solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                         pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                               ) @ #vk )
                          case Reveal_session_key_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_session_key_case_2
                          by contradiction /* from formulas */
                        next
                          case c_kdf
                          solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                            case Init_1
                            solve( !KU( ~x ) @ #vk.15 )
                              case Reveal_master_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case KGC_Setup
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.10 )
                                case KGC_Setup
                                solve( !KU( ~ey ) @ #vk.17 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Resp_1
                                solve( !KU( ~x ) @ #vk.17 )
                                  case Reveal_master_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Reveal_ltk_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_ltk_case_2
                                by contradiction /* from formulas */
                              next
                                case c_exp
                                solve( !KU( ~ey ) @ #vk.18 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case Reveal_ltk_case_1
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.10 )
                                case KGC_Setup
                                solve( !KU( ~ey ) @ #vk.17 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Resp_1
                                solve( !KU( ~x ) @ #vk.17 )
                                  case Reveal_master_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Reveal_ltk_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_ltk_case_2
                                by contradiction /* from formulas */
                              next
                                case c_exp
                                solve( !KU( ~ey ) @ #vk.18 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case Reveal_ltk_case_2
                            solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.8 )
                              case KGC_Setup
                              solve( !KU( ~ey ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Resp_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_1
                              by contradiction /* from formulas */
                            next
                              case Reveal_ltk_case_2
                              by contradiction /* from formulas */
                            next
                              case c_exp
                              solve( !KU( ~ey ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          next
                            case c_exp
                            solve( !KU( ~ex ) @ #vk.16 )
                              case Reveal_ephemeral_key
                              solve( !KU( ~x ) @ #vk.17 )
                                case Reveal_master_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case Resp_1
                solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                  case KGC_request
                  solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                    case KGC_Setup
                    solve( Match( ~ey, <'Resp', $B.1, $A.1, X.1, pmult(~ey.1, 'P')> ) @ #i4 )
                      case Init_2
                      by solve( Init( ~ey, $A.1, $B.1 ) ▶₀ #i4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case case_2
    solve( (∀ #i5. (EphkRev( matching ) @ #i5) ⇒ ⊥)  ∥
           (∀ #i5. (EphkRev( test ) @ #i5) ⇒ ⊥) )
      case case_1
      solve( ((∀ #i5. (LtkRev( A ) @ #i5) ⇒ ⊥) ∧
              (∀ #i5. (MskRev( ) @ #i5) ⇒ ⊥))  ∥
             (∀ #i5. (EphkRev( test ) @ #i5) ⇒ ⊥) )
        case case_1
        solve( Accept( test, A, B, k ) @ #i1 )
          case Init_2
          solve( Init( ~ex, $A, $B ) ▶₀ #i1 )
            case Init_1
            solve( !MPK( pmult(~x, 'P') ) ▶₁ #i1 )
              case KGC_Setup
              solve( !LTK( $A, pmult(~x.1, hp($A)) ) ▶₂ #i1 )
                case KGC_request
                solve( Sid( matching, sid ) @ #i3 )
                  case Init_2
                  solve( Init( ~ex.1, $A.1, $B.1 ) ▶₀ #i3 )
                    case Init_1
                    solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                      case KGC_Setup
                      solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                        case KGC_request
                        by solve( Match( ~ex, <'Init', $A.1, $B.1, pmult(~ex.1, 'P'), Y.1>
                                  ) @ #i4 )
                      qed
                    qed
                  qed
                next
                  case Resp_1
                  solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                    case KGC_request
                    solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                      case KGC_Setup
                      solve( Match( ~ex, <'Resp', $B.1, $A.1, X, pmult(~ey, 'P')> ) @ #i4 )
                        case Init_2
                        solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i4 )
                          case Init_1
                          solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                           pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                                 ) @ #vk )
                            case Reveal_session_key_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_session_key_case_2
                            by contradiction /* from formulas */
                          next
                            case c_kdf
                            solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                              case Init_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case KGC_Setup
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.10 )
                                  case KGC_Setup
                                  solve( !KU( ~ey ) @ #vk.17 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( ~x ) @ #vk.17 )
                                    case Reveal_master_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Reveal_ltk_case_1
                                  by contradiction /* from formulas */
                                next
                                  case Reveal_ltk_case_2
                                  by contradiction /* from formulas */
                                next
                                  case c_exp
                                  solve( !KU( ~ey ) @ #vk.18 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case Reveal_ltk_case_1
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.10 )
                                  case KGC_Setup
                                  solve( !KU( ~ey ) @ #vk.17 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( ~x ) @ #vk.17 )
                                    case Reveal_master_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Reveal_ltk_case_1
                                  by contradiction /* from formulas */
                                next
                                  case Reveal_ltk_case_2
                                  by contradiction /* from formulas */
                                next
                                  case c_exp
                                  solve( !KU( ~ey ) @ #vk.18 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case Reveal_ltk_case_2
                              solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.8 )
                                case KGC_Setup
                                solve( !KU( ~ey ) @ #vk.15 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Resp_1
                                solve( !KU( ~x ) @ #vk.15 )
                                  case Reveal_master_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Reveal_ltk_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_ltk_case_2
                                by contradiction /* from formulas */
                              next
                                case c_exp
                                solve( !KU( ~ey ) @ #vk.16 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~ex ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                solve( !KU( ~x ) @ #vk.17 )
                                  case Reveal_master_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Resp_1
          solve( !LTK( $B, pmult(~x, hp($B)) ) ▶₁ #i1 )
            case KGC_request
            solve( !MPK( pmult(~x, 'P') ) ▶₂ #i1 )
              case KGC_Setup
              solve( Sid( matching, sid ) @ #i3 )
                case Init_2
                solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i3 )
                  case Init_1
                  solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                    case KGC_Setup
                    solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                      case KGC_request
                      solve( Match( ~ey, <'Init', $A.1, $B.1, pmult(~ex, 'P'), Y> ) @ #i4 )
                        case Resp_1
                        solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                         pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                               ) @ #vk )
                          case Reveal_session_key_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_session_key_case_2
                          by contradiction /* from formulas */
                        next
                          case c_kdf
                          solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                            case Init_1
                            solve( !KU( ~x ) @ #vk.15 )
                              case Reveal_master_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case KGC_Setup
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case Reveal_ltk_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_ltk_case_2
                            by contradiction /* from formulas */
                          next
                            case c_exp
                            solve( !KU( ~ex ) @ #vk.16 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case Resp_1
                solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                  case KGC_request
                  solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                    case KGC_Setup
                    solve( Match( ~ey, <'Resp', $B.1, $A.1, X.1, pmult(~ey.1, 'P')> ) @ #i4 )
                      case Init_2
                      by solve( Init( ~ey, $A.1, $B.1 ) ▶₀ #i4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case case_2
        solve( Accept( test, A, B, k ) @ #i1 )
          case Init_2
          solve( Init( ~ex, $A, $B ) ▶₀ #i1 )
            case Init_1
            solve( !MPK( pmult(~x, 'P') ) ▶₁ #i1 )
              case KGC_Setup
              solve( !LTK( $A, pmult(~x.1, hp($A)) ) ▶₂ #i1 )
                case KGC_request
                solve( Sid( matching, sid ) @ #i3 )
                  case Init_2
                  solve( Init( ~ex.1, $A.1, $B.1 ) ▶₀ #i3 )
                    case Init_1
                    solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                      case KGC_Setup
                      solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                        case KGC_request
                        by solve( Match( ~ex, <'Init', $A.1, $B.1, pmult(~ex.1, 'P'), Y.1>
                                  ) @ #i4 )
                      qed
                    qed
                  qed
                next
                  case Resp_1
                  solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                    case KGC_request
                    solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                      case KGC_Setup
                      solve( Match( ~ex, <'Resp', $B.1, $A.1, X, pmult(~ey, 'P')> ) @ #i4 )
                        case Init_2
                        solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i4 )
                          case Init_1
                          solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                           pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                                 ) @ #vk )
                            case Reveal_session_key_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_session_key_case_2
                            by contradiction /* from formulas */
                          next
                            case c_kdf
                            solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                              case Init_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.10 )
                                  case KGC_Setup
                                  solve( !KU( ~ey ) @ #vk.17 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                    case Init_1
                                    solve( !KU( ~ey ) @ #vk.17 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case Resp_1
                                    solve( !KU( ~ex ) @ #vk.17 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_pmult
                                    solve( !KU( ~ex ) @ #vk.19 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case Reveal_ltk_case_1
                                  solve( !KU( ~ey ) @ #vk.17 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Reveal_ltk_case_2
                                  solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                    case Init_1
                                    solve( !KU( ~ey ) @ #vk.16 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case Resp_1
                                    solve( !KU( ~ex ) @ #vk.16 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_pmult
                                    solve( !KU( ~ex ) @ #vk.18 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case c_exp
                                  solve( !KU( ~ey ) @ #vk.18 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case KGC_Setup
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_1
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_2
                              solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.8 )
                                case KGC_Setup
                                solve( !KU( ~ey ) @ #vk.15 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Resp_1
                                solve( !KU( ~x ) @ #vk.15 )
                                  case Reveal_master_key
                                  solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                    case Init_1
                                    solve( !KU( ~ey ) @ #vk.16 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case Resp_1
                                    solve( !KU( ~ex ) @ #vk.16 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_pmult
                                    solve( !KU( ~ex ) @ #vk.18 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              next
                                case Reveal_ltk_case_1
                                solve( !KU( ~ey ) @ #vk.15 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Reveal_ltk_case_2
                                solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.11 )
                                  case Init_1
                                  solve( !KU( ~ey ) @ #vk.14 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( ~ex ) @ #vk.14 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_pmult
                                  solve( !KU( ~ex ) @ #vk.16 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case c_exp
                                solve( !KU( ~ey ) @ #vk.16 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~ex ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Resp_1
          solve( !LTK( $B, pmult(~x, hp($B)) ) ▶₁ #i1 )
            case KGC_request
            solve( !MPK( pmult(~x, 'P') ) ▶₂ #i1 )
              case KGC_Setup
              solve( Sid( matching, sid ) @ #i3 )
                case Init_2
                solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i3 )
                  case Init_1
                  solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                    case KGC_Setup
                    solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                      case KGC_request
                      solve( Match( ~ey, <'Init', $A.1, $B.1, pmult(~ex, 'P'), Y> ) @ #i4 )
                        case Resp_1
                        solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                         pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                               ) @ #vk )
                          case Reveal_session_key_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_session_key_case_2
                          by contradiction /* from formulas */
                        next
                          case c_kdf
                          solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                            case Init_1
                            solve( !KU( ~x ) @ #vk.15 )
                              case Reveal_master_key
                              solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.10 )
                                case KGC_Setup
                                solve( !KU( ~ey ) @ #vk.17 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Resp_1
                                solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                  case Init_1
                                  solve( !KU( ~ey ) @ #vk.17 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( ~ex ) @ #vk.17 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_pmult
                                  solve( !KU( ~ex ) @ #vk.19 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case Reveal_ltk_case_1
                                solve( !KU( ~ey ) @ #vk.17 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Reveal_ltk_case_2
                                solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                  case Init_1
                                  solve( !KU( ~ey ) @ #vk.16 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( ~ex ) @ #vk.16 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_pmult
                                  solve( !KU( ~ex ) @ #vk.18 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case c_exp
                                solve( !KU( ~ey ) @ #vk.18 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case KGC_Setup
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case Reveal_ltk_case_1
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case Reveal_ltk_case_2
                            solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.8 )
                              case KGC_Setup
                              solve( !KU( ~ey ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Resp_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                  case Init_1
                                  solve( !KU( ~ey ) @ #vk.16 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( ~ex ) @ #vk.16 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_pmult
                                  solve( !KU( ~ex ) @ #vk.18 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case Reveal_ltk_case_1
                              solve( !KU( ~ey ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_2
                              solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.11 )
                                case Init_1
                                solve( !KU( ~ey ) @ #vk.14 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Resp_1
                                solve( !KU( ~ex ) @ #vk.14 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case c_pmult
                                solve( !KU( ~ex ) @ #vk.16 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~ey ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          next
                            case c_exp
                            solve( !KU( ~ex ) @ #vk.16 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case Resp_1
                solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                  case KGC_request
                  solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                    case KGC_Setup
                    solve( Match( ~ey, <'Resp', $B.1, $A.1, X.1, pmult(~ey.1, 'P')> ) @ #i4 )
                      case Init_2
                      by solve( Init( ~ey, $A.1, $B.1 ) ▶₀ #i4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case case_2
      solve( ((∀ #i5. (LtkRev( A ) @ #i5) ⇒ ⊥) ∧
              (∀ #i5. (MskRev( ) @ #i5) ⇒ ⊥))  ∥
             (∀ #i5. (EphkRev( test ) @ #i5) ⇒ ⊥) )
        case case_1
        solve( Accept( test, A, B, k ) @ #i1 )
          case Init_2
          solve( Init( ~ex, $A, $B ) ▶₀ #i1 )
            case Init_1
            solve( !MPK( pmult(~x, 'P') ) ▶₁ #i1 )
              case KGC_Setup
              solve( !LTK( $A, pmult(~x.1, hp($A)) ) ▶₂ #i1 )
                case KGC_request
                solve( Sid( matching, sid ) @ #i3 )
                  case Init_2
                  solve( Init( ~ex.1, $A.1, $B.1 ) ▶₀ #i3 )
                    case Init_1
                    solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                      case KGC_Setup
                      solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                        case KGC_request
                        by solve( Match( ~ex, <'Init', $A.1, $B.1, pmult(~ex.1, 'P'), Y.1>
                                  ) @ #i4 )
                      qed
                    qed
                  qed
                next
                  case Resp_1
                  solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                    case KGC_request
                    solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                      case KGC_Setup
                      solve( Match( ~ex, <'Resp', $B.1, $A.1, X, pmult(~ey, 'P')> ) @ #i4 )
                        case Init_2
                        solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i4 )
                          case Init_1
                          solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                           pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                                 ) @ #vk )
                            case Reveal_session_key_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_session_key_case_2
                            by contradiction /* from formulas */
                          next
                            case c_kdf
                            solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                              case Init_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case KGC_Setup
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_1
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_2
                              solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.8 )
                                case KGC_Setup
                                solve( !KU( ~ey ) @ #vk.15 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Resp_1
                                solve( !KU( ~x ) @ #vk.15 )
                                  case Reveal_master_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Reveal_ltk_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_ltk_case_2
                                by contradiction /* from formulas */
                              next
                                case c_exp
                                solve( !KU( ~ey ) @ #vk.16 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~ex ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Resp_1
          solve( !LTK( $B, pmult(~x, hp($B)) ) ▶₁ #i1 )
            case KGC_request
            solve( !MPK( pmult(~x, 'P') ) ▶₂ #i1 )
              case KGC_Setup
              solve( Sid( matching, sid ) @ #i3 )
                case Init_2
                solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i3 )
                  case Init_1
                  solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                    case KGC_Setup
                    solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                      case KGC_request
                      solve( Match( ~ey, <'Init', $A.1, $B.1, pmult(~ex, 'P'), Y> ) @ #i4 )
                        case Resp_1
                        solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                         pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                               ) @ #vk )
                          case Reveal_session_key_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_session_key_case_2
                          by contradiction /* from formulas */
                        next
                          case c_kdf
                          solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                            case Init_1
                            solve( !KU( ~x ) @ #vk.15 )
                              case Reveal_master_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case KGC_Setup
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case Reveal_ltk_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_ltk_case_2
                            by contradiction /* from formulas */
                          next
                            case c_exp
                            solve( !KU( ~ex ) @ #vk.16 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case Resp_1
                solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                  case KGC_request
                  solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                    case KGC_Setup
                    solve( Match( ~ey, <'Resp', $B.1, $A.1, X.1, pmult(~ey.1, 'P')> ) @ #i4 )
                      case Init_2
                      by solve( Init( ~ey, $A.1, $B.1 ) ▶₀ #i4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case case_2
        solve( Accept( test, A, B, k ) @ #i1 )
          case Init_2
          solve( Init( ~ex, $A, $B ) ▶₀ #i1 )
            case Init_1
            solve( !MPK( pmult(~x, 'P') ) ▶₁ #i1 )
              case KGC_Setup
              solve( !LTK( $A, pmult(~x.1, hp($A)) ) ▶₂ #i1 )
                case KGC_request
                solve( Sid( matching, sid ) @ #i3 )
                  case Init_2
                  solve( Init( ~ex.1, $A.1, $B.1 ) ▶₀ #i3 )
                    case Init_1
                    solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                      case KGC_Setup
                      solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                        case KGC_request
                        by solve( Match( ~ex, <'Init', $A.1, $B.1, pmult(~ex.1, 'P'), Y.1>
                                  ) @ #i4 )
                      qed
                    qed
                  qed
                next
                  case Resp_1
                  solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                    case KGC_request
                    solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                      case KGC_Setup
                      solve( Match( ~ex, <'Resp', $B.1, $A.1, X, pmult(~ey, 'P')> ) @ #i4 )
                        case Init_2
                        solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i4 )
                          case Init_1
                          solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                           pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                                 ) @ #vk )
                            case Reveal_session_key_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_session_key_case_2
                            by contradiction /* from formulas */
                          next
                            case c_kdf
                            solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                              case Init_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.10 )
                                  case KGC_Setup
                                  solve( !KU( ~ey ) @ #vk.17 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                    case Init_1
                                    solve( !KU( ~ey ) @ #vk.17 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case Resp_1
                                    solve( !KU( ~ex ) @ #vk.17 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_pmult
                                    solve( !KU( ~ex ) @ #vk.19 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case Reveal_ltk_case_1
                                  solve( !KU( ~ey ) @ #vk.17 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Reveal_ltk_case_2
                                  solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                    case Init_1
                                    solve( !KU( ~ey ) @ #vk.16 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case Resp_1
                                    solve( !KU( ~ex ) @ #vk.16 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_pmult
                                    solve( !KU( ~ex ) @ #vk.18 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case c_exp
                                  solve( !KU( ~ey ) @ #vk.18 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case KGC_Setup
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_1
                              solve( !KU( ~ex ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_2
                              solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.8 )
                                case KGC_Setup
                                solve( !KU( ~ey ) @ #vk.15 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Resp_1
                                solve( !KU( ~x ) @ #vk.15 )
                                  case Reveal_master_key
                                  solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                    case Init_1
                                    solve( !KU( ~ey ) @ #vk.16 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case Resp_1
                                    solve( !KU( ~ex ) @ #vk.16 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_pmult
                                    solve( !KU( ~ex ) @ #vk.18 )
                                      case Reveal_ephemeral_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              next
                                case Reveal_ltk_case_1
                                solve( !KU( ~ey ) @ #vk.15 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Reveal_ltk_case_2
                                solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.11 )
                                  case Init_1
                                  solve( !KU( ~ey ) @ #vk.14 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( ~ex ) @ #vk.14 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_pmult
                                  solve( !KU( ~ex ) @ #vk.16 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case c_exp
                                solve( !KU( ~ey ) @ #vk.16 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~ex ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Resp_1
          solve( !LTK( $B, pmult(~x, hp($B)) ) ▶₁ #i1 )
            case KGC_request
            solve( !MPK( pmult(~x, 'P') ) ▶₂ #i1 )
              case KGC_Setup
              solve( Sid( matching, sid ) @ #i3 )
                case Init_2
                solve( Init( ~ex, $A.1, $B.1 ) ▶₀ #i3 )
                  case Init_1
                  solve( !MPK( pmult(~x.1, 'P') ) ▶₁ #i3 )
                    case KGC_Setup
                    solve( !LTK( $A.1, pmult(~x.1, hp($A.1)) ) ▶₂ #i3 )
                      case KGC_request
                      solve( Match( ~ey, <'Init', $A.1, $B.1, pmult(~ex, 'P'), Y> ) @ #i4 )
                        case Resp_1
                        solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), em('P', hp($A))^(~ey*~x), 
                                         pmult((~ex*~ey), 'P'), $A, $B, pmult(~ex, 'P'), pmult(~ey, 'P')>)
                               ) @ #vk )
                          case Reveal_session_key_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_session_key_case_2
                          by contradiction /* from formulas */
                        next
                          case c_kdf
                          solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.5 )
                            case Init_1
                            solve( !KU( ~x ) @ #vk.15 )
                              case Reveal_master_key
                              solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.10 )
                                case KGC_Setup
                                solve( !KU( ~ey ) @ #vk.17 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Resp_1
                                solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                  case Init_1
                                  solve( !KU( ~ey ) @ #vk.17 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( ~ex ) @ #vk.17 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_pmult
                                  solve( !KU( ~ex ) @ #vk.19 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case Reveal_ltk_case_1
                                solve( !KU( ~ey ) @ #vk.17 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Reveal_ltk_case_2
                                solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                  case Init_1
                                  solve( !KU( ~ey ) @ #vk.16 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( ~ex ) @ #vk.16 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_pmult
                                  solve( !KU( ~ex ) @ #vk.18 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case c_exp
                                solve( !KU( ~ey ) @ #vk.18 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case KGC_Setup
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case Reveal_ltk_case_1
                            solve( !KU( ~ex ) @ #vk.15 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case Reveal_ltk_case_2
                            solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.8 )
                              case KGC_Setup
                              solve( !KU( ~ey ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Resp_1
                              solve( !KU( ~x ) @ #vk.15 )
                                case Reveal_master_key
                                solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.12 )
                                  case Init_1
                                  solve( !KU( ~ey ) @ #vk.16 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case Resp_1
                                  solve( !KU( ~ex ) @ #vk.16 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_pmult
                                  solve( !KU( ~ex ) @ #vk.18 )
                                    case Reveal_ephemeral_key
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case Reveal_ltk_case_1
                              solve( !KU( ~ey ) @ #vk.15 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case Reveal_ltk_case_2
                              solve( !KU( pmult((~ex*~ey), 'P') ) @ #vk.11 )
                                case Init_1
                                solve( !KU( ~ey ) @ #vk.14 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case Resp_1
                                solve( !KU( ~ex ) @ #vk.14 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case c_pmult
                                solve( !KU( ~ex ) @ #vk.16 )
                                  case Reveal_ephemeral_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~ey ) @ #vk.16 )
                                case Reveal_ephemeral_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          next
                            case c_exp
                            solve( !KU( ~ex ) @ #vk.16 )
                              case Reveal_ephemeral_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case Resp_1
                solve( !LTK( $B.1, pmult(~x.1, hp($B.1)) ) ▶₁ #i3 )
                  case KGC_request
                  solve( !MPK( pmult(~x, 'P') ) ▶₂ #i3 )
                    case KGC_Setup
                    solve( Match( ~ey, <'Resp', $B.1, $A.1, X.1, pmult(~ey.1, 'P')> ) @ #i4 )
                      case Init_2
                      by solve( Init( ~ey, $A.1, $B.1 ) ▶₀ #i4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_2
  solve( Accept( test, A, B, k ) @ #i1 )
    case Init_2
    solve( Init( ~ex, $A, $B ) ▶₀ #i1 )
      case Init_1
      solve( !MPK( pmult(~x, 'P') ) ▶₁ #i1 )
        case KGC_Setup
        solve( !LTK( $A, pmult(~x.1, hp($A)) ) ▶₂ #i1 )
          case KGC_request
          solve( !KU( kdf(<em('P', hp($B))^(~ex*~x), z, z.1, $A, $B, 
                           pmult(~ex, 'P'), Y>)
                 ) @ #vk )
            case Reveal_session_key_case_1
            by contradiction /* from formulas */
          next
            case Reveal_session_key_case_2
            by contradiction /* from formulas */
          next
            case c_kdf
            solve( !KU( em('P', hp($B))^(~ex*~x) ) @ #vk.4 )
              case Init_1
              solve( !KU( ~x ) @ #vk.15 )
                case Reveal_master_key
                by contradiction /* from formulas */
              qed
            next
              case KGC_Setup
              solve( !KU( ~ex ) @ #vk.15 )
                case Reveal_ephemeral_key
                by contradiction /* from formulas */
              qed
            next
              case Reveal_ltk_case_1
              by contradiction /* from formulas */
            next
              case Reveal_ltk_case_2
              by contradiction /* from formulas */
            next
              case c_exp
              solve( !KU( ~ex ) @ #vk.16 )
                case Reveal_ephemeral_key
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Resp_1
    solve( !LTK( $B, pmult(~x, hp($B)) ) ▶₁ #i1 )
      case KGC_request
      solve( !MPK( pmult(~x, 'P') ) ▶₂ #i1 )
        case KGC_Setup
        solve( !KU( kdf(<z, em('P', hp($A))^(~ey*~x), z.1, $A, $B, X, 
                         pmult(~ey, 'P')>)
               ) @ #vk )
          case Reveal_session_key_case_1
          by contradiction /* from formulas */
        next
          case Reveal_session_key_case_2
          by contradiction /* from formulas */
        next
          case c_kdf
          solve( !KU( em('P', hp($A))^(~ey*~x) ) @ #vk.6 )
            case KGC_Setup
            solve( !KU( ~ey ) @ #vk.15 )
              case Reveal_ephemeral_key
              by contradiction /* from formulas */
            qed
          next
            case Resp_1
            solve( !KU( ~x ) @ #vk.15 )
              case Reveal_master_key
              by contradiction /* from formulas */
            qed
          next
            case Reveal_ltk_case_1
            by contradiction /* from formulas */
          next
            case Reveal_ltk_case_2
            by contradiction /* from formulas */
          next
            case c_exp
            solve( !KU( ~ey ) @ #vk.16 )
              case Reveal_ephemeral_key
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.


analyzing: examples/ake/bilinear/Chen_Kudla.spthy

------------------------------------------------------------------------------
analyzed: examples/ake/bilinear/Chen_Kudla.spthy

  output:          examples/ake/bilinear/Chen_Kudla.spthy.tmp
  processing time: 59.380057706s
  key_agreement_reachable (exists-trace): verified (13 steps)
  key_secrecy_ephemeral_no_WPFS (all-traces): verified (679 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: examples/ake/bilinear/Chen_Kudla.spthy

  output:          examples/ake/bilinear/Chen_Kudla.spthy.tmp
  processing time: 59.380057706s
  key_agreement_reachable (exists-trace): verified (13 steps)
  key_secrecy_ephemeral_no_WPFS (all-traces): verified (679 steps)

==============================================================================
*/
