theory LAK06 begin

// Function signature and definition of the equational theory E

builtins: xor
functions: fst/1, h/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



rule (modulo E) setup:
   [ Fr( ~k ) ]
  --[ OnlyOnce( 'setup' ), Create( ~k ) ]->
   [ !Reader( ~k ), !Tag( ~k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) initiatereader:
   [ !Reader( ~k ), Fr( ~r0 ) ]
  --[ OnlyOnce( 'initiareader' ) ]->
   [ ReaderState1( ~k, ~r0 ), Out( ~r0 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) tag1:
   [ !Tag( ~k ), Fr( ~r1 ), In( r0 ) ]
  --[ Running( <'R', 'T', ~k, r0, ~r1> ) ]->
   [ TagState1( ~k, ~r1, r0 ), Out( <~r1, h((~k⊕~r1⊕r0))> ) ]

  /*
  rule (modulo AC) tag1:
     [ !Tag( ~k ), Fr( ~r1 ), In( r0 ) ]
    --[ Running( <'R', 'T', ~k, r0, ~r1> ) ]->
     [ TagState1( ~k, ~r1, r0 ), Out( <~r1, h(z)> ) ]
    variants (modulo AC)
    1. ~k    = ~k.7
       ~r1   = ~r1.8
       r0    = ~k.7
       z     = ~r1.8
    
    2. ~k    = ~k.7
       ~r1   = ~r1.8
       r0    = ~r1.8
       z     = ~k.7
    
    3. ~k    = ~k.7
       ~r1   = ~r1.8
       r0    = zero
       z     = (~k.7⊕~r1.8)
    
    4. ~k    = ~k.7
       ~r1   = ~r1.8
       r0    = (~k.7⊕~r1.8)
       z     = zero
    
    5. ~k    = ~k.8
       ~r1   = ~k.8
       r0    = r0.10
       z     = r0.10
    
    6. ~k    = ~k.8
       ~r1   = ~r1.9
       r0    = r0.10
       z     = (~k.8⊕~r1.9⊕r0.10)
    
    7. ~k    = ~k.9
       ~r1   = ~r1.10
       r0    = (~k.9⊕~r1.10⊕z.12)
       z     = z.12
    
    8. ~k    = ~k.13
       ~r1   = ~r1.14
       r0    = (~r1.14⊕x.24)
       z     = (~k.13⊕x.24)
    
    9. ~k    = ~k.14
       ~r1   = ~r1.15
       r0    = (~k.14⊕x.26)
       z     = (~r1.15⊕x.26)
  */

rule (modulo E) acceptreader:
   [ ReaderState1( ~k, ~r0 ), In( <r1, h((~k⊕~r0⊕r1))> ) ]
  --[ Commit( <'R', 'T', ~k, ~r0, r1> ), Running( <'T', 'R', ~k, ~r0, r1> )
  ]->
   [ Out( h((~k⊕~r0⊕h((~k⊕~r0⊕r1)))) ) ]

  /*
  rule (modulo AC) acceptreader:
     [ ReaderState1( ~k, ~r0 ), In( <r1, h(z)> ) ]
    --[ Commit( <'R', 'T', ~k, ~r0, r1> ), Running( <'T', 'R', ~k, ~r0, r1> )
    ]->
     [ Out( h(z.1) ) ]
    variants (modulo AC)
    1. ~k    = ~k.8
       ~r0   = ~r0.9
       r1    = ~k.8
       z     = ~r0.9
       z.1   = (~k.8⊕~r0.9⊕h(~r0.9))
    
    2. ~k    = ~k.8
       ~r0   = ~r0.9
       r1    = ~r0.9
       z     = ~k.8
       z.1   = (~k.8⊕~r0.9⊕h(~k.8))
    
    3. ~k    = ~k.8
       ~r0   = ~r0.9
       r1    = zero
       z     = (~k.8⊕~r0.9)
       z.1   = (~k.8⊕~r0.9⊕h((~k.8⊕~r0.9)))
    
    4. ~k    = ~k.8
       ~r0   = ~r0.9
       r1    = (~k.8⊕~r0.9)
       z     = zero
       z.1   = (~k.8⊕~r0.9⊕h(zero))
    
    5. ~k    = ~k.9
       ~r0   = ~k.9
       r1    = r1.11
       z     = r1.11
       z.1   = h(r1.11)
    
    6. ~k    = ~k.9
       ~r0   = ~r0.10
       r1    = r1.11
       z     = (~k.9⊕~r0.10⊕r1.11)
       z.1   = (~k.9⊕~r0.10⊕h((~k.9⊕~r0.10⊕r1.11)))
    
    7. ~k    = ~k.10
       ~r0   = ~r0.11
       r1    = (~k.10⊕~r0.11⊕z.13)
       z     = z.13
       z.1   = (~k.10⊕~r0.11⊕h(z.13))
    
    8. ~k    = ~k.15
       ~r0   = ~r0.16
       r1    = (~r0.16⊕x.28)
       z     = (~k.15⊕x.28)
       z.1   = (~k.15⊕~r0.16⊕h((~k.15⊕x.28)))
    
    9. ~k    = ~k.16
       ~r0   = ~r0.17
       r1    = (~k.16⊕x.30)
       z     = (~r0.17⊕x.30)
       z.1   = (~k.16⊕~r0.17⊕h((~r0.17⊕x.30)))
  */

rule (modulo E) accepttag:
   [ TagState1( ~k, ~r1, r0 ), In( h((~k⊕r0⊕h((~k⊕~r1⊕r0)))) ) ]
  --[ Commit( <'T', 'R', ~k, r0, ~r1> ), FinTag( ) ]->
   [ ]

  /*
  rule (modulo AC) accepttag:
     [ TagState1( ~k, ~r1, r0 ), In( h(z) ) ]
    --[ Commit( <'T', 'R', ~k, r0, ~r1> ), FinTag( ) ]->
     [ ]
    variants (modulo AC)
     1. ~k    = ~k.6
        ~r1   = ~k.6
        r0    = zero
        z     = (~k.6⊕h(zero))
    
     2. ~k    = ~k.7
        ~r1   = ~r1.8
        r0    = ~k.7
        z     = h(~r1.8)
    
     3. ~k    = ~k.7
        ~r1   = ~r1.8
        r0    = ~r1.8
        z     = (~k.7⊕~r1.8⊕h(~k.7))
    
     4. ~k    = ~k.7
        ~r1   = ~r1.8
        r0    = zero
        z     = (~k.7⊕h((~k.7⊕~r1.8)))
    
     5. ~k    = ~k.7
        ~r1   = ~r1.8
        r0    = (~k.7⊕~r1.8)
        z     = (~r1.8⊕h(zero))
    
     6. ~k    = ~k.8
        ~r1   = ~k.8
        r0    = r0.10
        z     = (~k.8⊕r0.10⊕h(r0.10))
    
     7. ~k    = ~k.8
        ~r1   = ~r1.9
        r0    = r0.10
        z     = (~k.8⊕r0.10⊕h((~k.8⊕~r1.9⊕r0.10)))
    
     8. ~k    = ~k.13
        ~r1   = ~r1.14
        r0    = (~r1.14⊕x.24)
        z     = (~k.13⊕~r1.14⊕x.24⊕h((~k.13⊕x.24)))
    
     9. ~k    = ~k.14
        ~r1   = ~r1.15
        r0    = (~k.14⊕~r1.15⊕x.26)
        z     = (~r1.15⊕x.26⊕h(x.26))
    
    10. ~k    = ~k.14
        ~r1   = ~r1.15
        r0    = (~k.14⊕x.26)
        z     = (x.26⊕h((~r1.15⊕x.26)))
  */

lemma executable:
  exists-trace
  "(∃ #i. FinTag( ) @ #i) ∧
   (∀ x #i1 #i2.
     ((OnlyOnce( x ) @ #i1) ∧ (OnlyOnce( x ) @ #i2)) ⇒ (#i1 = #i2))"
/*
guarded formula characterizing all satisfying traces:
"(∃ #i. (FinTag( ) @ #i)) ∧
 (∀ x #i1 #i2. (OnlyOnce( x ) @ #i1) ∧ (OnlyOnce( x ) @ #i2) ⇒ #i1 = #i2)"
*/
simplify
solve( TagState1( ~k, ~r1, r0 ) ▶₀ #i )
  case tag1
  solve( splitEqs(0) )
    case split_case_5
    solve( !KU( h((~k⊕r0⊕h((~k⊕~r1⊕r0)))) ) @ #vk )
      case acceptreader
      solve( !KU( ~r1 ) @ #vk.3 )
        case tag1
        solve( !KU( ~r0 ) @ #vk.2 )
          case initiatereader
          solve( !KU( h((~k⊕~r0⊕~r1)) ) @ #vk.4 )
            case tag1
            solve( splitEqs(5) )
              case split_case_1
              SOLVED // trace found
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma helpingSecrecy [reuse]:
  all-traces "∀ k #i. (Create( k ) @ #i) ⇒ (¬(∃ #j. K( k ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ k #i. (Create( k ) @ #i) ∧ ∃ #j. (K( k ) @ #j)"
*/
simplify
by solve( !KU( ~k ) @ #vk )

lemma noninjectiveagreementTAG [use_induction]:
  all-traces
  "∀ t #i.
    (Commit( <'T', 'R', t> ) @ #i) ⇒ (∃ #j. Running( <'T', 'R', t> ) @ #j)"
/*
guarded formula characterizing all counter-examples:
"∃ t #i.
  (Commit( <'T', 'R', t> ) @ #i)
 ∧
  ∀ #j. (Running( <'T', 'R', t> ) @ #j) ⇒ ⊥"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (last(#i))  ∥
         (∃ #j. (Running( <'T', 'R', t> ) @ #j) ∧ ¬(last(#j))) )
    case case_1
    solve( Commit( <'T', 'R', t> ) @ #i )
      case accepttag
      solve( TagState1( ~k, ~r1, r0 ) ▶₀ #i )
        case tag1
        solve( splitEqs(0) )
          case split_case_1
          by contradiction /* from formulas */
        next
          case split_case_2
          by contradiction /* cyclic */
        next
          case split_case_3
          solve( !KU( h((~k⊕h((~k⊕~r1)))) ) @ #vk )
            case c_h
            solve( !KU( (~k⊕h((~k⊕~r1))) ) @ #vk.2 )
              case c_xor
              by solve( !KU( ~k ) @ #vk.4 )
            next
              case coerce
              solve( !KD( (~k⊕h((~k⊕~r1))) ) ▶₀ #vk.1 )
                case acceptreader
                by solve( (#vl, 0) ~~> (#vk.1, 0) )
              next
                case initiatereader
                by contradiction /* impossible chain */
              next
                case tag1
                solve( (#vl, 0) ~~> (#vk.1, 0) )
                  case d_0_fst
                  by contradiction /* impossible chain */
                next
                  case d_0_snd
                  by solve( (#vr.3, 0) ~~> (#vk.1, 0) )
                qed
              qed
            qed
          next
            case tag1
            solve( !KU( (x⊕~x.1) ) @ #vk.2 )
              case c_xor
              solve( !KU( ~x ) @ #vk.3 )
                case fresh
                by solve( splitEqs(3) )
              next
                case initiatereader
                by solve( splitEqs(3) )
              next
                case tag1
                solve( splitEqs(3) )
                  case split
                  by contradiction /* cyclic */
                qed
              qed
            next
              case coerce
              solve( !KD( (x⊕~x.1) ) ▶₀ #vk.1 )
                case acceptreader
                by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
              next
                case initiatereader
                by contradiction /* impossible chain */
              next
                case tag1
                solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                  case d_0_fst
                  by contradiction /* impossible chain */
                next
                  case d_0_snd
                  by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                qed
              qed
            qed
          qed
        next
          case split_case_4
          solve( !KU( h((~r1⊕h(zero))) ) @ #vk )
            case c_h
            solve( !KU( (~k⊕~r1) ) @ #vk.1 )
              case c_xor
              by contradiction /* cyclic */
            next
              case coerce
              solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 )
                case acceptreader
                by solve( (#vl, 0) ~~> (#vk.1, 0) )
              next
                case initiatereader
                by contradiction /* impossible chain */
              next
                case tag1
                solve( (#vl, 0) ~~> (#vk.1, 0) )
                  case d_0_fst
                  by contradiction /* impossible chain */
                next
                  case d_0_snd
                  by solve( (#vr.3, 0) ~~> (#vk.1, 0) )
                qed
              qed
            qed
          next
            case tag1
            solve( !KU( (~k⊕~r1) ) @ #vk.1 )
              case c_xor
              by contradiction /* cyclic */
            next
              case coerce
              solve( !KD( (~k⊕~r1) ) ▶₀ #vk.1 )
                case acceptreader
                by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
              next
                case initiatereader
                by contradiction /* impossible chain */
              next
                case tag1
                solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                  case d_0_fst
                  by contradiction /* impossible chain */
                next
                  case d_0_snd
                  by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                qed
              qed
            qed
          qed
        next
          case split_case_5
          solve( !KU( h((~k⊕r0⊕h((~k⊕~r1⊕r0)))) ) @ #vk )
            case acceptreader
            solve( !KU( ~r0 ) @ #vk.1 )
              case fresh
              by solve( splitEqs(3) )
            next
              case initiatereader
              solve( splitEqs(3) )
                case split
                by contradiction /* from formulas */
              qed
            next
              case tag1
              by solve( splitEqs(3) )
            qed
          next
            case c_h
            solve( !KU( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) @ #vk.2 )
              case c_xor_case_1
              solve( !KU( (~k⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                case c_xor
                by solve( !KU( ~k ) @ #vk.5 )
              next
                case coerce
                solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                  case acceptreader
                  by solve( (#vl, 0) ~~> (#vk.2, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl, 0) ~~> (#vk.2, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.3, 0) ~~> (#vk.2, 0) )
                  qed
                qed
              qed
            next
              case c_xor_case_2
              by solve( !KU( ~k ) @ #vk.4 )
            next
              case c_xor_case_3
              solve( !KU( (~k⊕r0) ) @ #vk.4 )
                case c_xor
                by solve( !KU( ~k ) @ #vk.5 )
              next
                case coerce
                solve( !KD( (~k⊕r0) ) ▶₀ #vk.2 )
                  case acceptreader
                  by solve( (#vl, 0) ~~> (#vk.2, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl, 0) ~~> (#vk.2, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.3, 0) ~~> (#vk.2, 0) )
                  qed
                qed
              qed
            next
              case coerce
              solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 )
                case acceptreader
                by solve( (#vl, 0) ~~> (#vk.1, 0) )
              next
                case initiatereader
                by contradiction /* impossible chain */
              next
                case tag1
                solve( (#vl, 0) ~~> (#vk.1, 0) )
                  case d_0_fst
                  by contradiction /* impossible chain */
                next
                  case d_0_snd
                  by solve( (#vr.3, 0) ~~> (#vk.1, 0) )
                qed
              qed
            qed
          next
            case tag1
            solve( splitEqs(3) )
              case split_case_01
              solve( !KU( h((~k⊕~r0⊕~r1)) ) @ #vk.2 )
                case c_h
                solve( !KU( (~k⊕~r0⊕~r1) ) @ #vk.3 )
                  case c_xor_case_1
                  by contradiction /* cyclic */
                next
                  case c_xor_case_2
                  by solve( !KU( ~k ) @ #vk.5 )
                next
                  case c_xor_case_3
                  by contradiction /* cyclic */
                next
                  case coerce
                  solve( !KD( (~k⊕~r0⊕~r1) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.5, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case tag1
                solve( splitEqs(5) )
                  case split_case_1
                  by contradiction /* cyclic */
                next
                  case split_case_2
                  solve( !KU( (~k⊕~r0⊕~r1⊕~k.1⊕~r1.1) ) @ #vk.3 )
                    case c_xor_case_01
                    by solve( !KU( ~k.1 ) @ #vk.5 )
                  next
                    case c_xor_case_02
                    by contradiction /* cyclic */
                  next
                    case c_xor_case_03
                    solve( !KU( (~k⊕~r0⊕~r1.1) ) @ #vk.4 )
                      case c_xor_case_1
                      by contradiction /* cyclic */
                    next
                      case c_xor_case_2
                      by solve( !KU( ~k ) @ #vk.7 )
                    next
                      case c_xor_case_3
                      by contradiction /* cyclic */
                    next
                      case coerce
                      solve( !KD( (~k⊕~r0⊕~r1.1) ) ▶₀ #vk.3 )
                        case acceptreader
                        by solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.8, 0) ~~> (#vk.3, 0) )
                        qed
                      qed
                    qed
                  next
                    case c_xor_case_04
                    by contradiction /* cyclic */
                  next
                    case c_xor_case_05
                    solve( !KU( (~k⊕~r1⊕~r1.1) ) @ #vk.4 )
                      case c_xor_case_1
                      by contradiction /* cyclic */
                    next
                      case c_xor_case_2
                      by solve( !KU( ~k ) @ #vk.7 )
                    next
                      case c_xor_case_3
                      by contradiction /* cyclic */
                    next
                      case coerce
                      solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.3 )
                        case acceptreader
                        by solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.8, 0) ~~> (#vk.3, 0) )
                        qed
                      qed
                    qed
                  next
                    case c_xor_case_06
                    solve( !KU( (~k⊕~k.1⊕~r1.1) ) @ #vk.4 )
                      case c_xor_case_1
                      by solve( !KU( ~k.1 ) @ #vk.7 )
                    next
                      case c_xor_case_2
                      by solve( !KU( ~k ) @ #vk.7 )
                    next
                      case c_xor_case_3
                      by contradiction /* cyclic */
                    next
                      case coerce
                      solve( !KD( (~k⊕~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                        case acceptreader
                        by solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.8, 0) ~~> (#vk.3, 0) )
                        qed
                      qed
                    qed
                  next
                    case c_xor_case_07
                    solve( !KU( (~k⊕~r1.1) ) @ #vk.4 )
                      case c_xor
                      by contradiction /* cyclic */
                    next
                      case coerce
                      solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 )
                        case acceptreader
                        by solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.8, 0) ~~> (#vk.3, 0) )
                        qed
                      qed
                    qed
                  next
                    case c_xor_case_08
                    by solve( !KU( ~k ) @ #vk.5 )
                  next
                    case c_xor_case_09
                    solve( !KU( (~r0⊕~r1⊕~r1.1) ) @ #vk.4 )
                      case c_xor_case_1
                      by contradiction /* cyclic */
                    next
                      case c_xor_case_2
                      by contradiction /* cyclic */
                    next
                      case c_xor_case_3
                      by contradiction /* cyclic */
                    next
                      case coerce
                      solve( !KD( (~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.3 )
                        case acceptreader
                        by solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.8, 0) ~~> (#vk.3, 0) )
                        qed
                      qed
                    qed
                  next
                    case c_xor_case_10
                    solve( !KU( (~r0⊕~k.1⊕~r1.1) ) @ #vk.4 )
                      case c_xor_case_1
                      by solve( !KU( ~k.1 ) @ #vk.7 )
                    next
                      case c_xor_case_2
                      by contradiction /* cyclic */
                    next
                      case c_xor_case_3
                      by contradiction /* cyclic */
                    next
                      case coerce
                      solve( !KD( (~r0⊕~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                        case acceptreader
                        by solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.8, 0) ~~> (#vk.3, 0) )
                        qed
                      qed
                    qed
                  next
                    case c_xor_case_11
                    solve( !KU( (~r0⊕~r1.1) ) @ #vk.4 )
                      case c_xor
                      by contradiction /* cyclic */
                    next
                      case coerce
                      solve( !KD( (~r0⊕~r1.1) ) ▶₀ #vk.3 )
                        case acceptreader
                        by solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.8, 0) ~~> (#vk.3, 0) )
                        qed
                      qed
                    qed
                  next
                    case c_xor_case_12
                    solve( !KU( (~r1⊕~k.1⊕~r1.1) ) @ #vk.4 )
                      case c_xor_case_1
                      by solve( !KU( ~k.1 ) @ #vk.7 )
                    next
                      case c_xor_case_2
                      by contradiction /* cyclic */
                    next
                      case c_xor_case_3
                      by contradiction /* cyclic */
                    next
                      case coerce
                      solve( !KD( (~r1⊕~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                        case acceptreader
                        by solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.8, 0) ~~> (#vk.3, 0) )
                        qed
                      qed
                    qed
                  next
                    case c_xor_case_13
                    solve( !KU( (~r1⊕~r1.1) ) @ #vk.4 )
                      case c_xor
                      by contradiction /* cyclic */
                    next
                      case coerce
                      solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.3 )
                        case acceptreader
                        by solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.8, 0) ~~> (#vk.3, 0) )
                        qed
                      qed
                    qed
                  next
                    case c_xor_case_14
                    solve( !KU( (~k.1⊕~r1.1) ) @ #vk.4 )
                      case c_xor
                      by contradiction /* cyclic */
                    next
                      case coerce
                      solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                        case acceptreader
                        by solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.8, 0) ~~> (#vk.3, 0) )
                        qed
                      qed
                    qed
                  next
                    case c_xor_case_15
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~k⊕~r0⊕~r1⊕~k.1⊕~r1.1) ) ▶₀ #vk.2 )
                      case acceptreader
                      by solve( (#vl.2, 0) ~~> (#vk.2, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.2, 0) ~~> (#vk.2, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.8, 0) ~~> (#vk.2, 0) )
                      qed
                    qed
                  qed
                next
                  case split_case_3
                  solve( !KU( (~r0⊕~r1⊕~r1.1) ) @ #vk.3 )
                    case c_xor_case_1
                    by contradiction /* cyclic */
                  next
                    case c_xor_case_2
                    by contradiction /* cyclic */
                  next
                    case c_xor_case_3
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~r0⊕~r1⊕~r1.1) ) ▶₀ #vk.2 )
                      case acceptreader
                      by solve( (#vl.2, 0) ~~> (#vk.2, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.2, 0) ~~> (#vk.2, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.7, 0) ~~> (#vk.2, 0) )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case split_case_02
              solve( !KU( (~k.1⊕~r1.1) ) @ #vk.1 )
                case c_xor
                by solve( !KU( ~k.1 ) @ #vk.4 )
              next
                case coerce
                solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.1 )
                  case acceptreader
                  by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            next
              case split_case_03
              solve( !KU( (x⊕~r1.1) ) @ #vk.1 )
                case c_xor
                solve( !KU( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) @ #vk.2 )
                  case c_xor
                  solve( !KU( h((~k⊕~r1⊕x⊕~r1.1)) ) @ #vk.5 )
                    case c_h
                    solve( !KU( (~k⊕~r1⊕x⊕~r1.1) ) @ #vk.6 )
                      case c_xor_case_1
                      solve( !KU( (~k⊕~r1⊕~r1.1) ) @ #vk.7 )
                        case c_xor_case_1
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_2
                        by solve( !KU( ~k ) @ #vk.9 )
                      next
                        case c_xor_case_3
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.5 )
                          case acceptreader
                          by solve( (#vl.1, 0) ~~> (#vk.5, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.1, 0) ~~> (#vk.5, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.5, 0) ~~> (#vk.5, 0) )
                          qed
                        qed
                      qed
                    next
                      case c_xor_case_2
                      by contradiction /* cyclic */
                    next
                      case c_xor_case_3
                      solve( !KU( (~k⊕~r1.1) ) @ #vk.7 )
                        case c_xor
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.5 )
                          case acceptreader
                          by solve( (#vl.1, 0) ~~> (#vk.5, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.1, 0) ~~> (#vk.5, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.5, 0) ~~> (#vk.5, 0) )
                          qed
                        qed
                      qed
                    next
                      case c_xor_case_4
                      by solve( !KU( ~k ) @ #vk.8 )
                    next
                      case c_xor_case_5
                      solve( !KU( (~r1⊕~r1.1) ) @ #vk.7 )
                        case c_xor
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.5 )
                          case acceptreader
                          by solve( (#vl.1, 0) ~~> (#vk.5, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.1, 0) ~~> (#vk.5, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.5, 0) ~~> (#vk.5, 0) )
                          qed
                        qed
                      qed
                    next
                      case c_xor_case_6
                      by contradiction /* cyclic */
                    next
                      case c_xor_case_7
                      by contradiction /* cyclic */
                    next
                      case coerce
                      solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.4 )
                        case acceptreader
                        by solve( (#vl.1, 0) ~~> (#vk.4, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.1, 0) ~~> (#vk.4, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.5, 0) ~~> (#vk.4, 0) )
                        qed
                      qed
                    qed
                  next
                    case tag1
                    solve( splitEqs(5) )
                      case split_case_01
                      by contradiction /* cyclic */
                    next
                      case split_case_02
                      by contradiction /* cyclic */
                    next
                      case split_case_03
                      solve( !KU( (~r1⊕~r1.1) ) @ #vk.6 )
                        case c_xor
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.4 )
                          case acceptreader
                          by solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.7, 0) ~~> (#vk.4, 0) )
                          qed
                        qed
                      qed
                    next
                      case split_case_04
                      solve( !KU( (~r1⊕x⊕~r1.1⊕~r1.2) ) @ #vk.6 )
                        case c_xor_case_1
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_2
                        solve( !KU( (~r1⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.7, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_3
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_4
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_5
                        solve( !KU( (x⊕~r1.2) ) @ #vk.7 )
                          case c_xor
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.7, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_6
                        solve( !KU( (~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.7, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_7
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.4 )
                          case acceptreader
                          by solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.7, 0) ~~> (#vk.4, 0) )
                          qed
                        qed
                      qed
                    next
                      case split_case_05
                      by solve( !KU( ~x ) @ #vk.5 )
                    next
                      case split_case_06
                      solve( !KU( (~k⊕~r1⊕~k.1⊕~r1.1) ) @ #vk.6 )
                        case c_xor_case_1
                        by solve( !KU( ~k.1 ) @ #vk.8 )
                      next
                        case c_xor_case_2
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_3
                        solve( !KU( (~k⊕~r1.1) ) @ #vk.7 )
                          case c_xor
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_4
                        by solve( !KU( ~k ) @ #vk.8 )
                      next
                        case c_xor_case_5
                        solve( !KU( (~r1⊕~r1.1) ) @ #vk.7 )
                          case c_xor
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_6
                        solve( !KU( (~k.1⊕~r1.1) ) @ #vk.7 )
                          case c_xor
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_7
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~k⊕~r1⊕~k.1⊕~r1.1) ) ▶₀ #vk.4 )
                          case acceptreader
                          by solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.8, 0) ~~> (#vk.4, 0) )
                          qed
                        qed
                      qed
                    next
                      case split_case_07
                      solve( !KU( (~k⊕~r1⊕~r1.1) ) @ #vk.6 )
                        case c_xor_case_1
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_2
                        by solve( !KU( ~k ) @ #vk.8 )
                      next
                        case c_xor_case_3
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.4 )
                          case acceptreader
                          by solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.8, 0) ~~> (#vk.4, 0) )
                          qed
                        qed
                      qed
                    next
                      case split_case_08
                      by contradiction /* cyclic */
                    next
                      case split_case_09
                      solve( !KU( (~r1⊕x⊕~r1.1) ) @ #vk.6 )
                        case c_xor_case_1
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (~r1⊕~r1.1) ) @ #vk.7 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.7, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.7, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_2
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_3
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~r1⊕x⊕~r1.1) ) ▶₀ #vk.4 )
                          case acceptreader
                          by solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.7, 0) ~~> (#vk.4, 0) )
                          qed
                        qed
                      qed
                    next
                      case split_case_10
                      solve( !KU( (~k⊕~r1⊕x⊕~r1.1) ) @ #vk.6 )
                        case c_xor_case_1
                        solve( !KU( (x⊕~k.1⊕~r1.2) ) @ #vk.6 )
                          case c_xor_case_1
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_2
                          solve( !KU( (~k⊕~r1⊕~r1.1) ) @ #vk.7 )
                            case c_xor_case_1
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k ) @ #vk.11 )
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_3
                          solve( !KU( (~k⊕~r1⊕~r1.1) ) @ #vk.7 )
                            case c_xor_case_1
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k ) @ #vk.12 )
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_2
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_3
                        solve( !KU( (x⊕~k.1⊕~r1.2) ) @ #vk.6 )
                          case c_xor_case_1
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_2
                          solve( !KU( (~k⊕~r1.1) ) @ #vk.7 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_3
                          solve( !KU( (~k⊕~r1.1) ) @ #vk.7 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_4
                        by solve( !KU( ~k ) @ #vk.8 )
                      next
                        case c_xor_case_5
                        solve( !KU( (x⊕~k.1⊕~r1.2) ) @ #vk.6 )
                          case c_xor_case_1
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_2
                          solve( !KU( (~r1⊕~r1.1) ) @ #vk.7 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_3
                          solve( !KU( (~r1⊕~r1.1) ) @ #vk.7 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_6
                        solve( !KU( (x⊕~k.1⊕~r1.2) ) @ #vk.6 )
                          case c_xor_case_1
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_2
                          solve( !KU( (x⊕~r1.1) ) @ #vk.7 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_3
                          solve( !KU( (x⊕~r1.1) ) @ #vk.7 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_7
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.4 )
                          case acceptreader
                          by solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.8, 0) ~~> (#vk.4, 0) )
                          qed
                        qed
                      qed
                    next
                      case split_case_11
                      solve( !KU( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) @ #vk.6 )
                        case c_xor_case_01
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_02
                        solve( !KU( (x⊕~k.1) ) @ #vk.6 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_03
                        solve( !KU( (x⊕~k.1) ) @ #vk.6 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_04
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_05
                        solve( !KU( (x⊕~k.1) ) @ #vk.6 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_06
                        solve( !KU( (x⊕~k.1) ) @ #vk.6 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_07
                        solve( !KU( (x⊕~k.1) ) @ #vk.6 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_08
                        by solve( !KU( ~k ) @ #vk.8 )
                      next
                        case c_xor_case_09
                        solve( !KU( (x⊕~k.1) ) @ #vk.6 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_10
                        solve( !KU( (x⊕~k.1) ) @ #vk.6 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_11
                        solve( !KU( (x⊕~k.1) ) @ #vk.6 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_12
                        solve( !KU( (x⊕~k.1) ) @ #vk.6 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_13
                        solve( !KU( (x⊕~k.1) ) @ #vk.6 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_14
                        solve( !KU( (x⊕~k.1) ) @ #vk.6 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_15
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~k⊕~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.4 )
                          case acceptreader
                          by solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.8, 0) ~~> (#vk.4, 0) )
                          qed
                        qed
                      qed
                    next
                      case split_case_12
                      solve( !KU( (~k⊕~r1⊕x⊕~k.1⊕~r1.1) ) @ #vk.6 )
                        case c_xor_case_01
                        by solve( !KU( ~k.1 ) @ #vk.8 )
                      next
                        case c_xor_case_02
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (~k⊕~r1⊕~k.1⊕~r1.1) ) @ #vk.7 )
                            case c_xor_case_1
                            by solve( !KU( ~k.1 ) @ #vk.11 )
                          next
                            case c_xor_case_2
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_3
                            solve( !KU( (~k⊕~r1.1) ) @ #vk.10 )
                              case c_xor
                              by contradiction /* cyclic */
                            next
                              case coerce
                              solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.7 )
                                case acceptreader
                                by solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                              next
                                case initiatereader
                                by contradiction /* impossible chain */
                              next
                                case tag1
                                solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                                  case d_0_fst
                                  by contradiction /* impossible chain */
                                next
                                  case d_0_snd
                                  by solve( (#vr.8, 0) ~~> (#vk.7, 0) )
                                qed
                              qed
                            qed
                          next
                            case c_xor_case_4
                            by solve( !KU( ~k ) @ #vk.11 )
                          next
                            case c_xor_case_5
                            solve( !KU( (~r1⊕~r1.1) ) @ #vk.10 )
                              case c_xor
                              by contradiction /* cyclic */
                            next
                              case coerce
                              solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.7 )
                                case acceptreader
                                by solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                              next
                                case initiatereader
                                by contradiction /* impossible chain */
                              next
                                case tag1
                                solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                                  case d_0_fst
                                  by contradiction /* impossible chain */
                                next
                                  case d_0_snd
                                  by solve( (#vr.8, 0) ~~> (#vk.7, 0) )
                                qed
                              qed
                            qed
                          next
                            case c_xor_case_6
                            solve( !KU( (~k.1⊕~r1.1) ) @ #vk.10 )
                              case c_xor
                              by contradiction /* cyclic */
                            next
                              case coerce
                              solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.7 )
                                case acceptreader
                                by solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                              next
                                case initiatereader
                                by contradiction /* impossible chain */
                              next
                                case tag1
                                solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                                  case d_0_fst
                                  by contradiction /* impossible chain */
                                next
                                  case d_0_snd
                                  by solve( (#vr.8, 0) ~~> (#vk.7, 0) )
                                qed
                              qed
                            qed
                          next
                            case c_xor_case_7
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1⊕~k.1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_03
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (~k⊕~r1⊕~r1.1) ) @ #vk.7 )
                            case c_xor_case_1
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k ) @ #vk.12 )
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_04
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_05
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (~k⊕x⊕~r1.1) ) @ #vk.7 )
                            case c_xor_case_1
                            solve( !KU( (~r1⊕~k.1) ) @ #vk.8 )
                              case c_xor
                              by contradiction /* cyclic */
                            next
                              case coerce
                              solve( !KD( (~r1⊕~k.1) ) ▶₀ #vk.7 )
                                case acceptreader
                                by solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                              next
                                case initiatereader
                                by contradiction /* impossible chain */
                              next
                                case tag1
                                solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                                  case d_0_fst
                                  by contradiction /* impossible chain */
                                next
                                  case d_0_snd
                                  by solve( (#vr.8, 0) ~~> (#vk.7, 0) )
                                qed
                              qed
                            qed
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k ) @ #vk.12 )
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕x⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_06
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (~k⊕~k.1⊕~r1.1) ) @ #vk.7 )
                            case c_xor_case_1
                            by solve( !KU( ~k.1 ) @ #vk.12 )
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k ) @ #vk.12 )
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~k.1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_07
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (~k⊕~r1.1) ) @ #vk.7 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_08
                        by solve( !KU( ~k ) @ #vk.8 )
                      next
                        case c_xor_case_09
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (~r1⊕x⊕~r1.1) ) @ #vk.7 )
                            case c_xor_case_1
                            solve( !KU( (~k⊕~k.1) ) @ #vk.8 )
                              case c_xor
                              by solve( !KU( ~k.1 ) @ #vk.12 )
                            next
                              case coerce
                              solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.7 )
                                case acceptreader
                                by solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                              next
                                case initiatereader
                                by contradiction /* impossible chain */
                              next
                                case tag1
                                solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                                  case d_0_fst
                                  by contradiction /* impossible chain */
                                next
                                  case d_0_snd
                                  by solve( (#vr.8, 0) ~~> (#vk.7, 0) )
                                qed
                              qed
                            qed
                          next
                            case c_xor_case_2
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕x⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_10
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (~r1⊕~k.1⊕~r1.1) ) @ #vk.7 )
                            case c_xor_case_1
                            by solve( !KU( ~k.1 ) @ #vk.12 )
                          next
                            case c_xor_case_2
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~k.1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_11
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (~r1⊕~r1.1) ) @ #vk.7 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_12
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (x⊕~k.1⊕~r1.1) ) @ #vk.7 )
                            case c_xor_case_1
                            by solve( !KU( ~k.1 ) @ #vk.12 )
                          next
                            case c_xor_case_2
                            solve( !KU( (~k⊕~r1) ) @ #vk.8 )
                              case c_xor
                              by contradiction /* cyclic */
                            next
                              case coerce
                              solve( !KD( (~k⊕~r1) ) ▶₀ #vk.7 )
                                case acceptreader
                                by solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                              next
                                case initiatereader
                                by contradiction /* impossible chain */
                              next
                                case tag1
                                solve( (#vl.2, 0) ~~> (#vk.7, 0) )
                                  case d_0_fst
                                  by contradiction /* impossible chain */
                                next
                                  case d_0_snd
                                  by solve( (#vr.8, 0) ~~> (#vk.7, 0) )
                                qed
                              qed
                            qed
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (x⊕~k.1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_13
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (x⊕~r1.1) ) @ #vk.7 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_14
                        solve( !KU( (x⊕~r1.2) ) @ #vk.6 )
                          case c_xor
                          solve( !KU( (~k.1⊕~r1.1) ) @ #vk.7 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_15
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~k⊕~r1⊕x⊕~k.1⊕~r1.1) ) ▶₀ #vk.4 )
                          case acceptreader
                          by solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.8, 0) ~~> (#vk.4, 0) )
                          qed
                        qed
                      qed
                    next
                      case split_case_13
                      solve( !KU( (~k⊕~r1⊕x⊕~k.1⊕~r1.1⊕~r1.2) ) @ #vk.6 )
                        case c_xor_case_01
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_02
                        by solve( !KU( ~k.1 ) @ #vk.8 )
                      next
                        case c_xor_case_03
                        solve( !KU( (~k⊕~r1⊕x⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          solve( !KU( (~k.1⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_2
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_3
                          solve( !KU( (~k.1⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_4
                          by solve( !KU( ~k ) @ #vk.10 )
                        next
                          case c_xor_case_5
                          solve( !KU( (~k.1⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_6
                          solve( !KU( (~k.1⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_7
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕~r1⊕x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_04
                        solve( !KU( (~k⊕~r1⊕~k.1⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_01
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_02
                          by solve( !KU( ~k.1 ) @ #vk.9 )
                        next
                          case c_xor_case_03
                          solve( !KU( (~k⊕~r1⊕~r1.2) ) @ #vk.8 )
                            case c_xor_case_1
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k ) @ #vk.11 )
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1⊕~r1.2) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_04
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_05
                          solve( !KU( (~k⊕~k.1⊕~r1.2) ) @ #vk.8 )
                            case c_xor_case_1
                            by solve( !KU( ~k.1 ) @ #vk.11 )
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k ) @ #vk.11 )
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~k.1⊕~r1.2) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_06
                          solve( !KU( (~k⊕~r1.1⊕~r1.2) ) @ #vk.8 )
                            case c_xor_case_1
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k ) @ #vk.11 )
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1.1⊕~r1.2) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_07
                          solve( !KU( (~k⊕~r1.2) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1.2) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_08
                          by solve( !KU( ~k ) @ #vk.9 )
                        next
                          case c_xor_case_09
                          solve( !KU( (~r1⊕~k.1⊕~r1.2) ) @ #vk.8 )
                            case c_xor_case_1
                            by solve( !KU( ~k.1 ) @ #vk.11 )
                          next
                            case c_xor_case_2
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~k.1⊕~r1.2) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_10
                          solve( !KU( (~r1⊕~r1.1⊕~r1.2) ) @ #vk.8 )
                            case c_xor_case_1
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_2
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_11
                          solve( !KU( (~r1⊕~r1.2) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_12
                          solve( !KU( (~k.1⊕~r1.1⊕~r1.2) ) @ #vk.8 )
                            case c_xor_case_1
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k.1 ) @ #vk.11 )
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k.1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_13
                          solve( !KU( (~k.1⊕~r1.2) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k.1⊕~r1.2) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_14
                          solve( !KU( (~r1.1⊕~r1.2) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_15
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕~r1⊕~k.1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_05
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_06
                        solve( !KU( (~k⊕~r1⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_3
                          solve( !KU( (x⊕~k.1) ) @ #vk.8 )
                            case c_xor
                            by solve( !KU( ~k.1 ) @ #vk.11 )
                          next
                            case coerce
                            solve( !KD( (x⊕~k.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_4
                          by solve( !KU( ~k ) @ #vk.10 )
                        next
                          case c_xor_case_5
                          solve( !KU( (x⊕~k.1) ) @ #vk.8 )
                            case c_xor
                            by solve( !KU( ~k.1 ) @ #vk.11 )
                          next
                            case coerce
                            solve( !KD( (x⊕~k.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_6
                          solve( !KU( (x⊕~k.1) ) @ #vk.8 )
                            case c_xor
                            by solve( !KU( ~k.1 ) @ #vk.11 )
                          next
                            case coerce
                            solve( !KD( (x⊕~k.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_7
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_07
                        solve( !KU( (~k⊕~r1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          by solve( !KU( ~k ) @ #vk.10 )
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕~r1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_08
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_09
                        solve( !KU( (~k⊕x⊕~k.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_2
                          solve( !KU( (~r1⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_3
                          solve( !KU( (~r1⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_4
                          by solve( !KU( ~k ) @ #vk.10 )
                        next
                          case c_xor_case_5
                          solve( !KU( (~r1⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_6
                          solve( !KU( (~r1⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_7
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕x⊕~k.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_10
                        solve( !KU( (~k⊕x⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          solve( !KU( (~r1⊕~k.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~k.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_4
                          by solve( !KU( ~k ) @ #vk.10 )
                        next
                          case c_xor_case_5
                          solve( !KU( (~r1⊕~k.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~k.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_6
                          solve( !KU( (~r1⊕~k.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~k.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_7
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_11
                        solve( !KU( (~k⊕x⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          solve( !KU( (~r1⊕~k.1⊕~r1.1) ) @ #vk.8 )
                            case c_xor_case_1
                            by solve( !KU( ~k.1 ) @ #vk.11 )
                          next
                            case c_xor_case_2
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕~k.1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_2
                          by solve( !KU( ~k ) @ #vk.10 )
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_12
                        solve( !KU( (~k⊕~k.1⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_3
                          solve( !KU( (~r1⊕x) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕x) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_4
                          by solve( !KU( ~k ) @ #vk.10 )
                        next
                          case c_xor_case_5
                          solve( !KU( (~r1⊕x) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕x) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_6
                          solve( !KU( (~r1⊕x) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~r1⊕x) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_7
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕~k.1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_13
                        solve( !KU( (~k⊕~k.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_2
                          by solve( !KU( ~k ) @ #vk.10 )
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕~k.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_14
                        solve( !KU( (~k⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          by solve( !KU( ~k ) @ #vk.10 )
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_15
                        solve( !KU( (~k⊕~r1.2) ) @ #vk.7 )
                          case c_xor
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_16
                        by solve( !KU( ~k ) @ #vk.8 )
                      next
                        case c_xor_case_17
                        solve( !KU( (~r1⊕x⊕~k.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_2
                          solve( !KU( (~k⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_3
                          solve( !KU( (~k⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_4
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_5
                          solve( !KU( (~k⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_6
                          solve( !KU( (~k⊕~r1.1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_7
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~r1⊕x⊕~k.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_18
                        solve( !KU( (~r1⊕x⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          solve( !KU( (~k⊕~k.1) ) @ #vk.8 )
                            case c_xor
                            by solve( !KU( ~k.1 ) @ #vk.10 )
                          next
                            case coerce
                            solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_4
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_5
                          solve( !KU( (~k⊕~k.1) ) @ #vk.8 )
                            case c_xor
                            by solve( !KU( ~k.1 ) @ #vk.11 )
                          next
                            case coerce
                            solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_6
                          solve( !KU( (~k⊕~k.1) ) @ #vk.8 )
                            case c_xor
                            by solve( !KU( ~k.1 ) @ #vk.11 )
                          next
                            case coerce
                            solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_7
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~r1⊕x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_19
                        solve( !KU( (~r1⊕x⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          solve( !KU( (~k⊕~k.1⊕~r1.1) ) @ #vk.8 )
                            case c_xor_case_1
                            by solve( !KU( ~k.1 ) @ #vk.11 )
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k ) @ #vk.11 )
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~k.1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_2
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~r1⊕x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_20
                        solve( !KU( (~r1⊕~k.1⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_3
                          solve( !KU( (~k⊕x) ) @ #vk.8 )
                            case c_xor
                            by solve( !KU( ~k ) @ #vk.11 )
                          next
                            case coerce
                            solve( !KD( (~k⊕x) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_4
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_5
                          solve( !KU( (~k⊕x) ) @ #vk.8 )
                            case c_xor
                            by solve( !KU( ~k ) @ #vk.11 )
                          next
                            case coerce
                            solve( !KD( (~k⊕x) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_6
                          solve( !KU( (~k⊕x) ) @ #vk.8 )
                            case c_xor
                            by solve( !KU( ~k ) @ #vk.11 )
                          next
                            case coerce
                            solve( !KD( (~k⊕x) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_7
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~r1⊕~k.1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_21
                        solve( !KU( (~r1⊕~k.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_2
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~r1⊕~k.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_22
                        solve( !KU( (~r1⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~r1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_23
                        solve( !KU( (~r1⊕~r1.2) ) @ #vk.7 )
                          case c_xor
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~r1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_24
                        solve( !KU( (x⊕~k.1⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_3
                          solve( !KU( (~k⊕~r1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_4
                          solve( !KU( (~k⊕~r1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_5
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_6
                          solve( !KU( (~k⊕~r1) ) @ #vk.8 )
                            case c_xor
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_7
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_25
                        solve( !KU( (x⊕~k.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_2
                          solve( !KU( (~k⊕~r1⊕~r1.1) ) @ #vk.8 )
                            case c_xor_case_1
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k ) @ #vk.11 )
                          next
                            case c_xor_case_3
                            by contradiction /* cyclic */
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1⊕~r1.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (x⊕~k.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_26
                        solve( !KU( (x⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          solve( !KU( (~k⊕~r1⊕~k.1) ) @ #vk.8 )
                            case c_xor_case_1
                            by contradiction /* cyclic */
                          next
                            case c_xor_case_2
                            by solve( !KU( ~k ) @ #vk.11 )
                          next
                            case c_xor_case_3
                            by solve( !KU( ~k.1 ) @ #vk.10 )
                          next
                            case coerce
                            solve( !KD( (~k⊕~r1⊕~k.1) ) ▶₀ #vk.6 )
                              case acceptreader
                              by solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                            next
                              case initiatereader
                              by contradiction /* impossible chain */
                            next
                              case tag1
                              solve( (#vl.2, 0) ~~> (#vk.6, 0) )
                                case d_0_fst
                                by contradiction /* impossible chain */
                              next
                                case d_0_snd
                                by solve( (#vr.8, 0) ~~> (#vk.6, 0) )
                              qed
                            qed
                          qed
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_27
                        solve( !KU( (x⊕~r1.2) ) @ #vk.7 )
                          case c_xor
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (x⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_28
                        solve( !KU( (~k.1⊕~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor_case_1
                          by contradiction /* cyclic */
                        next
                          case c_xor_case_2
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case c_xor_case_3
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k.1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_29
                        solve( !KU( (~k.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~k.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_30
                        solve( !KU( (~r1.1⊕~r1.2) ) @ #vk.7 )
                          case c_xor
                          by contradiction /* cyclic */
                        next
                          case coerce
                          solve( !KD( (~r1.1⊕~r1.2) ) ▶₀ #vk.5 )
                            case acceptreader
                            by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.8, 0) ~~> (#vk.5, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_31
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~k⊕~r1⊕x⊕~k.1⊕~r1.1⊕~r1.2) ) ▶₀ #vk.4 )
                          case acceptreader
                          by solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.8, 0) ~~> (#vk.4, 0) )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.5, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case coerce
                solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 )
                  case acceptreader
                  by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            next
              case split_case_04
              solve( !KU( (x⊕~k.1⊕~r1.1) ) @ #vk.1 )
                case c_xor_case_1
                by solve( !KU( ~k.1 ) @ #vk.4 )
              next
                case c_xor_case_2
                solve( !KU( (~k⊕x⊕h((~k⊕~r1⊕x⊕~k.1⊕~r1.1))) ) @ #vk.2 )
                  case c_xor_case_1
                  solve( !KU( (~k.1⊕~r1.1) ) @ #vk.3 )
                    case c_xor
                    by solve( !KU( ~k.1 ) @ #vk.7 )
                  next
                    case coerce
                    solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_2
                  by solve( !KU( ~k ) @ #vk.6 )
                next
                  case c_xor_case_3
                  solve( !KU( (~k.1⊕~r1.1) ) @ #vk.3 )
                    case c_xor
                    by solve( !KU( ~k.1 ) @ #vk.8 )
                  next
                    case coerce
                    solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (~k⊕x⊕h((~k⊕~r1⊕x⊕~k.1⊕~r1.1))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_3
                solve( !KU( (~k⊕x⊕h((~k⊕~r1⊕x⊕~k.1⊕~r1.1))) ) @ #vk.2 )
                  case c_xor_case_1
                  solve( !KU( (x⊕~k.1) ) @ #vk.4 )
                    case c_xor
                    by solve( !KU( ~k.1 ) @ #vk.7 )
                  next
                    case coerce
                    solve( !KD( (x⊕~k.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_2
                  by solve( !KU( ~k ) @ #vk.6 )
                next
                  case c_xor_case_3
                  solve( !KU( (x⊕~k.1) ) @ #vk.4 )
                    case c_xor
                    by solve( !KU( ~k.1 ) @ #vk.7 )
                  next
                    case coerce
                    solve( !KD( (x⊕~k.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (~k⊕x⊕h((~k⊕~r1⊕x⊕~k.1⊕~r1.1))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case coerce
                solve( !KD( (x⊕~k.1⊕~r1.1) ) ▶₀ #vk.1 )
                  case acceptreader
                  by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            next
              case split_case_05
              solve( !KU( (~k⊕r0⊕~k.1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.2 )
                case c_xor_case_01
                by contradiction /* cyclic */
              next
                case c_xor_case_02
                by solve( !KU( ~k.1 ) @ #vk.4 )
              next
                case c_xor_case_03
                solve( !KU( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor_case_1
                  solve( !KU( (~k.1⊕~r1.1) ) @ #vk.4 )
                    case c_xor
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_2
                  by solve( !KU( ~k ) @ #vk.6 )
                next
                  case c_xor_case_3
                  solve( !KU( (~k.1⊕~r1.1) ) @ #vk.4 )
                    case c_xor
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (~k⊕r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_04
                solve( !KU( (~k⊕~k.1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor_case_1
                  by contradiction /* cyclic */
                next
                  case c_xor_case_2
                  by solve( !KU( ~k.1 ) @ #vk.5 )
                next
                  case c_xor_case_3
                  solve( !KU( (~k⊕h((~k⊕~r1⊕r0))) ) @ #vk.4 )
                    case c_xor
                    by solve( !KU( ~k ) @ #vk.7 )
                  next
                    case coerce
                    solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_4
                  by solve( !KU( ~k ) @ #vk.5 )
                next
                  case c_xor_case_5
                  solve( !KU( (~k.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.4 )
                    case c_xor
                    by solve( !KU( ~k.1 ) @ #vk.7 )
                  next
                    case coerce
                    solve( !KD( (~k.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_6
                  solve( !KU( (~r1.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.4 )
                    case c_xor
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_7
                  solve( !KU( (~k⊕~k.1⊕~r1.1) ) @ #vk.5 )
                    case c_xor_case_1
                    by solve( !KU( ~k.1 ) @ #vk.7 )
                  next
                    case c_xor_case_2
                    by solve( !KU( ~k ) @ #vk.7 )
                  next
                    case c_xor_case_3
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~k⊕~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (~k⊕~k.1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_05
                solve( !KU( (~k⊕~k.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor_case_1
                  by solve( !KU( ~k.1 ) @ #vk.6 )
                next
                  case c_xor_case_2
                  by solve( !KU( ~k ) @ #vk.6 )
                next
                  case c_xor_case_3
                  solve( !KU( (r0⊕~r1.1) ) @ #vk.4 )
                    case c_xor
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (~k⊕~k.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_06
                solve( !KU( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor_case_1
                  by contradiction /* cyclic */
                next
                  case c_xor_case_2
                  by solve( !KU( ~k ) @ #vk.6 )
                next
                  case c_xor_case_3
                  solve( !KU( (r0⊕~k.1) ) @ #vk.4 )
                    case c_xor
                    by solve( !KU( ~k.1 ) @ #vk.7 )
                  next
                    case coerce
                    solve( !KD( (r0⊕~k.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (~k⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_07
                solve( !KU( (~k⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor
                  by solve( !KU( ~k ) @ #vk.6 )
                next
                  case coerce
                  solve( !KD( (~k⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_08
                by solve( !KU( ~k ) @ #vk.4 )
              next
                case c_xor_case_09
                solve( !KU( (r0⊕~k.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor_case_1
                  by solve( !KU( ~k.1 ) @ #vk.6 )
                next
                  case c_xor_case_2
                  solve( !KU( (~k⊕~r1.1) ) @ #vk.4 )
                    case c_xor
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_3
                  solve( !KU( (~k⊕~r1.1) ) @ #vk.4 )
                    case c_xor
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (r0⊕~k.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_10
                solve( !KU( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor_case_1
                  by contradiction /* cyclic */
                next
                  case c_xor_case_2
                  solve( !KU( (~k⊕~k.1) ) @ #vk.4 )
                    case c_xor
                    by solve( !KU( ~k.1 ) @ #vk.6 )
                  next
                    case coerce
                    solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_3
                  solve( !KU( (~k⊕~k.1) ) @ #vk.4 )
                    case c_xor
                    by solve( !KU( ~k.1 ) @ #vk.7 )
                  next
                    case coerce
                    solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_11
                solve( !KU( (r0⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor
                  solve( !KU( (~k⊕~k.1⊕~r1.1) ) @ #vk.4 )
                    case c_xor_case_1
                    by solve( !KU( ~k.1 ) @ #vk.7 )
                  next
                    case c_xor_case_2
                    by solve( !KU( ~k ) @ #vk.7 )
                  next
                    case c_xor_case_3
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~k⊕~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (r0⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_12
                solve( !KU( (~k.1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor_case_1
                  by contradiction /* cyclic */
                next
                  case c_xor_case_2
                  by solve( !KU( ~k.1 ) @ #vk.6 )
                next
                  case c_xor_case_3
                  solve( !KU( (~k⊕r0) ) @ #vk.4 )
                    case c_xor
                    by solve( !KU( ~k ) @ #vk.7 )
                  next
                    case coerce
                    solve( !KD( (~k⊕r0) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (~k.1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_13
                solve( !KU( (~k.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor
                  by solve( !KU( ~k.1 ) @ #vk.6 )
                next
                  case coerce
                  solve( !KD( (~k.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_14
                solve( !KU( (~r1.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor
                  by contradiction /* cyclic */
                next
                  case coerce
                  solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_15
                solve( !KU( (~k⊕r0⊕~k.1⊕~r1.1) ) @ #vk.4 )
                  case c_xor_case_1
                  by solve( !KU( ~k.1 ) @ #vk.6 )
                next
                  case c_xor_case_2
                  solve( !KU( (~k⊕~k.1⊕~r1.1) ) @ #vk.5 )
                    case c_xor_case_1
                    by solve( !KU( ~k.1 ) @ #vk.7 )
                  next
                    case c_xor_case_2
                    by solve( !KU( ~k ) @ #vk.7 )
                  next
                    case c_xor_case_3
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~k⊕~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_3
                  solve( !KU( (~k⊕~r1.1) ) @ #vk.5 )
                    case c_xor
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~k⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_4
                  by solve( !KU( ~k ) @ #vk.6 )
                next
                  case c_xor_case_5
                  solve( !KU( (r0⊕~r1.1) ) @ #vk.5 )
                    case c_xor
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_6
                  solve( !KU( (~k.1⊕~r1.1) ) @ #vk.5 )
                    case c_xor
                    by contradiction /* cyclic */
                  next
                    case coerce
                    solve( !KD( (~k.1⊕~r1.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_7
                  by contradiction /* cyclic */
                next
                  case coerce
                  solve( !KD( (~k⊕r0⊕~k.1⊕~r1.1) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case coerce
                solve( !KD( (~k⊕r0⊕~k.1⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 )
                  case acceptreader
                  by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            next
              case split_case_06
              by contradiction /* from formulas */
            next
              case split_case_07
              solve( !KU( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.2 )
                case c_xor_case_1
                by contradiction /* cyclic */
              next
                case c_xor_case_2
                solve( !KU( (~r1.1⊕h((~k⊕~r1⊕r0))) ) @ #vk.3 )
                  case c_xor
                  by contradiction /* cyclic */
                next
                  case coerce
                  solve( !KD( (~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.5, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_3
                solve( !KU( (r0⊕~r1.1) ) @ #vk.4 )
                  case c_xor
                  by contradiction /* cyclic */
                next
                  case coerce
                  solve( !KD( (r0⊕~r1.1) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.5, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case coerce
                solve( !KD( (r0⊕~r1.1⊕h((~k⊕~r1⊕r0))) ) ▶₀ #vk.1 )
                  case acceptreader
                  by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            next
              case split_case_08
              solve( !KU( (~k⊕~k.1⊕h((~k⊕~r0⊕~r1))) ) @ #vk.2 )
                case c_xor_case_1
                by solve( !KU( ~k.1 ) @ #vk.4 )
              next
                case c_xor_case_2
                by solve( !KU( ~k ) @ #vk.4 )
              next
                case c_xor_case_3
                solve( !KU( h((~k⊕~r0⊕~r1)) ) @ #vk.3 )
                  case c_h
                  solve( !KU( (~k⊕~k.1) ) @ #vk.4 )
                    case c_xor
                    by solve( !KU( ~k.1 ) @ #vk.6 )
                  next
                    case coerce
                    solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case tag1
                  solve( !KU( (~k⊕~k.1) ) @ #vk.4 )
                    case c_xor
                    by solve( !KU( ~k.1 ) @ #vk.6 )
                  next
                    case coerce
                    solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.9, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                qed
              next
                case coerce
                solve( !KD( (~k⊕~k.1⊕h((~k⊕~r0⊕~r1))) ) ▶₀ #vk.1 )
                  case acceptreader
                  by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            next
              case split_case_09
              solve( !KU( (x⊕~k.1) ) @ #vk.1 )
                case c_xor
                by solve( !KU( ~k.1 ) @ #vk.3 )
              next
                case coerce
                solve( !KD( (x⊕~k.1) ) ▶₀ #vk.1 )
                  case acceptreader
                  by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            next
              case split_case_10
              solve( !KU( (x⊕~r1.1) ) @ #vk.1 )
                case c_xor
                solve( !KU( (~k⊕x⊕~k.1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) @ #vk.2 )
                  case c_xor_case_1
                  by solve( !KU( ~k.1 ) @ #vk.6 )
                next
                  case c_xor_case_2
                  solve( !KU( (~k⊕~k.1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) @ #vk.5 )
                    case c_xor_case_1
                    by solve( !KU( ~k.1 ) @ #vk.7 )
                  next
                    case c_xor_case_2
                    by solve( !KU( ~k ) @ #vk.7 )
                  next
                    case c_xor_case_3
                    solve( !KU( h((~k⊕~r1⊕x⊕~r1.1)) ) @ #vk.6 )
                      case c_h
                      solve( !KU( (~k⊕~k.1) ) @ #vk.7 )
                        case c_xor
                        by solve( !KU( ~k.1 ) @ #vk.9 )
                      next
                        case coerce
                        solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.5 )
                          case acceptreader
                          by solve( (#vl.1, 0) ~~> (#vk.5, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.1, 0) ~~> (#vk.5, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.6, 0) ~~> (#vk.5, 0) )
                          qed
                        qed
                      qed
                    next
                      case tag1
                      solve( !KU( (~k⊕~k.1) ) @ #vk.7 )
                        case c_xor
                        by solve( !KU( ~k.1 ) @ #vk.9 )
                      next
                        case coerce
                        solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.5 )
                          case acceptreader
                          by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.9, 0) ~~> (#vk.5, 0) )
                          qed
                        qed
                      qed
                    qed
                  next
                    case coerce
                    solve( !KD( (~k⊕~k.1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_3
                  solve( !KU( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) @ #vk.5 )
                    case c_xor
                    by solve( !KU( ~k ) @ #vk.8 )
                  next
                    case coerce
                    solve( !KD( (~k⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_4
                  by solve( !KU( ~k ) @ #vk.6 )
                next
                  case c_xor_case_5
                  solve( !KU( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) @ #vk.5 )
                    case c_xor
                    solve( !KU( (~k⊕~k.1) ) @ #vk.6 )
                      case c_xor
                      by solve( !KU( ~k.1 ) @ #vk.8 )
                    next
                      case coerce
                      solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.4 )
                        case acceptreader
                        by solve( (#vl.1, 0) ~~> (#vk.4, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.1, 0) ~~> (#vk.4, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.6, 0) ~~> (#vk.4, 0) )
                        qed
                      qed
                    qed
                  next
                    case coerce
                    solve( !KD( (x⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_6
                  solve( !KU( (~k.1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) @ #vk.5 )
                    case c_xor
                    by solve( !KU( ~k.1 ) @ #vk.8 )
                  next
                    case coerce
                    solve( !KD( (~k.1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.3 )
                      case acceptreader
                      by solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                    next
                      case initiatereader
                      by contradiction /* impossible chain */
                    next
                      case tag1
                      solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        by solve( (#vr.6, 0) ~~> (#vk.3, 0) )
                      qed
                    qed
                  qed
                next
                  case c_xor_case_7
                  solve( !KU( h((~k⊕~r1⊕x⊕~r1.1)) ) @ #vk.5 )
                    case c_h
                    solve( !KU( (~k⊕x⊕~k.1) ) @ #vk.6 )
                      case c_xor_case_1
                      solve( !KU( (~k⊕~r1⊕x⊕~r1.1) ) @ #vk.7 )
                        case c_xor_case_1
                        solve( !KU( (~k⊕~k.1) ) @ #vk.8 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.10 )
                        next
                          case coerce
                          solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.6 )
                            case acceptreader
                            by solve( (#vl.1, 0) ~~> (#vk.6, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.1, 0) ~~> (#vk.6, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.6, 0) ~~> (#vk.6, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_2
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_3
                        solve( !KU( (~k⊕~k.1) ) @ #vk.8 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.11 )
                        next
                          case coerce
                          solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.6 )
                            case acceptreader
                            by solve( (#vl.1, 0) ~~> (#vk.6, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.1, 0) ~~> (#vk.6, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.6, 0) ~~> (#vk.6, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_4
                        by solve( !KU( ~k ) @ #vk.10 )
                      next
                        case c_xor_case_5
                        solve( !KU( (~k⊕~k.1) ) @ #vk.8 )
                          case c_xor
                          by solve( !KU( ~k.1 ) @ #vk.11 )
                        next
                          case coerce
                          solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.6 )
                            case acceptreader
                            by solve( (#vl.1, 0) ~~> (#vk.6, 0) )
                          next
                            case initiatereader
                            by contradiction /* impossible chain */
                          next
                            case tag1
                            solve( (#vl.1, 0) ~~> (#vk.6, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              by solve( (#vr.6, 0) ~~> (#vk.6, 0) )
                            qed
                          qed
                        qed
                      next
                        case c_xor_case_6
                        by contradiction /* cyclic */
                      next
                        case c_xor_case_7
                        by contradiction /* cyclic */
                      next
                        case coerce
                        solve( !KD( (~k⊕~r1⊕x⊕~r1.1) ) ▶₀ #vk.5 )
                          case acceptreader
                          by solve( (#vl.1, 0) ~~> (#vk.5, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.1, 0) ~~> (#vk.5, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.6, 0) ~~> (#vk.5, 0) )
                          qed
                        qed
                      qed
                    next
                      case c_xor_case_2
                      by solve( !KU( ~k ) @ #vk.9 )
                    next
                      case c_xor_case_3
                      by solve( !KU( ~k.1 ) @ #vk.8 )
                    next
                      case coerce
                      solve( !KD( (~k⊕x⊕~k.1) ) ▶₀ #vk.4 )
                        case acceptreader
                        by solve( (#vl.1, 0) ~~> (#vk.4, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.1, 0) ~~> (#vk.4, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.6, 0) ~~> (#vk.4, 0) )
                        qed
                      qed
                    qed
                  next
                    case tag1
                    solve( !KU( (~k⊕x⊕~k.1) ) @ #vk.6 )
                      case c_xor_case_1
                      solve( !KU( (~k⊕~k.1) ) @ #vk.8 )
                        case c_xor
                        by solve( !KU( ~k.1 ) @ #vk.9 )
                      next
                        case coerce
                        solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.5 )
                          case acceptreader
                          by solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                        next
                          case initiatereader
                          by contradiction /* impossible chain */
                        next
                          case tag1
                          solve( (#vl.2, 0) ~~> (#vk.5, 0) )
                            case d_0_fst
                            by contradiction /* impossible chain */
                          next
                            case d_0_snd
                            by solve( (#vr.9, 0) ~~> (#vk.5, 0) )
                          qed
                        qed
                      qed
                    next
                      case c_xor_case_2
                      by solve( !KU( ~k ) @ #vk.9 )
                    next
                      case c_xor_case_3
                      by solve( !KU( ~k.1 ) @ #vk.8 )
                    next
                      case coerce
                      solve( !KD( (~k⊕x⊕~k.1) ) ▶₀ #vk.4 )
                        case acceptreader
                        by solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                      next
                        case initiatereader
                        by contradiction /* impossible chain */
                      next
                        case tag1
                        solve( (#vl.2, 0) ~~> (#vk.4, 0) )
                          case d_0_fst
                          by contradiction /* impossible chain */
                        next
                          case d_0_snd
                          by solve( (#vr.9, 0) ~~> (#vk.4, 0) )
                        qed
                      qed
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( (~k⊕x⊕~k.1⊕h((~k⊕~r1⊕x⊕~r1.1))) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case coerce
                solve( !KD( (x⊕~r1.1) ) ▶₀ #vk.1 )
                  case acceptreader
                  by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            qed
          qed
        next
          case split_case_6
          solve( !KU( h((~k⊕~r1⊕x⊕h((~k⊕x)))) ) @ #vk )
            case c_h
            solve( !KU( (~r1⊕x) ) @ #vk.1 )
              case c_xor
              by contradiction /* cyclic */
            next
              case coerce
              solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 )
                case acceptreader
                by solve( (#vl, 0) ~~> (#vk.1, 0) )
              next
                case initiatereader
                by contradiction /* impossible chain */
              next
                case tag1
                solve( (#vl, 0) ~~> (#vk.1, 0) )
                  case d_0_fst
                  by contradiction /* impossible chain */
                next
                  case d_0_snd
                  by solve( (#vr.3, 0) ~~> (#vk.1, 0) )
                qed
              qed
            qed
          next
            case tag1
            solve( !KU( (~r1⊕x) ) @ #vk.1 )
              case c_xor
              by contradiction /* cyclic */
            next
              case coerce
              solve( !KD( (~r1⊕x) ) ▶₀ #vk.1 )
                case acceptreader
                by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
              next
                case initiatereader
                by contradiction /* impossible chain */
              next
                case tag1
                solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                  case d_0_fst
                  by contradiction /* impossible chain */
                next
                  case d_0_snd
                  by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                qed
              qed
            qed
          qed
        next
          case split_case_7
          solve( !KU( h((~r1⊕z⊕h(z))) ) @ #vk )
            case acceptreader
            by solve( splitEqs(3) )
          next
            case c_h
            solve( !KU( (~k⊕~r1⊕z) ) @ #vk.1 )
              case c_xor_case_1
              by contradiction /* cyclic */
            next
              case c_xor_case_2
              by solve( !KU( ~k ) @ #vk.4 )
            next
              case c_xor_case_3
              solve( !KU( (~r1⊕z⊕h(z)) ) @ #vk.2 )
                case c_xor_case_1
                solve( !KU( (~k⊕~r1) ) @ #vk.4 )
                  case c_xor
                  by contradiction /* cyclic */
                next
                  case coerce
                  solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 )
                    case acceptreader
                    by solve( (#vl, 0) ~~> (#vk.3, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl, 0) ~~> (#vk.3, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.3, 0) ~~> (#vk.3, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_2
                solve( !KU( (~k⊕~r1) ) @ #vk.4 )
                  case c_xor
                  by contradiction /* cyclic */
                next
                  case coerce
                  solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 )
                    case acceptreader
                    by solve( (#vl, 0) ~~> (#vk.3, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl, 0) ~~> (#vk.3, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.3, 0) ~~> (#vk.3, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_3
                solve( !KU( (~k⊕~r1) ) @ #vk.4 )
                  case c_xor
                  by contradiction /* cyclic */
                next
                  case coerce
                  solve( !KD( (~k⊕~r1) ) ▶₀ #vk.3 )
                    case acceptreader
                    by solve( (#vl, 0) ~~> (#vk.3, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl, 0) ~~> (#vk.3, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.3, 0) ~~> (#vk.3, 0) )
                    qed
                  qed
                qed
              next
                case coerce
                solve( !KD( (~r1⊕z⊕h(z)) ) ▶₀ #vk.2 )
                  case acceptreader
                  by solve( (#vl, 0) ~~> (#vk.2, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl, 0) ~~> (#vk.2, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.3, 0) ~~> (#vk.2, 0) )
                  qed
                qed
              qed
            next
              case coerce
              solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 )
                case acceptreader
                by solve( (#vl, 0) ~~> (#vk.1, 0) )
              next
                case initiatereader
                by contradiction /* impossible chain */
              next
                case tag1
                solve( (#vl, 0) ~~> (#vk.1, 0) )
                  case d_0_fst
                  by contradiction /* impossible chain */
                next
                  case d_0_snd
                  by solve( (#vr.3, 0) ~~> (#vk.1, 0) )
                qed
              qed
            qed
          next
            case tag1
            solve( !KU( (~k⊕~r1⊕z) ) @ #vk.1 )
              case c_xor_case_1
              by contradiction /* cyclic */
            next
              case c_xor_case_2
              by solve( !KU( ~k ) @ #vk.4 )
            next
              case c_xor_case_3
              solve( !KU( (~k⊕~r1) ) @ #vk.4 )
                case c_xor
                by contradiction /* cyclic */
              next
                case coerce
                solve( !KD( (~k⊕~r1) ) ▶₀ #vk.2 )
                  case acceptreader
                  by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                  qed
                qed
              qed
            next
              case coerce
              solve( !KD( (~k⊕~r1⊕z) ) ▶₀ #vk.1 )
                case acceptreader
                by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
              next
                case initiatereader
                by contradiction /* impossible chain */
              next
                case tag1
                solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                  case d_0_fst
                  by contradiction /* impossible chain */
                next
                  case d_0_snd
                  by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                qed
              qed
            qed
          qed
        next
          case split_case_8
          solve( splitEqs(1) )
            case split
            solve( !KU( h((x⊕h((~r1⊕x)))) ) @ #vk )
              case acceptreader
              solve( !KU( (~k⊕~r0⊕~k.1) ) @ #vk.1 )
                case c_xor_case_1
                solve( !KU( (~k⊕~k.1) ) @ #vk.5 )
                  case c_xor
                  by solve( !KU( ~k.1 ) @ #vk.7 )
                next
                  case coerce
                  solve( !KD( (~k⊕~k.1) ) ▶₀ #vk.2 )
                    case acceptreader
                    by solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                  next
                    case initiatereader
                    by contradiction /* impossible chain */
                  next
                    case tag1
                    solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      by solve( (#vr.6, 0) ~~> (#vk.2, 0) )
                    qed
                  qed
                qed
              next
                case c_xor_case_2
                by solve( !KU( ~k ) @ #vk.6 )
              next
                case c_xor_case_3
                by solve( !KU( ~k.1 ) @ #vk.5 )
              next
                case coerce
                solve( !KD( (~k⊕~r0⊕~k.1) ) ▶₀ #vk.1 )
                  case acceptreader
                  by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            next
              case c_h
              solve( !KU( (~k⊕x) ) @ #vk.1 )
                case c_xor
                by solve( !KU( ~k ) @ #vk.4 )
              next
                case coerce
                solve( !KD( (~k⊕x) ) ▶₀ #vk.1 )
                  case acceptreader
                  by solve( (#vl, 0) ~~> (#vk.1, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.3, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            next
              case tag1
              solve( !KU( (~k⊕x) ) @ #vk.1 )
                case c_xor
                by solve( !KU( ~k ) @ #vk.4 )
              next
                case coerce
                solve( !KD( (~k⊕x) ) ▶₀ #vk.1 )
                  case acceptreader
                  by solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                next
                  case initiatereader
                  by contradiction /* impossible chain */
                next
                  case tag1
                  solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case case_2
    by contradiction /* from formulas */
  qed
qed

lemma noninjectiveagreementREADER [use_induction]:
  all-traces
  "∀ t #i.
    (Commit( <'R', 'T', t> ) @ #i) ⇒ (∃ #j. Running( <'R', 'T', t> ) @ #j)"
/*
guarded formula characterizing all counter-examples:
"∃ t #i.
  (Commit( <'R', 'T', t> ) @ #i)
 ∧
  ∀ #j. (Running( <'R', 'T', t> ) @ #j) ⇒ ⊥"
*/
induction
  case non_empty_trace
  simplify
  solve( (last(#i))  ∥
         (∃ #j. (Running( <'R', 'T', t> ) @ #j) ∧ ¬(last(#j))) )
    case case_1
    solve( Commit( <'R', 'T', t> ) @ #i )
      case acceptreader
      solve( ReaderState1( ~k, ~r0 ) ▶₀ #i )
        case initiatereader
        solve( splitEqs(0) )
          case split_case_5
          solve( !KU( h((~k⊕~r0⊕r1)) ) @ #vk.2 )
            case tag1
            solve( splitEqs(2) )
              case split_case_03
              solve( !KU( (~r1⊕x) ) @ #vk.2 )
                case c_xor
                solve( !KU( (~r0⊕x) ) @ #vk.3 )
                  case c_xor
                  solve( !KU( ~r1 ) @ #vk.5 )
                    case tag1
                    solve( !KU( ~r0 ) @ #vk.6 )
                      case initiatereader
                      SOLVED // trace found
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.


analyzing: examples/csf18-xor/LAK06.spthy

------------------------------------------------------------------------------
analyzed: examples/csf18-xor/LAK06.spthy

  output:          examples/csf18-xor/LAK06.spthy.tmp
  processing time: 12.57764757s
  executable (exists-trace): verified (9 steps)
  helpingSecrecy (all-traces): verified (2 steps)
  noninjectiveagreementTAG (all-traces): verified (2082 steps)
  noninjectiveagreementREADER (all-traces): falsified - found trace (13 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: examples/csf18-xor/LAK06.spthy

  output:          examples/csf18-xor/LAK06.spthy.tmp
  processing time: 12.57764757s
  executable (exists-trace): verified (9 steps)
  helpingSecrecy (all-traces): verified (2 steps)
  noninjectiveagreementTAG (all-traces): verified (2082 steps)
  noninjectiveagreementREADER (all-traces): falsified - found trace (13 steps)

==============================================================================
*/
