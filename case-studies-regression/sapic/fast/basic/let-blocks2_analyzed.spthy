theory LetBlockCharlyOne begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman
functions: fst/1[destructor], hash/1, pair/2, snd/1[destructor]
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2

heuristic: p









rule (modulo E) Init[color=#ffffff, process="P()"]:
   [ Fr( a.1 ) ] --[ Init( ) ]-> [ Out( 'g'^a.1 ) ]

  /*
  rule (modulo AC) Init[color=#ffffff, process="P()"]:
     [ Fr( a ) ] --[ Init( ) ]-> [ Out( z ) ]
    variants (modulo AC)
    1. a     = a.4
       z     = 'g'^a.4
    
    2. a     = one
       z     = 'g'
  */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 3.0. OK.
 checking installation: OK.


analyzing: examples/sapic/fast/basic/let-blocks2.spthy

------------------------------------------------------------------------------
analyzed: examples/sapic/fast/basic/let-blocks2.spthy

  output:          examples/sapic/fast/basic/let-blocks2.spthy.tmp
  processing time: 0.021569415s


------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: examples/sapic/fast/basic/let-blocks2.spthy

  output:          examples/sapic/fast/basic/let-blocks2.spthy.tmp
  processing time: 0.021569415s


==============================================================================
*/
