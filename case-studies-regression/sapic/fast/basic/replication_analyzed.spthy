theory Replication begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



heuristic: p



lemma onlyOneSecret:
  exists-trace
  "∃ #i #j x y. ((Secret( x ) @ #i) ∧ (Secret( y ) @ #j)) ∧ (¬(x = y))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i #j x y. (Secret( x ) @ #i) ∧ (Secret( y ) @ #j) ∧ ¬(x = y)"
*/
simplify
solve( !Semistate_1( ) ▶₀ #i )
  case Init
  solve( !Semistate_1( ) ▶₀ #j )
    case Init
    SOLVED // trace found
  qed
qed







rule (modulo E) Init[color=#ffffff, process="!"]:
   [ ] --[ Init( ) ]-> [ !Semistate_1( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_1_[color=#ffffff, process="!"]:
   [ !Semistate_1( ), Fr( s.1 ) ] --[ Secret( s.1 ) ]-> [ Out( s.1 ) ]

  /*
  rule (modulo AC) p_1_[color=#ffffff, process="!"]:
     [ !Semistate_1( ), Fr( s ) ] --[ Secret( s ) ]-> [ Out( s ) ]
  */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.7.1
Maude version 3.2.1
Git revision: 4b299c253445d7bbc7fce41abf0b0d5659bb1d58, branch: develop
Compiled at: 2023-06-26 11:54:20.223793825 UTC
*/

end
/* Output
maude tool: 'maude'
 checking version: 3.2.1. OK.
 checking installation: OK.

==============================================================================
summary of summaries:

analyzed: examples/sapic/fast/basic/replication.spthy

  output:          examples/sapic/fast/basic/replication.spthy.tmp
  processing time: 0.05s
  
  onlyOneSecret (exists-trace): verified (4 steps)

==============================================================================
*/
