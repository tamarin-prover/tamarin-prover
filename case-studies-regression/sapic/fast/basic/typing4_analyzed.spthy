theory Typing begin

// Function signature and definition of the equational theory E

builtins: multiset
functions: f/1, fst/1, g/1, h/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



heuristic: p





lemma sanity:
  exists-trace "∃ x y #i. (Run( x, y ) @ #i) ∧ (¬(x = y))"
/*
guarded formula characterizing all satisfying traces:
"∃ x y #i. (Run( x, y ) @ #i) ∧ ¬(x = y)"
*/
simplify
solve( State_2( ) ▶₀ #i )
  case Init
  SOLVED // trace found
qed













rule (modulo E) newxlol_0_1[color=#ffffff, process="new x.2:lol;"]:
   [ State_1( ), Fr( x.2 ) ] --> [ Out( x.2 ) ]

  /*
  rule (modulo AC) newxlol_0_1[color=#ffffff, process="new x.2:lol;"]:
     [ State_1( ), Fr( x ) ] --> [ Out( x ) ]
  */

rule (modulo E) Init[color=#ffffff, process="|"]:
   [ ] --[ Init( ) ]-> [ State_1( ), State_2( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newxlol_0_2[color=#ffffff, process="new x.3:lol;"]:
   [ State_2( ), Fr( x.3 ), Fr( x.4 ) ]
  --[ Run( x.3, x.4 ) ]->
   [ Out( <x.3, x.4> ) ]

  /*
  rule (modulo AC) newxlol_0_2[color=#ffffff, process="new x.3:lol;"]:
     [ State_2( ), Fr( x ), Fr( x.1 ) ]
    --[ Run( x, x.1 ) ]->
     [ Out( <x, x.1> ) ]
  */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.7.1
Maude version 3.2.1
Git revision: 4b299c253445d7bbc7fce41abf0b0d5659bb1d58, branch: develop
Compiled at: 2023-06-26 11:54:20.223793825 UTC
*/

end
/* Output
maude tool: 'maude'
 checking version: 3.2.1. OK.
 checking installation: OK.

==============================================================================
summary of summaries:

analyzed: examples/sapic/fast/basic/typing4.spthy

  output:          examples/sapic/fast/basic/typing4.spthy.tmp
  processing time: 0.07s
  
  sanity (exists-trace): verified (3 steps)

==============================================================================
*/
