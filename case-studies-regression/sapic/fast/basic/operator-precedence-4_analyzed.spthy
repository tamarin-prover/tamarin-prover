theory OperatorPrecedenceLet begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



heuristic: p

section{* A few test cases for operator precedence *}



lemma second_process_covered:
  all-traces "∀ #e x. (E( x ) @ #e) ⇒ (x = '1')"
/*
guarded formula characterizing all counter-examples:
"∃ #e x. (E( x ) @ #e) ∧ ¬(x = '1')"
*/
simplify
solve( E( x ) @ #e )
  case in_0_1
  by contradiction /* from formulas */
next
  case in_0_2
  by contradiction /* from formulas */
qed







rule (modulo E) in_0_1[color=#ffffff, process="in('1');"]:
   [ State_1( ), In( '1' ) ] --[ E( '1' ) ]-> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init[color=#ffffff, process="|"]:
   [ ] --[ Init( ) ]-> [ State_1( ), State_2( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_0_2[color=#ffffff, process="in('1');"]:
   [ State_2( ), In( '1' ) ] --[ E( '1' ) ]-> [ ]

  /* has exactly the trivial AC variant */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.8.0
Maude version 3.2.1
Git revision: 93c7165df1b26f607b8475e26d3a7e0d54f295cb, branch: master
Compiled at: 2023-08-29 12:56:59.317473841 UTC
*/

end
/* Output
maude tool: 'maude'
 checking version: 3.2.1. OK.
 checking installation: OK.

==============================================================================
summary of summaries:

analyzed: examples/sapic/fast/basic/operator-precedence-4.spthy

  output:          examples/sapic/fast/basic/operator-precedence-4.spthy.tmp
  processing time: 0.05s
  
  second_process_covered (all-traces): verified (4 steps)

==============================================================================
*/
