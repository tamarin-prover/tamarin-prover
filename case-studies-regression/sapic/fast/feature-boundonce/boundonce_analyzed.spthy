theory BoundOnce begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2

heuristic: p

rule (modulo E) Init[color=#ffffff, process="|"]:
   [ ] --[ Init( ) ]-> [ State_( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_[color=#ffffff, process="|"]:
   [ State_( ) ] --> [ State_1( ), State_2( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newx_0_1[color=#ffffff, process="new x;"]:
   [ State_1( ), Fr( x ) ] --> [ State_11( x ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_11[color=#ffffff, process="0"]:
   [ State_11( x ) ] --> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) newx_0_2[color=#ffffff, process="new x;"]:
   [ State_2( ), Fr( x ) ] --> [ State_21( x ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_21[color=#ffffff, process="0"]:
   [ State_21( x ) ] --> [ ]

  /* has exactly the trivial AC variant */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.


analyzing: examples/sapic/fast/feature-boundonce/boundonce.spthy

------------------------------------------------------------------------------
analyzed: examples/sapic/fast/feature-boundonce/boundonce.spthy

  output:          examples/sapic/fast/feature-boundonce/boundonce.spthy.tmp
  processing time: 0.051431494s


------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: examples/sapic/fast/feature-boundonce/boundonce.spthy

  output:          examples/sapic/fast/feature-boundonce/boundonce.spthy.tmp
  processing time: 0.051431494s


==============================================================================
*/
