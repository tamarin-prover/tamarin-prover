theory LetBlockCharlyTwo begin

// Function signature and definition of the equational theory E

functions: fst/1, hash/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2

heuristic: p

rule (modulo E) Init[color=#6c8040, process="new a;"]:
   [ ] --[ Init( ) ]-> [ State_( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newa_0_[color=#6c8040, process="new a;"]:
   [ State_( ), Fr( a ) ] --> [ State_1( a ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outa_0_1[color=#6c8040, process="out(a);"]:
   [ State_1( a ) ] --> [ State_11( a ), Out( a ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_11[color=#6c8040, process="0"]:
   [ State_11( a ) ] --> [ ]

  /* has exactly the trivial AC variant */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.


analyzing: examples/sapic/fast/feature-let-bindings/let-blocks3.spthy

------------------------------------------------------------------------------
analyzed: examples/sapic/fast/feature-let-bindings/let-blocks3.spthy

  output:          examples/sapic/fast/feature-let-bindings/let-blocks3.spthy.tmp
  processing time: 0.049522696s


------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: examples/sapic/fast/feature-let-bindings/let-blocks3.spthy

  output:          examples/sapic/fast/feature-let-bindings/let-blocks3.spthy.tmp
  processing time: 0.049522696s


==============================================================================
*/
