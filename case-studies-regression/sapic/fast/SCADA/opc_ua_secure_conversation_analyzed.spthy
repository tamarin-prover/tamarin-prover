theory OPC_UA_Secure_Communication begin

// Function signature and definition of the equational theory E

builtins: multiset
functions: fst/1, h/1, mac/2, pair/2, sdec/2, senc/2, snd/1, true/0,
           verifyMac/3
equations:
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    verifyMac(mac(m, sk), m, sk) = true

heuristic: p

section{* The OPC UA Secure Conversation protocol *}

restriction A_Counter_Increases:
  "∀ A B seq1 seq2 #i #j.
    (((Seq_Sent( A, B, seq1 ) @ #i) ∧ (Seq_Sent( A, B, seq2 ) @ #j)) ∧
     (#i < #j)) ⇒
    (∃ dif. seq2 = (dif+seq1))"

restriction A_Counter_No_Reuse:
  "∀ A B seq #i #j.
    ((Seq_Sent( A, B, seq ) @ #i) ∧ (Seq_Sent( A, B, seq ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

restriction B_Counter_Counter_Increases:
  "∀ A B seq1 seq2 #i #j.
    (((Seq_Recv( A, B, seq1 ) @ #i) ∧ (Seq_Recv( A, B, seq2 ) @ #j)) ∧
     (#i < #j)) ⇒
    (∃ dif. seq2 = (dif+seq1))"

restriction B_Counter_No_Reuse:
  "∀ A B seq #i #j.
    ((Seq_Recv( A, B, seq ) @ #i) ∧ (Seq_Recv( A, B, seq ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

lemma Executable:
  exists-trace "∃ A B m #i. Recv( A, B, m ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ A B m #i. (Recv( A, B, m ) @ #i)"
*/
simplify
solve( State_1111121111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH,
                         A, B, kEnc, kSign, m, pad, seq, lock
       ) ▶₀ #i )
  case eventSeqRecvabseq_0_111112111
  solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.1 )
    case newkEnc_0_1111
    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.2 )
      case newkEnc_0_1111
      solve( State_1111121( ~prog_1.1, ~prog_1111121, a, b, kEnc, kSign
             ) ▶₀ #t.2 )
        case p_1_111112
        solve( State_11111211111( ~prog_1.1, ~prog_1111121.1, ~prog_111112111,
                                  MH.1, SH.1, a, b, kEnc, kSign, m.1, pad.1, seq.1, lock
               ) ▶₀ #t.3 )
          case eventRecvabm_0_1111121111
          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
            case newkEnc_0_1111
            solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
              case newkEnc_0_1111
              solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                case newkEnc_0_1111
                solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                  case newkEnc_0_1111
                  solve( State_1111121( ~prog_1.1, ~prog_1111121, a, b, kEnc, kSign
                         ) ▶₀ #t.4 )
                    case p_1_111112
                    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                      case newkEnc_0_1111
                      solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                        case newkEnc_0_1111
                        solve( !KU( senc(<seq, m, pad, mac(<MH, SH, seq, m, pad>, ~n.3)>, ~n.2)
                               ) @ #vk.4 )
                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                          solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j )
                            case MessageIDRule
                            solve( State_11111211( ~prog_1.1, ~prog_1111121.1, a, b, ~n.2, ~n.3, lock
                                   ) ▶₁ #j )
                              case lockba_0_1111121
                              solve( ((#t.2 < #vr.22) ∧
                                      (∃ #t2.
                                        (Unlock_1( '1', ~n.5, <~n.1, ~n> ) @ #t2)
                                       ∧
                                        (#t.2 < #t2) ∧
                                        (#t2 < #vr.22) ∧
                                        (∀ #t0 pp. (Unlock( pp, ~n.5, <~n.1, ~n> ) @ #t0) ⇒ #t0 = #t2) ∧
                                        (∀ pp lpp #t0.
                                          (Lock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                         ⇒
                                          ((#t0 < #t.2) ∨ (#t0 = #t.2) ∨ (#t2 < #t0))) ∧
                                        (∀ pp lpp #t0.
                                          (Unlock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                         ⇒
                                          ((#t0 < #t.2) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                     (#vr.22 < #t.2)  ∥ (#t.2 = #vr.22) )
                                case case_3
                                solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                                  case newkEnc_0_1111
                                  solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                                    case newkEnc_0_1111
                                    solve( State_1111111( ~prog_1.1, ~prog_1111111, a, b, kEnc, kSign
                                           ) ▶₀ #t.4 )
                                      case p_1_111111
                                      solve( State_1111111111111( $MH.1, $SH.1, $pad.1, ~prog_1.1,
                                                                  ~prog_1111111.1, ~prog_111111111, a, b,
                                                                  kEnc, kSign, lock, m, seq.1
                                             ) ▶₀ #t.5 )
                                        case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                        solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                                          case MessageIDRule
                                          solve( State_11111211111( ~prog_1.1, ~prog_1111121.1,
                                                                    ~prog_111112111, MH.1, SH.1, a, b, kEnc,
                                                                    kSign, m, pad.1, seq.1, lock
                                                 ) ▶₀ #t.6 )
                                            case eventRecvabm_0_1111121111
                                            solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.6 )
                                              case newkEnc_0_1111
                                              solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.6 )
                                                case newkEnc_0_1111
                                                solve( State_1111121( ~prog_1.1, ~prog_1111121, a, b, kEnc,
                                                                      kSign
                                                       ) ▶₀ #t.6 )
                                                  case p_1_111112
                                                  solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.6 )
                                                    case newkEnc_0_1111
                                                    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.6 )
                                                      case newkEnc_0_1111
                                                      solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                             ) ▶₀ #t.6 )
                                                        case newkEnc_0_1111
                                                        solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                               ) ▶₀ #t.6 )
                                                          case newkEnc_0_1111
                                                          solve( State_1111111( ~prog_1.1, ~prog_1111111, a,
                                                                                b, kEnc, kSign
                                                                 ) ▶₀ #t.6 )
                                                            case p_1_111111
                                                            solve( State_11111211111( ~prog_1.1,
                                                                                      ~prog_1111121.1,
                                                                                      ~prog_111112111, MH.1,
                                                                                      SH.1, a, b, kEnc, kSign,
                                                                                      m, pad.1, seq.1, lock
                                                                   ) ▶₀ #t.6 )
                                                              case eventRecvabm_0_1111121111
                                                              solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                     ) ▶₀ #t.6 )
                                                                case newkEnc_0_1111
                                                                solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                       ) ▶₀ #t.6 )
                                                                  case newkEnc_0_1111
                                                                  solve( State_1111121( ~prog_1.1,
                                                                                        ~prog_1111121, a, b,
                                                                                        kEnc, kSign
                                                                         ) ▶₀ #t.6 )
                                                                    case p_1_111112
                                                                    solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                        kSign
                                                                           ) ▶₀ #t.6 )
                                                                      case newkEnc_0_1111
                                                                      solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                          kSign
                                                                             ) ▶₀ #t.6 )
                                                                        case newkEnc_0_1111
                                                                        solve( State_11111( ~prog_1, a, b,
                                                                                            kEnc, kSign
                                                                               ) ▶₀ #t.6 )
                                                                          case newkEnc_0_1111
                                                                          solve( State_11111( ~prog_1, a, b,
                                                                                              kEnc, kSign
                                                                                 ) ▶₀ #t.6 )
                                                                            case newkEnc_0_1111
                                                                            solve( State_11111( ~prog_1, a, b,
                                                                                                kEnc, kSign
                                                                                   ) ▶₀ #t.6 )
                                                                              case newkEnc_0_1111
                                                                              solve( State_11111( ~prog_1, a,
                                                                                                  b, kEnc,
                                                                                                  kSign
                                                                                     ) ▶₀ #t.6 )
                                                                                case newkEnc_0_1111
                                                                                solve( State_1111121( ~prog_1.1,
                                                                                                      ~prog_1111121,
                                                                                                      a, b,
                                                                                                      kEnc,
                                                                                                      kSign
                                                                                       ) ▶₀ #t.6 )
                                                                                  case p_1_111112
                                                                                  solve( State_11111( ~prog_1,
                                                                                                      a, b,
                                                                                                      kEnc,
                                                                                                      kSign
                                                                                         ) ▶₀ #t.6 )
                                                                                    case newkEnc_0_1111
                                                                                    solve( State_11111( ~prog_1,
                                                                                                        a, b,
                                                                                                        kEnc,
                                                                                                        kSign
                                                                                           ) ▶₀ #t.6 )
                                                                                      case newkEnc_0_1111
                                                                                      solve( State_11111( ~prog_1,
                                                                                                          a,
                                                                                                          b,
                                                                                                          kEnc,
                                                                                                          kSign
                                                                                             ) ▶₀ #t.6 )
                                                                                        case newkEnc_0_1111
                                                                                        solve( State_11111( ~prog_1,
                                                                                                            a,
                                                                                                            b,
                                                                                                            kEnc,
                                                                                                            kSign
                                                                                               ) ▶₀ #t.6 )
                                                                                          case newkEnc_0_1111
                                                                                          SOLVED // trace found
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma all_received_were_sent:
  all-traces
  "∀ A B m #i.
    (Recv( A, B, m ) @ #i) ⇒ (∃ #k. (Sent( A, B, m ) @ #k) ∧ (#k < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ A B m #i.
  (Recv( A, B, m ) @ #i) ∧ ∀ #k. (Sent( A, B, m ) @ #k) ⇒ ¬(#k < #i)"
*/
simplify
solve( State_1111121111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH,
                         A, B, kEnc, kSign, m, pad, seq, lock
       ) ▶₀ #i )
  case eventSeqRecvabseq_0_111112111
  solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.1 )
    case newkEnc_0_1111
    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.2 )
      case newkEnc_0_1111
      solve( State_1111121( ~prog_1.1, ~prog_1111121, a, b, kEnc, kSign
             ) ▶₀ #t.2 )
        case p_1_111112
        solve( State_11111211111( ~prog_1.1, ~prog_1111121.1, ~prog_111112111,
                                  MH.1, SH.1, a, b, kEnc, kSign, m.1, pad.1, seq.1, lock
               ) ▶₀ #t.3 )
          case eventRecvabm_0_1111121111
          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
            case newkEnc_0_1111
            solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
              case newkEnc_0_1111
              solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                case newkEnc_0_1111
                solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                  case newkEnc_0_1111
                  solve( State_1111121( ~prog_1.1, ~prog_1111121, a, b, kEnc, kSign
                         ) ▶₀ #t.4 )
                    case p_1_111112
                    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                      case newkEnc_0_1111
                      solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                        case newkEnc_0_1111
                        solve( !KU( senc(<seq, m, pad, mac(<MH, SH, seq, m, pad>, ~n.3)>, ~n.2)
                               ) @ #vk.4 )
                          case c_senc
                          by solve( !KU( ~n.2 ) @ #vk.6 )
                        next
                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma all_received_were_sent_injective:
  all-traces
  "∀ A B t #i.
    (Recv( A, B, t ) @ #i) ⇒
    (∃ #j.
      ((Sent( A, B, t ) @ #j) ∧ (#j < #i)) ∧
      (¬(∃ A2 B2 #i2. (Recv( A2, B2, t ) @ #i2) ∧ (¬(#i2 = #i)))))"
/*
guarded formula characterizing all counter-examples:
"∃ A B t #i.
  (Recv( A, B, t ) @ #i)
 ∧
  ∀ #j.
   (Sent( A, B, t ) @ #j)
  ⇒
   ((¬(#j < #i)) ∨ (∃ A2 B2 #i2. (Recv( A2, B2, t ) @ #i2) ∧ ¬(#i2 = #i)))"
*/
simplify
solve( State_1111121111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH,
                         A, B, kEnc, kSign, t, pad, seq, lock
       ) ▶₀ #i )
  case eventSeqRecvabseq_0_111112111
  solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.2 )
    case newkEnc_0_1111
    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.3 )
      case newkEnc_0_1111
      solve( State_1111121( ~prog_1.1, ~prog_1111121, a, b, kEnc, kSign
             ) ▶₀ #t.3 )
        case p_1_111112
        solve( State_11111211111( ~prog_1.1, ~prog_1111121.1, ~prog_111112111,
                                  MH.1, SH.1, a, b, kEnc, kSign, m, pad.1, seq.1, lock
               ) ▶₀ #t.3 )
          case eventRecvabm_0_1111121111
          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.3 )
            case newkEnc_0_1111
            solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.3 )
              case newkEnc_0_1111
              solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.3 )
                case newkEnc_0_1111
                solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.3 )
                  case newkEnc_0_1111
                  solve( State_1111121( ~prog_1.1, ~prog_1111121, a, b, kEnc, kSign
                         ) ▶₀ #t.3 )
                    case p_1_111112
                    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.3 )
                      case newkEnc_0_1111
                      solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.3 )
                        case newkEnc_0_1111
                        solve( !KU( senc(<seq, m, pad, mac(<MH, SH, seq, m, pad>, ~n.3)>, ~n.2)
                               ) @ #vk.4 )
                          case c_senc
                          by solve( !KU( ~n.2 ) @ #vk.6 )
                        next
                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                          solve( (#i2 < #i)  ∥ (#i < #i2) )
                            case case_1
                            solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j )
                              case MessageIDRule
                              solve( State_11111211( ~prog_1.2, ~prog_1111121.2, a, b, ~n.2, ~n.3,
                                                     lock.1
                                     ) ▶₁ #j )
                                case lockba_0_1111121
                                solve( ((#vr.2 < #vr.23) ∧
                                        (∃ #t2.
                                          (Unlock_1( '1', ~n.5, <~n.1, ~n> ) @ #t2)
                                         ∧
                                          (#vr.2 < #t2) ∧
                                          (#t2 < #vr.23) ∧
                                          (∀ #t0 pp. (Unlock( pp, ~n.5, <~n.1, ~n> ) @ #t0) ⇒ #t0 = #t2) ∧
                                          (∀ pp lpp #t0.
                                            (Lock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.2) ∨ (#t0 = #vr.2) ∨ (#t2 < #t0))) ∧
                                          (∀ pp lpp #t0.
                                            (Unlock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.2) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                       (#vr.23 < #vr.2)  ∥ (#vr.2 = #vr.23) )
                                  case case_1
                                  solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.3 )
                                    case newkEnc_0_1111
                                    solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.3 )
                                      case newkEnc_0_1111
                                      solve( State_1111111( ~prog_1.2, ~prog_1111111, a, b, kEnc.1, kSign.1
                                             ) ▶₀ #t.3 )
                                        case p_1_111111
                                        solve( State_1111111111111( $MH.2, $SH.2, $pad.2, ~prog_1.2,
                                                                    ~prog_1111111.1, ~prog_111111111, a, b,
                                                                    kEnc.1, kSign.1, lock.1, m, seq.2
                                               ) ▶₀ #t.4 )
                                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                          solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                                            case MessageIDRule
                                            solve( State_11111211111( ~prog_1.2, ~prog_1111121.3,
                                                                      ~prog_111112111.2, MH.2, SH.2, a, b,
                                                                      kEnc.1, kSign.1, m, pad.2, seq.2, lock.1
                                                   ) ▶₀ #t.5 )
                                              case eventRecvabm_0_1111121111
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case case_2
                                  solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.3 )
                                    case newkEnc_0_1111
                                    solve( State_11111( ~prog_1, a, b, kEnc.2, kSign.2 ) ▶₀ #t.3 )
                                      case newkEnc_0_1111
                                      solve( State_1111111( ~prog_1.3, ~prog_1111111, a, b, kEnc.2, kSign.2
                                             ) ▶₀ #t.3 )
                                        case p_1_111111
                                        solve( State_1111111111111( $MH.3, $SH.3, $pad.3, ~prog_1.3,
                                                                    ~prog_1111111.1, ~prog_111111111, a, b,
                                                                    kEnc.2, kSign.2, lock.1, m.1, seq.3
                                               ) ▶₀ #t.4 )
                                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                          solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                                            case MessageIDRule
                                            solve( State_11111211111( ~prog_1.3, ~prog_1111121.4,
                                                                      ~prog_111112111.2, MH.3, SH.3, a, b,
                                                                      kEnc.2, kSign.2, m.1, pad.3, seq.3,
                                                                      lock.1
                                                   ) ▶₀ #t.5 )
                                              case eventRecvabm_0_1111121111
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case case_3
                                  solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.3 )
                                    case newkEnc_0_1111
                                    solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.3 )
                                      case newkEnc_0_1111
                                      solve( State_1111111( ~prog_1.2, ~prog_1111111, a, b, kEnc.1, kSign.1
                                             ) ▶₀ #t.3 )
                                        case p_1_111111
                                        solve( State_1111111111111( $MH.2, $SH.2, $pad.2, ~prog_1.2,
                                                                    ~prog_1111111.1, ~prog_111111111, a, b,
                                                                    kEnc.1, kSign.1, lock.1, m, seq.2
                                               ) ▶₀ #t.4 )
                                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                          solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                                            case MessageIDRule
                                            solve( State_11111211111( ~prog_1.2, ~prog_1111121.2,
                                                                      ~prog_111112111, MH.2, SH.2, a, b,
                                                                      kEnc.1, kSign.1, m, pad.2, seq.2, lock.1
                                                   ) ▶₀ #t.5 )
                                              case eventRecvabm_0_1111121111
                                              solve( State_1111121111( ~prog_1.1, ~prog_1111121.1,
                                                                       ~prog_111112111.1, MH.1, SH.1, A2, B2,
                                                                       kEnc, kSign, ~n.4, pad.1, seq.1, lock
                                                     ) ▶₀ #i2 )
                                                case eventSeqRecvabseq_0_111112111
                                                solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                                  case newkEnc_0_1111
                                                  solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                                    case newkEnc_0_1111
                                                    solve( State_1111121( ~prog_1.2, ~prog_1111121, a, b,
                                                                          kEnc, kSign
                                                           ) ▶₀ #t.5 )
                                                      case p_1_111112
                                                      solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                             ) ▶₀ #t.5 )
                                                        case newkEnc_0_1111
                                                        solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                               ) ▶₀ #t.5 )
                                                          case newkEnc_0_1111
                                                          solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                 ) ▶₀ #t.5 )
                                                            case newkEnc_0_1111
                                                            solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                   ) ▶₀ #t.5 )
                                                              case newkEnc_0_1111
                                                              solve( State_1111111( ~prog_1.2, ~prog_1111111,
                                                                                    a, b, kEnc, kSign
                                                                     ) ▶₀ #t.5 )
                                                                case p_1_111111
                                                                solve( State_11111211111( ~prog_1.2,
                                                                                          ~prog_1111121.2,
                                                                                          ~prog_111112111,
                                                                                          MH.2, SH.2, a, b,
                                                                                          kEnc, kSign, m,
                                                                                          pad.2, seq.2, lock
                                                                       ) ▶₀ #t.5 )
                                                                  case eventRecvabm_0_1111121111
                                                                  solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                      kSign
                                                                         ) ▶₀ #t.5 )
                                                                    case newkEnc_0_1111
                                                                    solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                        kSign
                                                                           ) ▶₀ #t.5 )
                                                                      case newkEnc_0_1111
                                                                      solve( State_1111121( ~prog_1.2,
                                                                                            ~prog_1111121, a,
                                                                                            b, kEnc, kSign
                                                                             ) ▶₀ #t.5 )
                                                                        case p_1_111112
                                                                        solve( State_11111( ~prog_1.1, a, b,
                                                                                            kEnc, kSign
                                                                               ) ▶₀ #t.5 )
                                                                          case newkEnc_0_1111
                                                                          solve( State_11111( ~prog_1.1, a, b,
                                                                                              kEnc, kSign
                                                                                 ) ▶₀ #t.6 )
                                                                            case newkEnc_0_1111
                                                                            solve( State_1111121( ~prog_1.2,
                                                                                                  ~prog_1111121.1,
                                                                                                  a, b, kEnc,
                                                                                                  kSign
                                                                                   ) ▶₀ #t.6 )
                                                                              case p_1_111112
                                                                              solve( State_11111211111( ~prog_1.2,
                                                                                                        ~prog_1111121.2,
                                                                                                        ~prog_111112111.1,
                                                                                                        MH.2,
                                                                                                        SH.2,
                                                                                                        a, b,
                                                                                                        kEnc,
                                                                                                        kSign,
                                                                                                        m,
                                                                                                        pad.2,
                                                                                                        seq.2,
                                                                                                        lock
                                                                                     ) ▶₀ #t.7 )
                                                                                case eventRecvabm_0_1111121111
                                                                                solve( State_11111( ~prog_1,
                                                                                                    a, b,
                                                                                                    kEnc,
                                                                                                    kSign
                                                                                       ) ▶₀ #t.8 )
                                                                                  case newkEnc_0_1111
                                                                                  solve( State_11111( ~prog_1,
                                                                                                      a, b,
                                                                                                      kEnc,
                                                                                                      kSign
                                                                                         ) ▶₀ #t.8 )
                                                                                    case newkEnc_0_1111
                                                                                    solve( State_11111( ~prog_1,
                                                                                                        a, b,
                                                                                                        kEnc,
                                                                                                        kSign
                                                                                           ) ▶₀ #t.8 )
                                                                                      case newkEnc_0_1111
                                                                                      solve( State_11111( ~prog_1,
                                                                                                          a,
                                                                                                          b,
                                                                                                          kEnc,
                                                                                                          kSign
                                                                                             ) ▶₀ #t.8 )
                                                                                        case newkEnc_0_1111
                                                                                        solve( State_11111( ~prog_1,
                                                                                                            a,
                                                                                                            b,
                                                                                                            kEnc,
                                                                                                            kSign
                                                                                               ) ▶₀ #t.8 )
                                                                                          case newkEnc_0_1111
                                                                                          solve( State_11111( ~prog_1,
                                                                                                              a,
                                                                                                              b,
                                                                                                              kEnc,
                                                                                                              kSign
                                                                                                 ) ▶₀ #t.8 )
                                                                                            case newkEnc_0_1111
                                                                                            solve( State_1111121( ~prog_1.2,
                                                                                                                  ~prog_1111121,
                                                                                                                  a,
                                                                                                                  b,
                                                                                                                  kEnc,
                                                                                                                  kSign
                                                                                                   ) ▶₀ #t.8 )
                                                                                              case p_1_111112
                                                                                              solve( State_11111( ~prog_1,
                                                                                                                  a,
                                                                                                                  b,
                                                                                                                  kEnc,
                                                                                                                  kSign
                                                                                                     ) ▶₀ #t.8 )
                                                                                                case newkEnc_0_1111
                                                                                                solve( State_11111( ~prog_1,
                                                                                                                    a,
                                                                                                                    b,
                                                                                                                    kEnc,
                                                                                                                    kSign
                                                                                                       ) ▶₀ #t.8 )
                                                                                                  case newkEnc_0_1111
                                                                                                  solve( State_11111( ~prog_1.1,
                                                                                                                      a,
                                                                                                                      b,
                                                                                                                      kEnc,
                                                                                                                      kSign
                                                                                                         ) ▶₀ #t.8 )
                                                                                                    case newkEnc_0_1111
                                                                                                    solve( State_11111( ~prog_1.1,
                                                                                                                        a,
                                                                                                                        b,
                                                                                                                        kEnc,
                                                                                                                        kSign
                                                                                                           ) ▶₀ #t.8 )
                                                                                                      case newkEnc_0_1111
                                                                                                      solve( State_11111( ~prog_1.1,
                                                                                                                          a,
                                                                                                                          b,
                                                                                                                          kEnc,
                                                                                                                          kSign
                                                                                                             ) ▶₀ #t.8 )
                                                                                                        case newkEnc_0_1111
                                                                                                        solve( State_11111( ~prog_1.1,
                                                                                                                            a,
                                                                                                                            b,
                                                                                                                            kEnc,
                                                                                                                            kSign
                                                                                                               ) ▶₀ #t.8 )
                                                                                                          case newkEnc_0_1111
                                                                                                          solve( State_1111121( ~prog_1.2,
                                                                                                                                ~prog_1111121.1,
                                                                                                                                a,
                                                                                                                                b,
                                                                                                                                kEnc,
                                                                                                                                kSign
                                                                                                                 ) ▶₀ #t.8 )
                                                                                                            case p_1_111112
                                                                                                            solve( State_11111( ~prog_1,
                                                                                                                                a,
                                                                                                                                b,
                                                                                                                                kEnc,
                                                                                                                                kSign
                                                                                                                   ) ▶₀ #t.8 )
                                                                                                              case newkEnc_0_1111
                                                                                                              solve( State_11111( ~prog_1,
                                                                                                                                  a,
                                                                                                                                  b,
                                                                                                                                  kEnc,
                                                                                                                                  kSign
                                                                                                                     ) ▶₀ #t.8 )
                                                                                                                case newkEnc_0_1111
                                                                                                                solve( State_11111( ~prog_1.1,
                                                                                                                                    a,
                                                                                                                                    b,
                                                                                                                                    kEnc,
                                                                                                                                    kSign
                                                                                                                       ) ▶₀ #t.8 )
                                                                                                                  case newkEnc_0_1111
                                                                                                                  solve( State_11111( ~prog_1.1,
                                                                                                                                      a,
                                                                                                                                      b,
                                                                                                                                      kEnc,
                                                                                                                                      kSign
                                                                                                                         ) ▶₀ #t.8 )
                                                                                                                    case newkEnc_0_1111
                                                                                                                    solve( !KU( senc(<
                                                                                                                                      seq.1, 
                                                                                                                                      ~n.4, 
                                                                                                                                      pad.1, 
                                                                                                                                      mac(<
                                                                                                                                           MH.1, 
                                                                                                                                           SH.1, 
                                                                                                                                           seq.1, 
                                                                                                                                           ~n.4, 
                                                                                                                                           pad.1
                                                                                                                                          >,
                                                                                                                                          ~n.9)
                                                                                                                                     >,
                                                                                                                                     ~n.8)
                                                                                                                           ) @ #vk.12 )
                                                                                                                      case c_senc
                                                                                                                      by solve( !KU( ~n.8
                                                                                                                                ) @ #vk.14 )
                                                                                                                    next
                                                                                                                      case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                                                                      by contradiction
                                                                                                                         /*
                                                                                                                         cyclic
                                                                                                                         */
                                                                                                                    qed
                                                                                                                  qed
                                                                                                                qed
                                                                                                              qed
                                                                                                            qed
                                                                                                          qed
                                                                                                        qed
                                                                                                      qed
                                                                                                    qed
                                                                                                  qed
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j )
                              case MessageIDRule
                              solve( State_11111211( ~prog_1.2, ~prog_1111121.2, a, b, ~n.2, ~n.3,
                                                     lock.1
                                     ) ▶₁ #j )
                                case lockba_0_1111121
                                solve( ((#vr.2 < #vr.23) ∧
                                        (∃ #t2.
                                          (Unlock_1( '1', ~n.5, <~n.1, ~n> ) @ #t2)
                                         ∧
                                          (#vr.2 < #t2) ∧
                                          (#t2 < #vr.23) ∧
                                          (∀ #t0 pp. (Unlock( pp, ~n.5, <~n.1, ~n> ) @ #t0) ⇒ #t0 = #t2) ∧
                                          (∀ pp lpp #t0.
                                            (Lock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.2) ∨ (#t0 = #vr.2) ∨ (#t2 < #t0))) ∧
                                          (∀ pp lpp #t0.
                                            (Unlock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.2) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                       (#vr.23 < #vr.2)  ∥ (#vr.2 = #vr.23) )
                                  case case_1
                                  solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.3 )
                                    case newkEnc_0_1111
                                    solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.3 )
                                      case newkEnc_0_1111
                                      solve( State_1111111( ~prog_1.2, ~prog_1111111, a, b, kEnc.1, kSign.1
                                             ) ▶₀ #t.3 )
                                        case p_1_111111
                                        solve( State_1111111111111( $MH.2, $SH.2, $pad.2, ~prog_1.2,
                                                                    ~prog_1111111.1, ~prog_111111111, a, b,
                                                                    kEnc.1, kSign.1, lock.1, m, seq.2
                                               ) ▶₀ #t.4 )
                                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                          solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                                            case MessageIDRule
                                            solve( State_11111211111( ~prog_1.2, ~prog_1111121.3,
                                                                      ~prog_111112111.2, MH.2, SH.2, a, b,
                                                                      kEnc.1, kSign.1, m, pad.2, seq.2, lock.1
                                                   ) ▶₀ #t.5 )
                                              case eventRecvabm_0_1111121111
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case case_2
                                  solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.3 )
                                    case newkEnc_0_1111
                                    solve( State_11111( ~prog_1, a, b, kEnc.2, kSign.2 ) ▶₀ #t.3 )
                                      case newkEnc_0_1111
                                      solve( State_1111111( ~prog_1.3, ~prog_1111111, a, b, kEnc.2, kSign.2
                                             ) ▶₀ #t.3 )
                                        case p_1_111111
                                        solve( State_1111111111111( $MH.3, $SH.3, $pad.3, ~prog_1.3,
                                                                    ~prog_1111111.1, ~prog_111111111, a, b,
                                                                    kEnc.2, kSign.2, lock.1, m.1, seq.3
                                               ) ▶₀ #t.4 )
                                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                          solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                                            case MessageIDRule
                                            solve( State_11111211111( ~prog_1.3, ~prog_1111121.4,
                                                                      ~prog_111112111.2, MH.3, SH.3, a, b,
                                                                      kEnc.2, kSign.2, m.1, pad.3, seq.3,
                                                                      lock.1
                                                   ) ▶₀ #t.5 )
                                              case eventRecvabm_0_1111121111
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case case_3
                                  solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.3 )
                                    case newkEnc_0_1111
                                    solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.3 )
                                      case newkEnc_0_1111
                                      solve( State_1111111( ~prog_1.2, ~prog_1111111, a, b, kEnc.1, kSign.1
                                             ) ▶₀ #t.3 )
                                        case p_1_111111
                                        solve( State_1111111111111( $MH.2, $SH.2, $pad.2, ~prog_1.2,
                                                                    ~prog_1111111.1, ~prog_111111111, a, b,
                                                                    kEnc.1, kSign.1, lock.1, m, seq.2
                                               ) ▶₀ #t.4 )
                                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                          solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                                            case MessageIDRule
                                            solve( State_11111211111( ~prog_1.2, ~prog_1111121.2,
                                                                      ~prog_111112111, MH.2, SH.2, a, b,
                                                                      kEnc.1, kSign.1, m, pad.2, seq.2, lock.1
                                                   ) ▶₀ #t.5 )
                                              case eventRecvabm_0_1111121111
                                              solve( State_1111121111( ~prog_1.1, ~prog_1111121.1,
                                                                       ~prog_111112111.1, MH.1, SH.1, A2, B2,
                                                                       kEnc, kSign, ~n.4, pad.1, seq.1, lock
                                                     ) ▶₀ #i2 )
                                                case eventSeqRecvabseq_0_111112111
                                                solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                                  case newkEnc_0_1111
                                                  solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                                    case newkEnc_0_1111
                                                    solve( State_1111121( ~prog_1.2, ~prog_1111121, a, b,
                                                                          kEnc, kSign
                                                           ) ▶₀ #t.5 )
                                                      case p_1_111112
                                                      solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                             ) ▶₀ #t.5 )
                                                        case newkEnc_0_1111
                                                        solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                               ) ▶₀ #t.5 )
                                                          case newkEnc_0_1111
                                                          solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                 ) ▶₀ #t.5 )
                                                            case newkEnc_0_1111
                                                            solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                   ) ▶₀ #t.5 )
                                                              case newkEnc_0_1111
                                                              solve( State_1111111( ~prog_1.2, ~prog_1111111,
                                                                                    a, b, kEnc, kSign
                                                                     ) ▶₀ #t.5 )
                                                                case p_1_111111
                                                                solve( State_11111211111( ~prog_1.2,
                                                                                          ~prog_1111121.2,
                                                                                          ~prog_111112111,
                                                                                          MH.2, SH.2, a, b,
                                                                                          kEnc, kSign, m,
                                                                                          pad.2, seq.2, lock
                                                                       ) ▶₀ #t.5 )
                                                                  case eventRecvabm_0_1111121111
                                                                  solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                      kSign
                                                                         ) ▶₀ #t.5 )
                                                                    case newkEnc_0_1111
                                                                    solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                        kSign
                                                                           ) ▶₀ #t.5 )
                                                                      case newkEnc_0_1111
                                                                      solve( State_1111121( ~prog_1.2,
                                                                                            ~prog_1111121, a,
                                                                                            b, kEnc, kSign
                                                                             ) ▶₀ #t.5 )
                                                                        case p_1_111112
                                                                        solve( State_11111( ~prog_1.1, a, b,
                                                                                            kEnc, kSign
                                                                               ) ▶₀ #t.5 )
                                                                          case newkEnc_0_1111
                                                                          solve( State_11111( ~prog_1.1, a, b,
                                                                                              kEnc, kSign
                                                                                 ) ▶₀ #t.6 )
                                                                            case newkEnc_0_1111
                                                                            solve( State_1111121( ~prog_1.2,
                                                                                                  ~prog_1111121.1,
                                                                                                  a, b, kEnc,
                                                                                                  kSign
                                                                                   ) ▶₀ #t.6 )
                                                                              case p_1_111112
                                                                              solve( State_11111211111( ~prog_1.2,
                                                                                                        ~prog_1111121.2,
                                                                                                        ~prog_111112111.1,
                                                                                                        MH.2,
                                                                                                        SH.2,
                                                                                                        a, b,
                                                                                                        kEnc,
                                                                                                        kSign,
                                                                                                        m,
                                                                                                        pad.2,
                                                                                                        seq.2,
                                                                                                        lock
                                                                                     ) ▶₀ #t.7 )
                                                                                case eventRecvabm_0_1111121111
                                                                                solve( State_11111( ~prog_1,
                                                                                                    a, b,
                                                                                                    kEnc,
                                                                                                    kSign
                                                                                       ) ▶₀ #t.8 )
                                                                                  case newkEnc_0_1111
                                                                                  solve( State_11111( ~prog_1,
                                                                                                      a, b,
                                                                                                      kEnc,
                                                                                                      kSign
                                                                                         ) ▶₀ #t.8 )
                                                                                    case newkEnc_0_1111
                                                                                    solve( State_11111( ~prog_1,
                                                                                                        a, b,
                                                                                                        kEnc,
                                                                                                        kSign
                                                                                           ) ▶₀ #t.8 )
                                                                                      case newkEnc_0_1111
                                                                                      solve( State_11111( ~prog_1,
                                                                                                          a,
                                                                                                          b,
                                                                                                          kEnc,
                                                                                                          kSign
                                                                                             ) ▶₀ #t.8 )
                                                                                        case newkEnc_0_1111
                                                                                        solve( State_11111( ~prog_1,
                                                                                                            a,
                                                                                                            b,
                                                                                                            kEnc,
                                                                                                            kSign
                                                                                               ) ▶₀ #t.8 )
                                                                                          case newkEnc_0_1111
                                                                                          solve( State_11111( ~prog_1,
                                                                                                              a,
                                                                                                              b,
                                                                                                              kEnc,
                                                                                                              kSign
                                                                                                 ) ▶₀ #t.8 )
                                                                                            case newkEnc_0_1111
                                                                                            solve( State_1111121( ~prog_1.2,
                                                                                                                  ~prog_1111121,
                                                                                                                  a,
                                                                                                                  b,
                                                                                                                  kEnc,
                                                                                                                  kSign
                                                                                                   ) ▶₀ #t.8 )
                                                                                              case p_1_111112
                                                                                              solve( State_11111( ~prog_1,
                                                                                                                  a,
                                                                                                                  b,
                                                                                                                  kEnc,
                                                                                                                  kSign
                                                                                                     ) ▶₀ #t.8 )
                                                                                                case newkEnc_0_1111
                                                                                                solve( State_11111( ~prog_1,
                                                                                                                    a,
                                                                                                                    b,
                                                                                                                    kEnc,
                                                                                                                    kSign
                                                                                                       ) ▶₀ #t.8 )
                                                                                                  case newkEnc_0_1111
                                                                                                  solve( State_11111( ~prog_1.1,
                                                                                                                      a,
                                                                                                                      b,
                                                                                                                      kEnc,
                                                                                                                      kSign
                                                                                                         ) ▶₀ #t.8 )
                                                                                                    case newkEnc_0_1111
                                                                                                    solve( State_11111( ~prog_1.1,
                                                                                                                        a,
                                                                                                                        b,
                                                                                                                        kEnc,
                                                                                                                        kSign
                                                                                                           ) ▶₀ #t.8 )
                                                                                                      case newkEnc_0_1111
                                                                                                      solve( State_11111( ~prog_1.1,
                                                                                                                          a,
                                                                                                                          b,
                                                                                                                          kEnc,
                                                                                                                          kSign
                                                                                                             ) ▶₀ #t.8 )
                                                                                                        case newkEnc_0_1111
                                                                                                        solve( State_11111( ~prog_1.1,
                                                                                                                            a,
                                                                                                                            b,
                                                                                                                            kEnc,
                                                                                                                            kSign
                                                                                                               ) ▶₀ #t.8 )
                                                                                                          case newkEnc_0_1111
                                                                                                          solve( State_1111121( ~prog_1.2,
                                                                                                                                ~prog_1111121.1,
                                                                                                                                a,
                                                                                                                                b,
                                                                                                                                kEnc,
                                                                                                                                kSign
                                                                                                                 ) ▶₀ #t.8 )
                                                                                                            case p_1_111112
                                                                                                            solve( State_11111( ~prog_1,
                                                                                                                                a,
                                                                                                                                b,
                                                                                                                                kEnc,
                                                                                                                                kSign
                                                                                                                   ) ▶₀ #t.8 )
                                                                                                              case newkEnc_0_1111
                                                                                                              solve( State_11111( ~prog_1,
                                                                                                                                  a,
                                                                                                                                  b,
                                                                                                                                  kEnc,
                                                                                                                                  kSign
                                                                                                                     ) ▶₀ #t.8 )
                                                                                                                case newkEnc_0_1111
                                                                                                                solve( State_11111( ~prog_1.1,
                                                                                                                                    a,
                                                                                                                                    b,
                                                                                                                                    kEnc,
                                                                                                                                    kSign
                                                                                                                       ) ▶₀ #t.8 )
                                                                                                                  case newkEnc_0_1111
                                                                                                                  solve( State_11111( ~prog_1.1,
                                                                                                                                      a,
                                                                                                                                      b,
                                                                                                                                      kEnc,
                                                                                                                                      kSign
                                                                                                                         ) ▶₀ #t.8 )
                                                                                                                    case newkEnc_0_1111
                                                                                                                    solve( !KU( senc(<
                                                                                                                                      seq.1, 
                                                                                                                                      ~n.4, 
                                                                                                                                      pad.1, 
                                                                                                                                      mac(<
                                                                                                                                           MH.1, 
                                                                                                                                           SH.1, 
                                                                                                                                           seq.1, 
                                                                                                                                           ~n.4, 
                                                                                                                                           pad.1
                                                                                                                                          >,
                                                                                                                                          ~n.9)
                                                                                                                                     >,
                                                                                                                                     ~n.8)
                                                                                                                           ) @ #vk.12 )
                                                                                                                      case c_senc
                                                                                                                      by solve( !KU( ~n.8
                                                                                                                                ) @ #vk.14 )
                                                                                                                    next
                                                                                                                      case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                                                                      by contradiction
                                                                                                                         /*
                                                                                                                         cyclic
                                                                                                                         */
                                                                                                                    qed
                                                                                                                  qed
                                                                                                                qed
                                                                                                              qed
                                                                                                            qed
                                                                                                          qed
                                                                                                        qed
                                                                                                      qed
                                                                                                    qed
                                                                                                  qed
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma order:
  all-traces
  "∀ A B m m2 #i #j.
    (((Recv( A, B, m ) @ #i) ∧ (Recv( A, B, m2 ) @ #j)) ∧ (#i < #j)) ⇒
    (∃ #k #l.
      ((Sent( A, B, m ) @ #k) ∧ (Sent( A, B, m2 ) @ #l)) ∧ (#k < #l))"
/*
guarded formula characterizing all counter-examples:
"∃ A B m m2 #i #j.
  (Recv( A, B, m ) @ #i) ∧ (Recv( A, B, m2 ) @ #j)
 ∧
  (#i < #j) ∧
  (∀ #k #l. (Sent( A, B, m ) @ #k) ∧ (Sent( A, B, m2 ) @ #l) ⇒ ¬(#k < #l))"
*/
simplify
solve( State_1111121111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH,
                         A, B, kEnc, kSign, m, pad, seq, lock
       ) ▶₀ #i )
  case eventSeqRecvabseq_0_111112111
  solve( State_1111121111( ~prog_1.1, ~prog_1111121.1, ~prog_111112111.1,
                           MH.1, SH.1, ~n, ~n.1, kEnc, kSign, m2, pad.1, seq.1, lock
         ) ▶₀ #j )
    case eventSeqRecvabseq_0_111112111
    solve( (¬(#vr < #vr.13))  ∥ (∃ dif. (seq.1 = (dif+seq))) )
      case case_1
      solve( (¬(#vr.13 < #vr))  ∥ (∃ dif. (seq = (dif+seq.1))) )
        case case_1
        solve( ((#vr.2 < #vr.15) ∧
                (∃ #t2.
                  (Unlock_1( '1', ~n.4, <~n.1, ~n> ) @ #t2)
                 ∧
                  (#vr.2 < #t2) ∧
                  (#t2 < #vr.15) ∧
                  (∀ #t0 pp. (Unlock( pp, ~n.4, <~n.1, ~n> ) @ #t0) ⇒ #t0 = #t2) ∧
                  (∀ pp lpp #t0.
                    (Lock( pp, lpp, <~n.1, ~n> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.2) ∨ (#t0 = #vr.2) ∨ (#t2 < #t0))) ∧
                  (∀ pp lpp #t0.
                    (Unlock( pp, lpp, <~n.1, ~n> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.2) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
               (#vr.15 < #vr.2)  ∥ (#vr.2 = #vr.15) )
          case case_1
          solve( (#vr = #vr.13)  ∥ (#vr.13 < #vr) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (#vr = #vr.13)  ∥ (#vr.13 < #vr) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_3
          by contradiction /* cyclic */
        qed
      next
        case case_2
        solve( ((#vr.2 < #vr.15) ∧
                (∃ #t2.
                  (Unlock_1( '1', ~n.4, <~n.1, ~n> ) @ #t2)
                 ∧
                  (#vr.2 < #t2) ∧
                  (#t2 < #vr.15) ∧
                  (∀ #t0 pp. (Unlock( pp, ~n.4, <~n.1, ~n> ) @ #t0) ⇒ #t0 = #t2) ∧
                  (∀ pp lpp #t0.
                    (Lock( pp, lpp, <~n.1, ~n> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.2) ∨ (#t0 = #vr.2) ∨ (#t2 < #t0))) ∧
                  (∀ pp lpp #t0.
                    (Unlock( pp, lpp, <~n.1, ~n> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.2) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
               (#vr.15 < #vr.2)  ∥ (#vr.2 = #vr.15) )
          case case_1
          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.1 )
            case newkEnc_0_1111
            solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.2 )
              case newkEnc_0_1111
              solve( State_1111121( ~prog_1.2, ~prog_1111121, a, b, kEnc.1, kSign.1
                     ) ▶₀ #t.2 )
                case p_1_111112
                solve( State_11111211111( ~prog_1.2, ~prog_1111121.3, ~prog_111112111,
                                          MH.3, SH.3, a, b, kEnc.1, kSign.1, m.2, pad.3, seq.2, lock
                       ) ▶₀ #t.3 )
                  case eventRecvabm_0_1111121111
                  by contradiction /* cyclic */
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.1 )
            case newkEnc_0_1111
            solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.2 )
              case newkEnc_0_1111
              solve( State_1111121( ~prog_1.2, ~prog_1111121, a, b, kEnc.1, kSign.1
                     ) ▶₀ #t.2 )
                case p_1_111112
                solve( State_11111211111( ~prog_1.2, ~prog_1111121.3, ~prog_111112111,
                                          MH.3, SH.3, a, b, kEnc.1, kSign.1, m.2, pad.3, seq.2, lock
                       ) ▶₀ #t.3 )
                  case eventRecvabm_0_1111121111
                  solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.4 )
                    case newkEnc_0_1111
                    solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.4 )
                      case newkEnc_0_1111
                      solve( State_1111121( ~prog_1.2, ~prog_1111121.1, a, b, kEnc.1, kSign.1
                             ) ▶₀ #t.4 )
                        case p_1_111112
                        solve( State_11111211111( ~prog_1.2, ~prog_1111121.3, ~prog_111112111.1,
                                                  MH.3, SH.3, a, b, kEnc.1, kSign.1, m.2, pad.3, seq.2, lock
                               ) ▶₀ #t.5 )
                          case eventRecvabm_0_1111121111
                          by contradiction /* cyclic */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case case_2
      solve( (¬(#vr.13 < #vr))  ∥ (∃ dif.1. (seq = (dif+seq+dif.1))) )
        case case_1
        solve( ((#vr.2 < #vr.15) ∧
                (∃ #t2.
                  (Unlock_1( '1', ~n.4, <~n.1, ~n> ) @ #t2)
                 ∧
                  (#vr.2 < #t2) ∧
                  (#t2 < #vr.15) ∧
                  (∀ #t0 pp. (Unlock( pp, ~n.4, <~n.1, ~n> ) @ #t0) ⇒ #t0 = #t2) ∧
                  (∀ pp lpp #t0.
                    (Lock( pp, lpp, <~n.1, ~n> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.2) ∨ (#t0 = #vr.2) ∨ (#t2 < #t0))) ∧
                  (∀ pp lpp #t0.
                    (Unlock( pp, lpp, <~n.1, ~n> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.2) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
               (#vr.15 < #vr.2)  ∥ (#vr.2 = #vr.15) )
          case case_1
          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.1 )
            case newkEnc_0_1111
            solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.2 )
              case newkEnc_0_1111
              solve( State_1111121( ~prog_1.2, ~prog_1111121, a, b, kEnc.1, kSign.1
                     ) ▶₀ #t.2 )
                case p_1_111112
                solve( State_11111211111( ~prog_1.2, ~prog_1111121.3, ~prog_111112111,
                                          MH.3, SH.3, a, b, kEnc.1, kSign.1, m.2, pad.3, seq.2, lock
                       ) ▶₀ #t.3 )
                  case eventRecvabm_0_1111121111
                  solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.3 )
                    case newkEnc_0_1111
                    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.3 )
                      case newkEnc_0_1111
                      solve( State_1111121( ~prog_1.1, ~prog_1111121.1, a, b, kEnc, kSign
                             ) ▶₀ #t.3 )
                        case p_1_111112
                        solve( State_11111211111( ~prog_1.1, ~prog_1111121.2, ~prog_111112111.1,
                                                  MH.2, SH.2, a, b, kEnc, kSign, m.1, pad.2, seq.1, lock
                               ) ▶₀ #t.4 )
                          case eventRecvabm_0_1111121111
                          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                            case newkEnc_0_1111
                            solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                              case newkEnc_0_1111
                              solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                case newkEnc_0_1111
                                solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                  case newkEnc_0_1111
                                  solve( State_1111121( ~prog_1.1, ~prog_1111121, a, b, kEnc, kSign
                                         ) ▶₀ #t.5 )
                                    case p_1_111112
                                    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                      case newkEnc_0_1111
                                      solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                        case newkEnc_0_1111
                                        solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                          case newkEnc_0_1111
                                          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                            case newkEnc_0_1111
                                            solve( State_1111121( ~prog_1.1, ~prog_1111121.1, a, b, kEnc,
                                                                  kSign
                                                   ) ▶₀ #t.5 )
                                              case p_1_111112
                                              solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                                case newkEnc_0_1111
                                                solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                                  case newkEnc_0_1111
                                                  solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                                    case newkEnc_0_1111
                                                    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.5 )
                                                      case newkEnc_0_1111
                                                      solve( !KU( senc(<seq, m, pad, 
                                                                        mac(<MH, SH, seq, m, pad>, ~n.3)>,
                                                                       ~n.2)
                                                             ) @ #vk.4 )
                                                        case c_senc
                                                        solve( !KU( senc(<(dif+seq), m2, pad.1, 
                                                                          mac(<MH.1, SH.1, (dif+seq), m2, 
                                                                               pad.1>,
                                                                              ~n.3)
                                                                         >,
                                                                         ~n.2)
                                                               ) @ #vk.9 )
                                                          case c_senc
                                                          by solve( !KU( ~n.2 ) @ #vk.11 )
                                                        next
                                                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                          solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                                                            case MessageIDRule
                                                            solve( State_11111211( ~prog_1.1, ~prog_1111121.2,
                                                                                   a, b, ~n.2, ~n.3, lock
                                                                   ) ▶₁ #j.1 )
                                                              case lockba_0_1111121
                                                              solve( ((#t.2 < #vr.26) ∧
                                                                      (∃ #t2.
                                                                        (Unlock_1( '1', ~n.4, <~n.1, ~n>
                                                                         ) @ #t2)
                                                                       ∧
                                                                        (#t.2 < #t2) ∧
                                                                        (#t2 < #vr.26) ∧
                                                                        (∀ #t0 pp.
                                                                          (Unlock( pp, ~n.4, <~n.1, ~n>
                                                                           ) @ #t0)
                                                                         ⇒
                                                                          #t0 = #t2) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Lock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #t.2) ∨
                                                                           (#t0 = #t.2) ∨
                                                                           (#t2 < #t0))) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Unlock( pp, lpp, <~n.1, ~n>
                                                                           ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #t.2) ∨
                                                                           (#t2 < #t0) ∨
                                                                           (#t2 = #t0)))))  ∥
                                                                     (#vr.26 < #t.2)  ∥ (#t.2 = #vr.26) )
                                                                case case_1
                                                                solve( ((#t.3 < #vr.26) ∧
                                                                        (∃ #t2.
                                                                          (Unlock_1( '1', ~n.6, <~n.1, ~n>
                                                                           ) @ #t2)
                                                                         ∧
                                                                          (#t.3 < #t2) ∧
                                                                          (#t2 < #vr.26) ∧
                                                                          (∀ #t0 pp.
                                                                            (Unlock( pp, ~n.6, <~n.1, ~n>
                                                                             ) @ #t0)
                                                                           ⇒
                                                                            #t0 = #t2) ∧
                                                                          (∀ pp lpp #t0.
                                                                            (Lock( pp, lpp, <~n.1, ~n>
                                                                             ) @ #t0)
                                                                           ⇒
                                                                            ((#t0 < #t.3) ∨
                                                                             (#t0 = #t.3) ∨
                                                                             (#t2 < #t0))) ∧
                                                                          (∀ pp lpp #t0.
                                                                            (Unlock( pp, lpp, <~n.1, ~n>
                                                                             ) @ #t0)
                                                                           ⇒
                                                                            ((#t0 < #t.3) ∨
                                                                             (#t2 < #t0) ∨
                                                                             (#t2 = #t0)))))  ∥
                                                                       (#vr.26 < #t.3)  ∥ (#t.3 = #vr.26) )
                                                                  case case_1
                                                                  solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                      kSign
                                                                         ) ▶₀ #t.5 )
                                                                    case newkEnc_0_1111
                                                                    solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                        kSign
                                                                           ) ▶₀ #t.5 )
                                                                      case newkEnc_0_1111
                                                                      solve( State_1111111( ~prog_1.1,
                                                                                            ~prog_1111111, a,
                                                                                            b, kEnc, kSign
                                                                             ) ▶₀ #t.5 )
                                                                        case p_1_111111
                                                                        solve( State_1111111111111( $MH.2,
                                                                                                    $SH.2,
                                                                                                    $pad.2,
                                                                                                    ~prog_1.1,
                                                                                                    ~prog_1111111.1,
                                                                                                    ~prog_111111111,
                                                                                                    a, b,
                                                                                                    kEnc,
                                                                                                    kSign,
                                                                                                    lock, m.1,
                                                                                                    seq.1
                                                                               ) ▶₀ #t.6 )
                                                                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                          solve( MID_Receiver( ~mid_111111111111
                                                                                 ) ▶₃ #j.2 )
                                                                            case MessageIDRule
                                                                            solve( State_11111211111( ~prog_1.1,
                                                                                                      ~prog_1111121.3,
                                                                                                      ~prog_111112111.2,
                                                                                                      MH.2,
                                                                                                      SH.2, a,
                                                                                                      b, kEnc,
                                                                                                      kSign,
                                                                                                      m.1,
                                                                                                      pad.2,
                                                                                                      seq.1,
                                                                                                      lock
                                                                                   ) ▶₀ #t.7 )
                                                                              case eventRecvabm_0_1111121111
                                                                              by contradiction /* cyclic */
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                next
                                                                  case case_2
                                                                  solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                      kSign
                                                                         ) ▶₀ #t.5 )
                                                                    case newkEnc_0_1111
                                                                    solve( State_11111( ~prog_1, a, b, kEnc.1,
                                                                                        kSign.1
                                                                           ) ▶₀ #t.5 )
                                                                      case newkEnc_0_1111
                                                                      solve( State_1111111( ~prog_1.2,
                                                                                            ~prog_1111111, a,
                                                                                            b, kEnc.1, kSign.1
                                                                             ) ▶₀ #t.5 )
                                                                        case p_1_111111
                                                                        solve( State_1111111111111( $MH.3,
                                                                                                    $SH.3,
                                                                                                    $pad.3,
                                                                                                    ~prog_1.2,
                                                                                                    ~prog_1111111.1,
                                                                                                    ~prog_111111111,
                                                                                                    a, b,
                                                                                                    kEnc.1,
                                                                                                    kSign.1,
                                                                                                    lock, m.2,
                                                                                                    seq.2
                                                                               ) ▶₀ #t.6 )
                                                                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                          solve( MID_Receiver( ~mid_111111111111
                                                                                 ) ▶₃ #j.2 )
                                                                            case MessageIDRule
                                                                            solve( State_11111211111( ~prog_1.2,
                                                                                                      ~prog_1111121.4,
                                                                                                      ~prog_111112111.2,
                                                                                                      MH.3,
                                                                                                      SH.3, a,
                                                                                                      b,
                                                                                                      kEnc.1,
                                                                                                      kSign.1,
                                                                                                      m.2,
                                                                                                      pad.3,
                                                                                                      seq.2,
                                                                                                      lock
                                                                                   ) ▶₀ #t.7 )
                                                                              case eventRecvabm_0_1111121111
                                                                              by contradiction /* cyclic */
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                next
                                                                  case case_3
                                                                  solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                      kSign
                                                                         ) ▶₀ #t.5 )
                                                                    case newkEnc_0_1111
                                                                    solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                        kSign
                                                                           ) ▶₀ #t.5 )
                                                                      case newkEnc_0_1111
                                                                      solve( State_1111111( ~prog_1.1,
                                                                                            ~prog_1111111, a,
                                                                                            b, kEnc, kSign
                                                                             ) ▶₀ #t.5 )
                                                                        case p_1_111111
                                                                        solve( State_1111111111111( $MH.2,
                                                                                                    $SH.2,
                                                                                                    $pad.2,
                                                                                                    ~prog_1.1,
                                                                                                    ~prog_1111111.1,
                                                                                                    ~prog_111111111,
                                                                                                    a, b,
                                                                                                    kEnc,
                                                                                                    kSign,
                                                                                                    lock, m.1,
                                                                                                    seq.1
                                                                               ) ▶₀ #t.6 )
                                                                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                          solve( MID_Receiver( ~mid_111111111111
                                                                                 ) ▶₃ #j.2 )
                                                                            case MessageIDRule
                                                                            solve( State_11111211111( ~prog_1.1,
                                                                                                      ~prog_1111121.2,
                                                                                                      ~prog_111112111.1,
                                                                                                      MH.2,
                                                                                                      SH.2, a,
                                                                                                      b, kEnc,
                                                                                                      kSign,
                                                                                                      m.1,
                                                                                                      pad.2,
                                                                                                      seq.1,
                                                                                                      lock
                                                                                   ) ▶₀ #t.7 )
                                                                              case eventRecvabm_0_1111121111
                                                                              solve( State_11111( ~prog_1, a,
                                                                                                  b, kEnc,
                                                                                                  kSign
                                                                                     ) ▶₀ #t.7 )
                                                                                case newkEnc_0_1111
                                                                                solve( State_11111( ~prog_1,
                                                                                                    a, b,
                                                                                                    kEnc,
                                                                                                    kSign
                                                                                       ) ▶₀ #t.7 )
                                                                                  case newkEnc_0_1111
                                                                                  solve( State_1111121( ~prog_1.1,
                                                                                                        ~prog_1111121.1,
                                                                                                        a, b,
                                                                                                        kEnc,
                                                                                                        kSign
                                                                                         ) ▶₀ #t.7 )
                                                                                    case p_1_111112
                                                                                    solve( State_11111( ~prog_1,
                                                                                                        a, b,
                                                                                                        kEnc,
                                                                                                        kSign
                                                                                           ) ▶₀ #t.7 )
                                                                                      case newkEnc_0_1111
                                                                                      solve( State_11111( ~prog_1,
                                                                                                          a,
                                                                                                          b,
                                                                                                          kEnc,
                                                                                                          kSign
                                                                                             ) ▶₀ #t.7 )
                                                                                        case newkEnc_0_1111
                                                                                        solve( State_11111( ~prog_1,
                                                                                                            a,
                                                                                                            b,
                                                                                                            kEnc,
                                                                                                            kSign
                                                                                               ) ▶₀ #t.7 )
                                                                                          case newkEnc_0_1111
                                                                                          solve( State_11111( ~prog_1,
                                                                                                              a,
                                                                                                              b,
                                                                                                              kEnc,
                                                                                                              kSign
                                                                                                 ) ▶₀ #t.7 )
                                                                                            case newkEnc_0_1111
                                                                                            solve( State_1111111( ~prog_1.1,
                                                                                                                  ~prog_1111111,
                                                                                                                  a,
                                                                                                                  b,
                                                                                                                  kEnc,
                                                                                                                  kSign
                                                                                                   ) ▶₀ #t.7 )
                                                                                              case p_1_111111
                                                                                              solve( State_11111211111( ~prog_1.1,
                                                                                                                        ~prog_1111121.2,
                                                                                                                        ~prog_111112111.1,
                                                                                                                        MH.2,
                                                                                                                        SH.2,
                                                                                                                        a,
                                                                                                                        b,
                                                                                                                        kEnc,
                                                                                                                        kSign,
                                                                                                                        m.1,
                                                                                                                        pad.2,
                                                                                                                        seq.1,
                                                                                                                        lock
                                                                                                     ) ▶₀ #t.7 )
                                                                                                case eventRecvabm_0_1111121111
                                                                                                solve( State_11111( ~prog_1,
                                                                                                                    a,
                                                                                                                    b,
                                                                                                                    kEnc,
                                                                                                                    kSign
                                                                                                       ) ▶₀ #t.7 )
                                                                                                  case newkEnc_0_1111
                                                                                                  solve( State_11111( ~prog_1,
                                                                                                                      a,
                                                                                                                      b,
                                                                                                                      kEnc,
                                                                                                                      kSign
                                                                                                         ) ▶₀ #t.7 )
                                                                                                    case newkEnc_0_1111
                                                                                                    solve( State_1111121( ~prog_1.1,
                                                                                                                          ~prog_1111121.1,
                                                                                                                          a,
                                                                                                                          b,
                                                                                                                          kEnc,
                                                                                                                          kSign
                                                                                                           ) ▶₀ #t.7 )
                                                                                                      case p_1_111112
                                                                                                      solve( State_11111( ~prog_1,
                                                                                                                          a,
                                                                                                                          b,
                                                                                                                          kEnc,
                                                                                                                          kSign
                                                                                                             ) ▶₀ #t.7 )
                                                                                                        case newkEnc_0_1111
                                                                                                        solve( State_11111( ~prog_1,
                                                                                                                            a,
                                                                                                                            b,
                                                                                                                            kEnc,
                                                                                                                            kSign
                                                                                                               ) ▶₀ #t.7 )
                                                                                                          case newkEnc_0_1111
                                                                                                          solve( State_11111( ~prog_1,
                                                                                                                              a,
                                                                                                                              b,
                                                                                                                              kEnc,
                                                                                                                              kSign
                                                                                                                 ) ▶₀ #t.7 )
                                                                                                            case newkEnc_0_1111
                                                                                                            solve( State_11111( ~prog_1,
                                                                                                                                a,
                                                                                                                                b,
                                                                                                                                kEnc,
                                                                                                                                kSign
                                                                                                                   ) ▶₀ #t.7 )
                                                                                                              case newkEnc_0_1111
                                                                                                              solve( State_11111( ~prog_1,
                                                                                                                                  a,
                                                                                                                                  b,
                                                                                                                                  kEnc,
                                                                                                                                  kSign
                                                                                                                     ) ▶₀ #t.7 )
                                                                                                                case newkEnc_0_1111
                                                                                                                solve( State_11111( ~prog_1,
                                                                                                                                    a,
                                                                                                                                    b,
                                                                                                                                    kEnc,
                                                                                                                                    kSign
                                                                                                                       ) ▶₀ #t.7 )
                                                                                                                  case newkEnc_0_1111
                                                                                                                  solve( State_1111121( ~prog_1.1,
                                                                                                                                        ~prog_1111121.1,
                                                                                                                                        a,
                                                                                                                                        b,
                                                                                                                                        kEnc,
                                                                                                                                        kSign
                                                                                                                         ) ▶₀ #t.7 )
                                                                                                                    case p_1_111112
                                                                                                                    solve( State_11111( ~prog_1,
                                                                                                                                        a,
                                                                                                                                        b,
                                                                                                                                        kEnc,
                                                                                                                                        kSign
                                                                                                                           ) ▶₀ #t.7 )
                                                                                                                      case newkEnc_0_1111
                                                                                                                      solve( State_11111( ~prog_1,
                                                                                                                                          a,
                                                                                                                                          b,
                                                                                                                                          kEnc,
                                                                                                                                          kSign
                                                                                                                             ) ▶₀ #t.7 )
                                                                                                                        case newkEnc_0_1111
                                                                                                                        solve( State_11111( ~prog_1,
                                                                                                                                            a,
                                                                                                                                            b,
                                                                                                                                            kEnc,
                                                                                                                                            kSign
                                                                                                                               ) ▶₀ #t.7 )
                                                                                                                          case newkEnc_0_1111
                                                                                                                          solve( State_11111( ~prog_1,
                                                                                                                                              a,
                                                                                                                                              b,
                                                                                                                                              kEnc,
                                                                                                                                              kSign
                                                                                                                                 ) ▶₀ #t.7 )
                                                                                                                            case newkEnc_0_1111
                                                                                                                            by solve( !KU( ~n.2
                                                                                                                                      ) @ #vk.11 )
                                                                                                                          qed
                                                                                                                        qed
                                                                                                                      qed
                                                                                                                    qed
                                                                                                                  qed
                                                                                                                qed
                                                                                                              qed
                                                                                                            qed
                                                                                                          qed
                                                                                                        qed
                                                                                                      qed
                                                                                                    qed
                                                                                                  qed
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              next
                                                                case case_2
                                                                solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                       ) ▶₀ #t.5 )
                                                                  case newkEnc_0_1111
                                                                  solve( State_11111( ~prog_1, a, b, kEnc.1,
                                                                                      kSign.1
                                                                         ) ▶₀ #t.5 )
                                                                    case newkEnc_0_1111
                                                                    solve( State_1111111( ~prog_1.2,
                                                                                          ~prog_1111111, a, b,
                                                                                          kEnc.1, kSign.1
                                                                           ) ▶₀ #t.5 )
                                                                      case p_1_111111
                                                                      solve( State_1111111111111( $MH.3,
                                                                                                  $SH.3,
                                                                                                  $pad.3,
                                                                                                  ~prog_1.2,
                                                                                                  ~prog_1111111.1,
                                                                                                  ~prog_111111111,
                                                                                                  a, b,
                                                                                                  kEnc.1,
                                                                                                  kSign.1,
                                                                                                  lock, m.2,
                                                                                                  seq.2
                                                                             ) ▶₀ #t.6 )
                                                                        case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                        solve( MID_Receiver( ~mid_111111111111
                                                                               ) ▶₃ #j.2 )
                                                                          case MessageIDRule
                                                                          solve( State_11111211111( ~prog_1.2,
                                                                                                    ~prog_1111121.4,
                                                                                                    ~prog_111112111.2,
                                                                                                    MH.3,
                                                                                                    SH.3, a,
                                                                                                    b, kEnc.1,
                                                                                                    kSign.1,
                                                                                                    m.2,
                                                                                                    pad.3,
                                                                                                    seq.2,
                                                                                                    lock
                                                                                 ) ▶₀ #t.7 )
                                                                            case eventRecvabm_0_1111121111
                                                                            by contradiction /* cyclic */
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                        solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                                                          case MessageIDRule
                                                          solve( State_11111211( ~prog_1.1, ~prog_1111121.2,
                                                                                 a, b, ~n.2, ~n.3, lock
                                                                 ) ▶₁ #j.1 )
                                                            case lockba_0_1111121
                                                            solve( ((#t.2 < #vr.26) ∧
                                                                    (∃ #t2.
                                                                      (Unlock_1( '1', ~n.5, <~n.1, ~n>
                                                                       ) @ #t2)
                                                                     ∧
                                                                      (#t.2 < #t2) ∧
                                                                      (#t2 < #vr.26) ∧
                                                                      (∀ #t0 pp.
                                                                        (Unlock( pp, ~n.5, <~n.1, ~n> ) @ #t0)
                                                                       ⇒
                                                                        #t0 = #t2) ∧
                                                                      (∀ pp lpp #t0.
                                                                        (Lock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                                                       ⇒
                                                                        ((#t0 < #t.2) ∨
                                                                         (#t0 = #t.2) ∨
                                                                         (#t2 < #t0))) ∧
                                                                      (∀ pp lpp #t0.
                                                                        (Unlock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                                                       ⇒
                                                                        ((#t0 < #t.2) ∨
                                                                         (#t2 < #t0) ∨
                                                                         (#t2 = #t0)))))  ∥
                                                                   (#vr.26 < #t.2)  ∥ (#t.2 = #vr.26) )
                                                              case case_1
                                                              solve( ((#t.3 < #vr.26) ∧
                                                                      (∃ #t2.
                                                                        (Unlock_1( '1', ~n.6, <~n.1, ~n>
                                                                         ) @ #t2)
                                                                       ∧
                                                                        (#t.3 < #t2) ∧
                                                                        (#t2 < #vr.26) ∧
                                                                        (∀ #t0 pp.
                                                                          (Unlock( pp, ~n.6, <~n.1, ~n>
                                                                           ) @ #t0)
                                                                         ⇒
                                                                          #t0 = #t2) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Lock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #t.3) ∨
                                                                           (#t0 = #t.3) ∨
                                                                           (#t2 < #t0))) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Unlock( pp, lpp, <~n.1, ~n>
                                                                           ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #t.3) ∨
                                                                           (#t2 < #t0) ∨
                                                                           (#t2 = #t0)))))  ∥
                                                                     (#vr.26 < #t.3)  ∥ (#t.3 = #vr.26) )
                                                                case case_1
                                                                solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                       ) ▶₀ #t.5 )
                                                                  case newkEnc_0_1111
                                                                  solve( State_11111( ~prog_1, a, b, kEnc,
                                                                                      kSign
                                                                         ) ▶₀ #t.5 )
                                                                    case newkEnc_0_1111
                                                                    solve( State_1111111( ~prog_1.1,
                                                                                          ~prog_1111111, a, b,
                                                                                          kEnc, kSign
                                                                           ) ▶₀ #t.5 )
                                                                      case p_1_111111
                                                                      solve( State_1111111111111( $MH.2,
                                                                                                  $SH.2,
                                                                                                  $pad.2,
                                                                                                  ~prog_1.1,
                                                                                                  ~prog_1111111.1,
                                                                                                  ~prog_111111111,
                                                                                                  a, b, kEnc,
                                                                                                  kSign, lock,
                                                                                                  m, seq.1
                                                                             ) ▶₀ #t.6 )
                                                                        case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                        solve( MID_Receiver( ~mid_111111111111
                                                                               ) ▶₃ #j.2 )
                                                                          case MessageIDRule
                                                                          solve( State_11111211111( ~prog_1.1,
                                                                                                    ~prog_1111121.3,
                                                                                                    ~prog_111112111.2,
                                                                                                    MH.2,
                                                                                                    SH.2, a,
                                                                                                    b, kEnc,
                                                                                                    kSign, m,
                                                                                                    pad.2,
                                                                                                    seq.1,
                                                                                                    lock
                                                                                 ) ▶₀ #t.7 )
                                                                            case eventRecvabm_0_1111121111
                                                                            by contradiction /* cyclic */
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              next
                                                                case case_2
                                                                solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                       ) ▶₀ #t.5 )
                                                                  case newkEnc_0_1111
                                                                  solve( State_11111( ~prog_1, a, b, kEnc.1,
                                                                                      kSign.1
                                                                         ) ▶₀ #t.5 )
                                                                    case newkEnc_0_1111
                                                                    solve( State_1111111( ~prog_1.2,
                                                                                          ~prog_1111111, a, b,
                                                                                          kEnc.1, kSign.1
                                                                           ) ▶₀ #t.5 )
                                                                      case p_1_111111
                                                                      solve( State_1111111111111( $MH.3,
                                                                                                  $SH.3,
                                                                                                  $pad.3,
                                                                                                  ~prog_1.2,
                                                                                                  ~prog_1111111.1,
                                                                                                  ~prog_111111111,
                                                                                                  a, b,
                                                                                                  kEnc.1,
                                                                                                  kSign.1,
                                                                                                  lock, m.1,
                                                                                                  seq.2
                                                                             ) ▶₀ #t.6 )
                                                                        case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                        solve( MID_Receiver( ~mid_111111111111
                                                                               ) ▶₃ #j.2 )
                                                                          case MessageIDRule
                                                                          solve( State_11111211111( ~prog_1.2,
                                                                                                    ~prog_1111121.4,
                                                                                                    ~prog_111112111.2,
                                                                                                    MH.3,
                                                                                                    SH.3, a,
                                                                                                    b, kEnc.1,
                                                                                                    kSign.1,
                                                                                                    m.1,
                                                                                                    pad.3,
                                                                                                    seq.2,
                                                                                                    lock
                                                                                 ) ▶₀ #t.7 )
                                                                            case eventRecvabm_0_1111121111
                                                                            by contradiction /* cyclic */
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            next
                                                              case case_2
                                                              solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                     ) ▶₀ #t.5 )
                                                                case newkEnc_0_1111
                                                                solve( State_11111( ~prog_1, a, b, kEnc.1,
                                                                                    kSign.1
                                                                       ) ▶₀ #t.5 )
                                                                  case newkEnc_0_1111
                                                                  solve( State_1111111( ~prog_1.2,
                                                                                        ~prog_1111111, a, b,
                                                                                        kEnc.1, kSign.1
                                                                         ) ▶₀ #t.5 )
                                                                    case p_1_111111
                                                                    solve( State_1111111111111( $MH.3, $SH.3,
                                                                                                $pad.3,
                                                                                                ~prog_1.2,
                                                                                                ~prog_1111111.1,
                                                                                                ~prog_111111111,
                                                                                                a, b, kEnc.1,
                                                                                                kSign.1, lock,
                                                                                                m.1, seq.2
                                                                           ) ▶₀ #t.6 )
                                                                      case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                      solve( MID_Receiver( ~mid_111111111111
                                                                             ) ▶₃ #j.2 )
                                                                        case MessageIDRule
                                                                        solve( State_11111211111( ~prog_1.2,
                                                                                                  ~prog_1111121.4,
                                                                                                  ~prog_111112111.2,
                                                                                                  MH.3, SH.3,
                                                                                                  a, b,
                                                                                                  kEnc.1,
                                                                                                  kSign.1,
                                                                                                  m.1, pad.3,
                                                                                                  seq.2, lock
                                                                               ) ▶₀ #t.7 )
                                                                          case eventRecvabm_0_1111121111
                                                                          by contradiction /* cyclic */
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            next
                                                              case case_3
                                                              solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                     ) ▶₀ #t.5 )
                                                                case newkEnc_0_1111
                                                                solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                                       ) ▶₀ #t.5 )
                                                                  case newkEnc_0_1111
                                                                  solve( State_1111111( ~prog_1.1,
                                                                                        ~prog_1111111, a, b,
                                                                                        kEnc, kSign
                                                                         ) ▶₀ #t.5 )
                                                                    case p_1_111111
                                                                    solve( State_1111111111111( $MH.2, $SH.2,
                                                                                                $pad.2,
                                                                                                ~prog_1.1,
                                                                                                ~prog_1111111.1,
                                                                                                ~prog_111111111,
                                                                                                a, b, kEnc,
                                                                                                kSign, lock,
                                                                                                m, seq.1
                                                                           ) ▶₀ #t.6 )
                                                                      case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                      solve( MID_Receiver( ~mid_111111111111
                                                                             ) ▶₃ #j.2 )
                                                                        case MessageIDRule
                                                                        solve( State_11111211111( ~prog_1.1,
                                                                                                  ~prog_1111121.2,
                                                                                                  ~prog_111112111,
                                                                                                  MH.2, SH.2,
                                                                                                  a, b, kEnc,
                                                                                                  kSign, m,
                                                                                                  pad.2,
                                                                                                  seq.1, lock
                                                                               ) ▶₀ #t.7 )
                                                                          case eventRecvabm_0_1111121111
                                                                          solve( State_11111( ~prog_1, a, b,
                                                                                              kEnc, kSign
                                                                                 ) ▶₀ #t.7 )
                                                                            case newkEnc_0_1111
                                                                            solve( State_11111( ~prog_1, a, b,
                                                                                                kEnc, kSign
                                                                                   ) ▶₀ #t.7 )
                                                                              case newkEnc_0_1111
                                                                              solve( State_1111121( ~prog_1.1,
                                                                                                    ~prog_1111121,
                                                                                                    a, b,
                                                                                                    kEnc,
                                                                                                    kSign
                                                                                     ) ▶₀ #t.7 )
                                                                                case p_1_111112
                                                                                solve( State_11111( ~prog_1,
                                                                                                    a, b,
                                                                                                    kEnc,
                                                                                                    kSign
                                                                                       ) ▶₀ #t.7 )
                                                                                  case newkEnc_0_1111
                                                                                  solve( State_11111( ~prog_1,
                                                                                                      a, b,
                                                                                                      kEnc,
                                                                                                      kSign
                                                                                         ) ▶₀ #t.7 )
                                                                                    case newkEnc_0_1111
                                                                                    solve( State_11111( ~prog_1,
                                                                                                        a, b,
                                                                                                        kEnc,
                                                                                                        kSign
                                                                                           ) ▶₀ #t.7 )
                                                                                      case newkEnc_0_1111
                                                                                      solve( State_11111( ~prog_1,
                                                                                                          a,
                                                                                                          b,
                                                                                                          kEnc,
                                                                                                          kSign
                                                                                             ) ▶₀ #t.7 )
                                                                                        case newkEnc_0_1111
                                                                                        solve( State_1111111( ~prog_1.1,
                                                                                                              ~prog_1111111,
                                                                                                              a,
                                                                                                              b,
                                                                                                              kEnc,
                                                                                                              kSign
                                                                                               ) ▶₀ #t.7 )
                                                                                          case p_1_111111
                                                                                          solve( State_11111211111( ~prog_1.1,
                                                                                                                    ~prog_1111121.2,
                                                                                                                    ~prog_111112111,
                                                                                                                    MH.2,
                                                                                                                    SH.2,
                                                                                                                    a,
                                                                                                                    b,
                                                                                                                    kEnc,
                                                                                                                    kSign,
                                                                                                                    m,
                                                                                                                    pad.2,
                                                                                                                    seq.1,
                                                                                                                    lock
                                                                                                 ) ▶₀ #t.7 )
                                                                                            case eventRecvabm_0_1111121111
                                                                                            solve( State_11111( ~prog_1,
                                                                                                                a,
                                                                                                                b,
                                                                                                                kEnc,
                                                                                                                kSign
                                                                                                   ) ▶₀ #t.7 )
                                                                                              case newkEnc_0_1111
                                                                                              solve( State_11111( ~prog_1,
                                                                                                                  a,
                                                                                                                  b,
                                                                                                                  kEnc,
                                                                                                                  kSign
                                                                                                     ) ▶₀ #t.7 )
                                                                                                case newkEnc_0_1111
                                                                                                solve( State_1111121( ~prog_1.1,
                                                                                                                      ~prog_1111121,
                                                                                                                      a,
                                                                                                                      b,
                                                                                                                      kEnc,
                                                                                                                      kSign
                                                                                                       ) ▶₀ #t.7 )
                                                                                                  case p_1_111112
                                                                                                  solve( State_11111( ~prog_1,
                                                                                                                      a,
                                                                                                                      b,
                                                                                                                      kEnc,
                                                                                                                      kSign
                                                                                                         ) ▶₀ #t.7 )
                                                                                                    case newkEnc_0_1111
                                                                                                    solve( State_11111( ~prog_1,
                                                                                                                        a,
                                                                                                                        b,
                                                                                                                        kEnc,
                                                                                                                        kSign
                                                                                                           ) ▶₀ #t.7 )
                                                                                                      case newkEnc_0_1111
                                                                                                      solve( State_11111( ~prog_1,
                                                                                                                          a,
                                                                                                                          b,
                                                                                                                          kEnc,
                                                                                                                          kSign
                                                                                                             ) ▶₀ #t.7 )
                                                                                                        case newkEnc_0_1111
                                                                                                        solve( State_11111( ~prog_1,
                                                                                                                            a,
                                                                                                                            b,
                                                                                                                            kEnc,
                                                                                                                            kSign
                                                                                                               ) ▶₀ #t.7 )
                                                                                                          case newkEnc_0_1111
                                                                                                          solve( State_11111( ~prog_1,
                                                                                                                              a,
                                                                                                                              b,
                                                                                                                              kEnc,
                                                                                                                              kSign
                                                                                                                 ) ▶₀ #t.7 )
                                                                                                            case newkEnc_0_1111
                                                                                                            solve( State_11111( ~prog_1,
                                                                                                                                a,
                                                                                                                                b,
                                                                                                                                kEnc,
                                                                                                                                kSign
                                                                                                                   ) ▶₀ #t.7 )
                                                                                                              case newkEnc_0_1111
                                                                                                              solve( State_1111121( ~prog_1.1,
                                                                                                                                    ~prog_1111121,
                                                                                                                                    a,
                                                                                                                                    b,
                                                                                                                                    kEnc,
                                                                                                                                    kSign
                                                                                                                     ) ▶₀ #t.7 )
                                                                                                                case p_1_111112
                                                                                                                solve( State_11111( ~prog_1,
                                                                                                                                    a,
                                                                                                                                    b,
                                                                                                                                    kEnc,
                                                                                                                                    kSign
                                                                                                                       ) ▶₀ #t.7 )
                                                                                                                  case newkEnc_0_1111
                                                                                                                  solve( State_11111( ~prog_1,
                                                                                                                                      a,
                                                                                                                                      b,
                                                                                                                                      kEnc,
                                                                                                                                      kSign
                                                                                                                         ) ▶₀ #t.7 )
                                                                                                                    case newkEnc_0_1111
                                                                                                                    solve( State_11111( ~prog_1,
                                                                                                                                        a,
                                                                                                                                        b,
                                                                                                                                        kEnc,
                                                                                                                                        kSign
                                                                                                                           ) ▶₀ #t.7 )
                                                                                                                      case newkEnc_0_1111
                                                                                                                      solve( State_11111( ~prog_1,
                                                                                                                                          a,
                                                                                                                                          b,
                                                                                                                                          kEnc,
                                                                                                                                          kSign
                                                                                                                             ) ▶₀ #t.7 )
                                                                                                                        case newkEnc_0_1111
                                                                                                                        solve( !KU( senc(<
                                                                                                                                          (
                                                                                                                                           dif+
                                                                                                                                           seq
                                                                                                                                          ), 
                                                                                                                                          m2, 
                                                                                                                                          pad.1, 
                                                                                                                                          mac(<
                                                                                                                                               MH.1, 
                                                                                                                                               SH.1, 
                                                                                                                                               (
                                                                                                                                                dif+
                                                                                                                                                seq
                                                                                                                                               ), 
                                                                                                                                               m2, 
                                                                                                                                               pad.1
                                                                                                                                              >,
                                                                                                                                              ~n.3)
                                                                                                                                         >,
                                                                                                                                         ~n.2)
                                                                                                                               ) @ #vk.9 )
                                                                                                                          case c_senc
                                                                                                                          by solve( !KU( ~n.2
                                                                                                                                    ) @ #vk.15 )
                                                                                                                        next
                                                                                                                          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                                                                          solve( (¬(#vr.19 < #vr.29))  ∥
                                                                                                                                 (∃ dif.1.
                                                                                                                                   ((
                                                                                                                                     dif+
                                                                                                                                     seq
                                                                                                                                    ) =
                                                                                                                                    (
                                                                                                                                     seq+
                                                                                                                                     dif.1
                                                                                                                                    ))) )
                                                                                                                            case case_2
                                                                                                                            solve( (¬(#vr.29 < #vr.19))  ∥
                                                                                                                                   (∃ dif.1.
                                                                                                                                     (seq =
                                                                                                                                      (
                                                                                                                                       dif+
                                                                                                                                       seq+
                                                                                                                                       dif.1
                                                                                                                                      ))) )
                                                                                                                              case case_1
                                                                                                                              solve( ((#t.5 < #vr.31) ∧
                                                                                                                                      (∃ #t2.
                                                                                                                                        (Unlock_0( '0',
                                                                                                                                                   ~n.8,
                                                                                                                                                   <
                                                                                                                                                    ~n, 
                                                                                                                                                    ~n.1
                                                                                                                                                   >
                                                                                                                                         ) @ #t2)
                                                                                                                                       ∧
                                                                                                                                        (#t.5 < #t2) ∧
                                                                                                                                        (#t2 < #vr.31) ∧
                                                                                                                                        (∀ #t0
                                                                                                                                           pp.
                                                                                                                                          (Unlock( pp,
                                                                                                                                                   ~n.8,
                                                                                                                                                   <
                                                                                                                                                    ~n, 
                                                                                                                                                    ~n.1
                                                                                                                                                   >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          #t0 =
                                                                                                                                          #t2) ∧
                                                                                                                                        (∀ pp
                                                                                                                                           lpp
                                                                                                                                           #t0.
                                                                                                                                          (Lock( pp,
                                                                                                                                                 lpp,
                                                                                                                                                 <
                                                                                                                                                  ~n, 
                                                                                                                                                  ~n.1
                                                                                                                                                 >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          ((#t0 < #t.5) ∨
                                                                                                                                           (#t0 =
                                                                                                                                            #t.5) ∨
                                                                                                                                           (#t2 < #t0))) ∧
                                                                                                                                        (∀ pp
                                                                                                                                           lpp
                                                                                                                                           #t0.
                                                                                                                                          (Unlock( pp,
                                                                                                                                                   lpp,
                                                                                                                                                   <
                                                                                                                                                    ~n, 
                                                                                                                                                    ~n.1
                                                                                                                                                   >
                                                                                                                                           ) @ #t0)
                                                                                                                                         ⇒
                                                                                                                                          ((#t0 < #t.5) ∨
                                                                                                                                           (#t2 < #t0) ∨
                                                                                                                                           (#t2 =
                                                                                                                                            #t0)))))  ∥
                                                                                                                                     (#vr.31 < #t.5)  ∥
                                                                                                                                     (#t.5 =
                                                                                                                                      #vr.31) )
                                                                                                                                case case_1
                                                                                                                                by contradiction
                                                                                                                                   /*
                                                                                                                                   cyclic
                                                                                                                                   */
                                                                                                                              next
                                                                                                                                case case_2
                                                                                                                                solve( MID_Receiver( ~mid_111111111111.1
                                                                                                                                       ) ▶₃ #j.2 )
                                                                                                                                  case MessageIDRule
                                                                                                                                  solve( State_11111211( ~prog_1.2,
                                                                                                                                                         ~prog_1111121.2,
                                                                                                                                                         a,
                                                                                                                                                         b,
                                                                                                                                                         ~n.2,
                                                                                                                                                         ~n.3,
                                                                                                                                                         lock
                                                                                                                                         ) ▶₁ #j.2 )
                                                                                                                                    case lockba_0_1111121
                                                                                                                                    solve( ((#t.2 < #vr.33) ∧
                                                                                                                                            (∃ #t2.
                                                                                                                                              (Unlock_1( '1',
                                                                                                                                                         ~n.5,
                                                                                                                                                         <
                                                                                                                                                          ~n.1, 
                                                                                                                                                          ~n
                                                                                                                                                         >
                                                                                                                                               ) @ #t2)
                                                                                                                                             ∧
                                                                                                                                              (#t.2 < #t2) ∧
                                                                                                                                              (#t2 < #vr.33) ∧
                                                                                                                                              (∀ #t0
                                                                                                                                                 pp.
                                                                                                                                                (Unlock( pp,
                                                                                                                                                         ~n.5,
                                                                                                                                                         <
                                                                                                                                                          ~n.1, 
                                                                                                                                                          ~n
                                                                                                                                                         >
                                                                                                                                                 ) @ #t0)
                                                                                                                                               ⇒
                                                                                                                                                #t0 =
                                                                                                                                                #t2) ∧
                                                                                                                                              (∀ pp
                                                                                                                                                 lpp
                                                                                                                                                 #t0.
                                                                                                                                                (Lock( pp,
                                                                                                                                                       lpp,
                                                                                                                                                       <
                                                                                                                                                        ~n.1, 
                                                                                                                                                        ~n
                                                                                                                                                       >
                                                                                                                                                 ) @ #t0)
                                                                                                                                               ⇒
                                                                                                                                                ((#t0 < #t.2) ∨
                                                                                                                                                 (#t0 =
                                                                                                                                                  #t.2) ∨
                                                                                                                                                 (#t2 < #t0))) ∧
                                                                                                                                              (∀ pp
                                                                                                                                                 lpp
                                                                                                                                                 #t0.
                                                                                                                                                (Unlock( pp,
                                                                                                                                                         lpp,
                                                                                                                                                         <
                                                                                                                                                          ~n.1, 
                                                                                                                                                          ~n
                                                                                                                                                         >
                                                                                                                                                 ) @ #t0)
                                                                                                                                               ⇒
                                                                                                                                                ((#t0 < #t.2) ∨
                                                                                                                                                 (#t2 < #t0) ∨
                                                                                                                                                 (#t2 =
                                                                                                                                                  #t0)))))  ∥
                                                                                                                                           (#vr.33 < #t.2)  ∥
                                                                                                                                           (#t.2 =
                                                                                                                                            #vr.33) )
                                                                                                                                      case case_1
                                                                                                                                      solve( ((#t.3 < #vr.33) ∧
                                                                                                                                              (∃ #t2.
                                                                                                                                                (Unlock_1( '1',
                                                                                                                                                           ~n.7,
                                                                                                                                                           <
                                                                                                                                                            ~n.1, 
                                                                                                                                                            ~n
                                                                                                                                                           >
                                                                                                                                                 ) @ #t2)
                                                                                                                                               ∧
                                                                                                                                                (#t.3 < #t2) ∧
                                                                                                                                                (#t2 < #vr.33) ∧
                                                                                                                                                (∀ #t0
                                                                                                                                                   pp.
                                                                                                                                                  (Unlock( pp,
                                                                                                                                                           ~n.7,
                                                                                                                                                           <
                                                                                                                                                            ~n.1, 
                                                                                                                                                            ~n
                                                                                                                                                           >
                                                                                                                                                   ) @ #t0)
                                                                                                                                                 ⇒
                                                                                                                                                  #t0 =
                                                                                                                                                  #t2) ∧
                                                                                                                                                (∀ pp
                                                                                                                                                   lpp
                                                                                                                                                   #t0.
                                                                                                                                                  (Lock( pp,
                                                                                                                                                         lpp,
                                                                                                                                                         <
                                                                                                                                                          ~n.1, 
                                                                                                                                                          ~n
                                                                                                                                                         >
                                                                                                                                                   ) @ #t0)
                                                                                                                                                 ⇒
                                                                                                                                                  ((#t0 < #t.3) ∨
                                                                                                                                                   (#t0 =
                                                                                                                                                    #t.3) ∨
                                                                                                                                                   (#t2 < #t0))) ∧
                                                                                                                                                (∀ pp
                                                                                                                                                   lpp
                                                                                                                                                   #t0.
                                                                                                                                                  (Unlock( pp,
                                                                                                                                                           lpp,
                                                                                                                                                           <
                                                                                                                                                            ~n.1, 
                                                                                                                                                            ~n
                                                                                                                                                           >
                                                                                                                                                   ) @ #t0)
                                                                                                                                                 ⇒
                                                                                                                                                  ((#t0 < #t.3) ∨
                                                                                                                                                   (#t2 < #t0) ∨
                                                                                                                                                   (#t2 =
                                                                                                                                                    #t0)))))  ∥
                                                                                                                                             (#vr.33 < #t.3)  ∥
                                                                                                                                             (#t.3 =
                                                                                                                                              #vr.33) )
                                                                                                                                        case case_1
                                                                                                                                        solve( State_11111( ~prog_1,
                                                                                                                                                            a,
                                                                                                                                                            b,
                                                                                                                                                            kEnc.1,
                                                                                                                                                            kSign.1
                                                                                                                                               ) ▶₀ #t.7 )
                                                                                                                                          case newkEnc_0_1111
                                                                                                                                          solve( State_11111( ~prog_1,
                                                                                                                                                              a,
                                                                                                                                                              b,
                                                                                                                                                              kEnc.1,
                                                                                                                                                              kSign.1
                                                                                                                                                 ) ▶₀ #t.7 )
                                                                                                                                            case newkEnc_0_1111
                                                                                                                                            solve( State_1111111( ~prog_1.2,
                                                                                                                                                                  ~prog_1111111.2,
                                                                                                                                                                  a,
                                                                                                                                                                  b,
                                                                                                                                                                  kEnc.1,
                                                                                                                                                                  kSign.1
                                                                                                                                                   ) ▶₀ #t.7 )
                                                                                                                                              case p_1_111111
                                                                                                                                              solve( State_1111111111111( $MH.3,
                                                                                                                                                                          $SH.3,
                                                                                                                                                                          $pad.3,
                                                                                                                                                                          ~prog_1.2,
                                                                                                                                                                          ~prog_1111111.3,
                                                                                                                                                                          ~prog_111111111.2,
                                                                                                                                                                          a,
                                                                                                                                                                          b,
                                                                                                                                                                          kEnc.1,
                                                                                                                                                                          kSign.1,
                                                                                                                                                                          lock,
                                                                                                                                                                          m.1,
                                                                                                                                                                          seq.2
                                                                                                                                                     ) ▶₀ #t.8 )
                                                                                                                                                case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                                                                                                by contradiction
                                                                                                                                                   /*
                                                                                                                                                   cyclic
                                                                                                                                                   */
                                                                                                                                              qed
                                                                                                                                            qed
                                                                                                                                          qed
                                                                                                                                        qed
                                                                                                                                      next
                                                                                                                                        case case_2
                                                                                                                                        solve( State_11111( ~prog_1,
                                                                                                                                                            a,
                                                                                                                                                            b,
                                                                                                                                                            kEnc.1,
                                                                                                                                                            kSign.1
                                                                                                                                               ) ▶₀ #t.7 )
                                                                                                                                          case newkEnc_0_1111
                                                                                                                                          solve( State_11111( ~prog_1,
                                                                                                                                                              a,
                                                                                                                                                              b,
                                                                                                                                                              kEnc.2,
                                                                                                                                                              kSign.2
                                                                                                                                                 ) ▶₀ #t.7 )
                                                                                                                                            case newkEnc_0_1111
                                                                                                                                            solve( State_1111111( ~prog_1.3,
                                                                                                                                                                  ~prog_1111111.2,
                                                                                                                                                                  a,
                                                                                                                                                                  b,
                                                                                                                                                                  kEnc.2,
                                                                                                                                                                  kSign.2
                                                                                                                                                   ) ▶₀ #t.7 )
                                                                                                                                              case p_1_111111
                                                                                                                                              solve( State_1111111111111( $MH.4,
                                                                                                                                                                          $SH.4,
                                                                                                                                                                          $pad.4,
                                                                                                                                                                          ~prog_1.3,
                                                                                                                                                                          ~prog_1111111.3,
                                                                                                                                                                          ~prog_111111111.2,
                                                                                                                                                                          a,
                                                                                                                                                                          b,
                                                                                                                                                                          kEnc.2,
                                                                                                                                                                          kSign.2,
                                                                                                                                                                          lock,
                                                                                                                                                                          m.2,
                                                                                                                                                                          seq.3
                                                                                                                                                     ) ▶₀ #t.8 )
                                                                                                                                                case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                                                                                                by contradiction
                                                                                                                                                   /*
                                                                                                                                                   cyclic
                                                                                                                                                   */
                                                                                                                                              qed
                                                                                                                                            qed
                                                                                                                                          qed
                                                                                                                                        qed
                                                                                                                                      next
                                                                                                                                        case case_3
                                                                                                                                        solve( State_11111( ~prog_1,
                                                                                                                                                            a,
                                                                                                                                                            b,
                                                                                                                                                            kEnc.1,
                                                                                                                                                            kSign.1
                                                                                                                                               ) ▶₀ #t.7 )
                                                                                                                                          case newkEnc_0_1111
                                                                                                                                          solve( State_11111( ~prog_1,
                                                                                                                                                              a,
                                                                                                                                                              b,
                                                                                                                                                              kEnc.1,
                                                                                                                                                              kSign.1
                                                                                                                                                 ) ▶₀ #t.7 )
                                                                                                                                            case newkEnc_0_1111
                                                                                                                                            solve( State_1111111( ~prog_1.2,
                                                                                                                                                                  ~prog_1111111.2,
                                                                                                                                                                  a,
                                                                                                                                                                  b,
                                                                                                                                                                  kEnc.1,
                                                                                                                                                                  kSign.1
                                                                                                                                                   ) ▶₀ #t.7 )
                                                                                                                                              case p_1_111111
                                                                                                                                              solve( State_1111111111111( $MH.3,
                                                                                                                                                                          $SH.3,
                                                                                                                                                                          $pad.3,
                                                                                                                                                                          ~prog_1.2,
                                                                                                                                                                          ~prog_1111111.3,
                                                                                                                                                                          ~prog_111111111.2,
                                                                                                                                                                          a,
                                                                                                                                                                          b,
                                                                                                                                                                          kEnc.1,
                                                                                                                                                                          kSign.1,
                                                                                                                                                                          lock,
                                                                                                                                                                          m.1,
                                                                                                                                                                          seq.2
                                                                                                                                                     ) ▶₀ #t.8 )
                                                                                                                                                case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                                                                                                by contradiction
                                                                                                                                                   /*
                                                                                                                                                   cyclic
                                                                                                                                                   */
                                                                                                                                              qed
                                                                                                                                            qed
                                                                                                                                          qed
                                                                                                                                        qed
                                                                                                                                      qed
                                                                                                                                    next
                                                                                                                                      case case_2
                                                                                                                                      solve( State_11111( ~prog_1,
                                                                                                                                                          a,
                                                                                                                                                          b,
                                                                                                                                                          kEnc.1,
                                                                                                                                                          kSign.1
                                                                                                                                             ) ▶₀ #t.7 )
                                                                                                                                        case newkEnc_0_1111
                                                                                                                                        solve( State_11111( ~prog_1,
                                                                                                                                                            a,
                                                                                                                                                            b,
                                                                                                                                                            kEnc.2,
                                                                                                                                                            kSign.2
                                                                                                                                               ) ▶₀ #t.7 )
                                                                                                                                          case newkEnc_0_1111
                                                                                                                                          solve( State_1111111( ~prog_1.3,
                                                                                                                                                                ~prog_1111111.2,
                                                                                                                                                                a,
                                                                                                                                                                b,
                                                                                                                                                                kEnc.2,
                                                                                                                                                                kSign.2
                                                                                                                                                 ) ▶₀ #t.7 )
                                                                                                                                            case p_1_111111
                                                                                                                                            solve( State_1111111111111( $MH.4,
                                                                                                                                                                        $SH.4,
                                                                                                                                                                        $pad.4,
                                                                                                                                                                        ~prog_1.3,
                                                                                                                                                                        ~prog_1111111.3,
                                                                                                                                                                        ~prog_111111111.2,
                                                                                                                                                                        a,
                                                                                                                                                                        b,
                                                                                                                                                                        kEnc.2,
                                                                                                                                                                        kSign.2,
                                                                                                                                                                        lock,
                                                                                                                                                                        m.2,
                                                                                                                                                                        seq.3
                                                                                                                                                   ) ▶₀ #t.8 )
                                                                                                                                              case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                                                                                                                                              by contradiction
                                                                                                                                                 /*
                                                                                                                                                 cyclic
                                                                                                                                                 */
                                                                                                                                            qed
                                                                                                                                          qed
                                                                                                                                        qed
                                                                                                                                      qed
                                                                                                                                    qed
                                                                                                                                  qed
                                                                                                                                qed
                                                                                                                              qed
                                                                                                                            qed
                                                                                                                          qed
                                                                                                                        qed
                                                                                                                      qed
                                                                                                                    qed
                                                                                                                  qed
                                                                                                                qed
                                                                                                              qed
                                                                                                            qed
                                                                                                          qed
                                                                                                        qed
                                                                                                      qed
                                                                                                    qed
                                                                                                  qed
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.1 )
            case newkEnc_0_1111
            solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.2 )
              case newkEnc_0_1111
              solve( State_1111121( ~prog_1.2, ~prog_1111121, a, b, kEnc.1, kSign.1
                     ) ▶₀ #t.2 )
                case p_1_111112
                solve( State_11111211111( ~prog_1.2, ~prog_1111121.3, ~prog_111112111,
                                          MH.3, SH.3, a, b, kEnc.1, kSign.1, m.2, pad.3, seq.2, lock
                       ) ▶₀ #t.3 )
                  case eventRecvabm_0_1111121111
                  solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.4 )
                    case newkEnc_0_1111
                    solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.4 )
                      case newkEnc_0_1111
                      solve( State_1111121( ~prog_1.2, ~prog_1111121.1, a, b, kEnc.1, kSign.1
                             ) ▶₀ #t.4 )
                        case p_1_111112
                        solve( State_11111211111( ~prog_1.2, ~prog_1111121.3, ~prog_111112111.1,
                                                  MH.3, SH.3, a, b, kEnc.1, kSign.1, m.2, pad.3, seq.2, lock
                               ) ▶₀ #t.5 )
                          case eventRecvabm_0_1111121111
                          by contradiction /* cyclic */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma delivery_wo_order:
  all-traces
  "∀ A B m #i.
    (Sent( A, B, m ) @ #i) ⇒ (∃ #k. (Recv( A, B, m ) @ #k) ∧ (#i < #k))"
/*
guarded formula characterizing all counter-examples:
"∃ A B m #i.
  (Sent( A, B, m ) @ #i) ∧ ∀ #k. (Recv( A, B, m ) @ #k) ⇒ ¬(#i < #k)"
*/
simplify
solve( State_11111111111( ~prog_1, ~prog_1111111, ~prog_111111111, A, B,
                          kEnc, kSign, lock, m, seq
       ) ▶₀ #i )
  case newm_0_1111111111
  solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.1 )
    case newkEnc_0_1111
    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.2 )
      case newkEnc_0_1111
      solve( State_1111111( ~prog_1.1, ~prog_1111111, a, b, kEnc, kSign
             ) ▶₀ #t.2 )
        case p_1_111111
        solve( State_1111111111111( $MH, $SH, $pad, ~prog_1.1, ~prog_1111111.1,
                                    ~prog_111111111, a, b, kEnc, kSign, lock, m, seq.1
               ) ▶₀ #t.3 )
          case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
          solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j )
            case MessageIDRule
            solve( State_11111( ~prog_1, a.1, b.1, kEnc, kSign ) ▶₀ #t.4 )
              case newkEnc_0_1111
              solve( State_11111( ~prog_1, a.1, b.1, kEnc, kSign ) ▶₀ #t.4 )
                case newkEnc_0_1111
                solve( State_11111211( ~prog_1.1, ~prog_1111121, a, b, ~n.2, ~n.3, lock
                       ) ▶₁ #j )
                  case lockba_0_1111121
                  solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                    case newkEnc_0_1111
                    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.4 )
                      case newkEnc_0_1111
                      solve( State_1111111( ~prog_1.1, ~prog_1111111, a, b, kEnc, kSign
                             ) ▶₀ #t.4 )
                        case p_1_111111
                        solve( State_11111211111( ~prog_1.1, ~prog_1111121.1, ~prog_111112111,
                                                  MH.1, SH.1, a, b, kEnc, kSign, m, pad.1, seq.1, lock
                               ) ▶₀ #t.4 )
                          case eventRecvabm_0_1111121111
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma delivery_order:
  all-traces
  "∀ A B m m2 #i #j.
    (((Sent( A, B, m ) @ #i) ∧ (Sent( A, B, m2 ) @ #j)) ∧ (#i < #j)) ⇒
    (∃ #k #l.
      ((Recv( A, B, m ) @ #k) ∧ (Recv( A, B, m2 ) @ #l)) ∧ (#k < #l))"
/*
guarded formula characterizing all counter-examples:
"∃ A B m m2 #i #j.
  (Sent( A, B, m ) @ #i) ∧ (Sent( A, B, m2 ) @ #j)
 ∧
  (#i < #j) ∧
  (∀ #k #l. (Recv( A, B, m ) @ #k) ∧ (Recv( A, B, m2 ) @ #l) ⇒ ¬(#k < #l))"
*/
simplify
solve( State_11111111111( ~prog_1, ~prog_1111111, ~prog_111111111, A, B,
                          kEnc, kSign, lock, m, seq
       ) ▶₀ #i )
  case newm_0_1111111111
  solve( State_11111111111( ~prog_1.1, ~prog_1111111.1, ~prog_111111111.1,
                            ~n, ~n.1, kEnc, kSign, lock, m2, seq.1
         ) ▶₀ #j )
    case newm_0_1111111111
    solve( (¬(#vr.1 < #vr.14))  ∥ (∃ dif. (seq.1 = (dif+seq))) )
      case case_1
      solve( (¬(#vr.14 < #vr.1))  ∥ (∃ dif. (seq = (dif+seq.1))) )
        case case_1
        solve( ((#vr.3 < #vr.16) ∧
                (∃ #t2.
                  (Unlock_0( '0', ~n.4, <~n, ~n.1> ) @ #t2)
                 ∧
                  (#vr.3 < #t2) ∧
                  (#t2 < #vr.16) ∧
                  (∀ #t0 pp. (Unlock( pp, ~n.4, <~n, ~n.1> ) @ #t0) ⇒ #t0 = #t2) ∧
                  (∀ pp lpp #t0.
                    (Lock( pp, lpp, <~n, ~n.1> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.3) ∨ (#t0 = #vr.3) ∨ (#t2 < #t0))) ∧
                  (∀ pp lpp #t0.
                    (Unlock( pp, lpp, <~n, ~n.1> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.3) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
               (#vr.16 < #vr.3)  ∥ (#vr.3 = #vr.16) )
          case case_1
          solve( (#vr.1 = #vr.14)  ∥ (#vr.14 < #vr.1) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (#vr.1 = #vr.14)  ∥ (#vr.14 < #vr.1) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_3
          by contradiction /* cyclic */
        qed
      next
        case case_2
        solve( ((#vr.3 < #vr.16) ∧
                (∃ #t2.
                  (Unlock_0( '0', ~n.4, <~n, ~n.1> ) @ #t2)
                 ∧
                  (#vr.3 < #t2) ∧
                  (#t2 < #vr.16) ∧
                  (∀ #t0 pp. (Unlock( pp, ~n.4, <~n, ~n.1> ) @ #t0) ⇒ #t0 = #t2) ∧
                  (∀ pp lpp #t0.
                    (Lock( pp, lpp, <~n, ~n.1> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.3) ∨ (#t0 = #vr.3) ∨ (#t2 < #t0))) ∧
                  (∀ pp lpp #t0.
                    (Unlock( pp, lpp, <~n, ~n.1> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.3) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
               (#vr.16 < #vr.3)  ∥ (#vr.3 = #vr.16) )
          case case_1
          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.1 )
            case newkEnc_0_1111
            solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.2 )
              case newkEnc_0_1111
              solve( State_1111111( ~prog_1.2, ~prog_1111111, a, b, kEnc.1, kSign.1
                     ) ▶₀ #t.2 )
                case p_1_111111
                solve( State_1111111111111( $MH.1, $SH.1, $pad.1, ~prog_1.2,
                                            ~prog_1111111.3, ~prog_111111111, a, b, kEnc.1, kSign.1, lock,
                                            m.1, seq.2
                       ) ▶₀ #t.3 )
                  case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                  by contradiction /* cyclic */
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.1 )
            case newkEnc_0_1111
            solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.2 )
              case newkEnc_0_1111
              solve( State_1111111( ~prog_1.2, ~prog_1111111, a, b, kEnc.1, kSign.1
                     ) ▶₀ #t.2 )
                case p_1_111111
                solve( State_1111111111111( $MH.1, $SH.1, $pad.1, ~prog_1.2,
                                            ~prog_1111111.3, ~prog_111111111, a, b, kEnc.1, kSign.1, lock,
                                            m.1, seq.2
                       ) ▶₀ #t.3 )
                  case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                  solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                    case MessageIDRule
                    solve( State_11111( ~prog_1, a.1, b.1, kEnc.1, kSign.1 ) ▶₀ #t.4 )
                      case newkEnc_0_1111
                      solve( State_11111( ~prog_1, a.1, b.1, kEnc.1, kSign.1 ) ▶₀ #t.4 )
                        case newkEnc_0_1111
                        solve( State_1111111( ~prog_1.3, ~prog_1111111.1, a.1, b.1, kEnc.1,
                                              kSign.1
                               ) ▶₀ #t.4 )
                          case p_1_111111
                          solve( State_1111111111111( $MH.2, $SH.2, $pad.2, ~prog_1.3,
                                                      ~prog_1111111.3, ~prog_111111111.1, a.1, b.1, kEnc.1,
                                                      kSign.1, lock.1, m.1, seq.2
                                 ) ▶₀ #t.5 )
                            case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                            by contradiction /* cyclic */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case case_2
      solve( (¬(#vr.14 < #vr.1))  ∥ (∃ dif.1. (seq = (dif+seq+dif.1))) )
        case case_1
        solve( ((#vr.3 < #vr.16) ∧
                (∃ #t2.
                  (Unlock_0( '0', ~n.4, <~n, ~n.1> ) @ #t2)
                 ∧
                  (#vr.3 < #t2) ∧
                  (#t2 < #vr.16) ∧
                  (∀ #t0 pp. (Unlock( pp, ~n.4, <~n, ~n.1> ) @ #t0) ⇒ #t0 = #t2) ∧
                  (∀ pp lpp #t0.
                    (Lock( pp, lpp, <~n, ~n.1> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.3) ∨ (#t0 = #vr.3) ∨ (#t2 < #t0))) ∧
                  (∀ pp lpp #t0.
                    (Unlock( pp, lpp, <~n, ~n.1> ) @ #t0)
                   ⇒
                    ((#t0 < #vr.3) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
               (#vr.16 < #vr.3)  ∥ (#vr.3 = #vr.16) )
          case case_1
          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.1 )
            case newkEnc_0_1111
            solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.2 )
              case newkEnc_0_1111
              solve( State_1111111( ~prog_1.2, ~prog_1111111, a, b, kEnc.1, kSign.1
                     ) ▶₀ #t.2 )
                case p_1_111111
                solve( State_1111111111111( $MH.1, $SH.1, $pad.1, ~prog_1.2,
                                            ~prog_1111111.3, ~prog_111111111, a, b, kEnc.1, kSign.1, lock,
                                            m.1, seq.2
                       ) ▶₀ #t.3 )
                  case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                  solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                    case MessageIDRule
                    solve( State_11111( ~prog_1, a.1, b.1, kEnc, kSign ) ▶₀ #t.3 )
                      case newkEnc_0_1111
                      solve( State_11111( ~prog_1, a.1, b.1, kEnc, kSign ) ▶₀ #t.3 )
                        case newkEnc_0_1111
                        solve( State_1111111( ~prog_1.2, ~prog_1111111.1, a.1, b.1, kEnc, kSign
                               ) ▶₀ #t.3 )
                          case p_1_111111
                          solve( State_1111111111111( $MH.1, $SH.1, $pad.1, ~prog_1.2,
                                                      ~prog_1111111.2, ~prog_111111111.1, a.1, b.1, kEnc,
                                                      kSign, lock.1, m, seq.1
                                 ) ▶₀ #t.4 )
                            case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                            solve( MID_Receiver( ~mid_111111111111.1 ) ▶₃ #j.2 )
                              case MessageIDRule
                              solve( State_11111( ~prog_1, a.2, b.2, kEnc, kSign ) ▶₀ #t.5 )
                                case newkEnc_0_1111
                                solve( State_11111( ~prog_1, a.2, b.2, kEnc, kSign ) ▶₀ #t.5 )
                                  case newkEnc_0_1111
                                  solve( State_11111211( ~prog_1.1, ~prog_1111121, a, b, ~n.2, ~n.3, lock
                                         ) ▶₁ #j.1 )
                                    case lockba_0_1111121
                                    solve( State_11111( ~prog_1, a.1, b.1, kEnc, kSign ) ▶₀ #t.5 )
                                      case newkEnc_0_1111
                                      solve( State_11111( ~prog_1, a.1, b.1, kEnc, kSign ) ▶₀ #t.5 )
                                        case newkEnc_0_1111
                                        solve( State_1111111( ~prog_1.2, ~prog_1111111, a.1, b.1, kEnc, kSign
                                               ) ▶₀ #t.5 )
                                          case p_1_111111
                                          solve( State_11111211111( ~prog_1.2, ~prog_1111121.2,
                                                                    ~prog_111112111, MH.2, SH.2, a.1, b.1,
                                                                    kEnc, kSign, m, pad.2, seq.1, lock.1
                                                 ) ▶₀ #t.5 )
                                            case eventRecvabm_0_1111121111
                                            solve( State_11111( ~prog_1, a.1, b.1, kEnc, kSign ) ▶₀ #t.6 )
                                              case newkEnc_0_1111
                                              solve( State_11111( ~prog_1, a.1, b.1, kEnc, kSign ) ▶₀ #t.6 )
                                                case newkEnc_0_1111
                                                solve( State_11111211( ~prog_1.1, ~prog_1111121.1, a, b, ~n.2,
                                                                       ~n.3, lock
                                                       ) ▶₁ #j.2 )
                                                  case lockba_0_1111121
                                                  solve( ((#vr.19 < #vr.24) ∧
                                                          (∃ #t2.
                                                            (Unlock_1( '1', ~n.8, <~n.1, ~n> ) @ #t2)
                                                           ∧
                                                            (#vr.19 < #t2) ∧
                                                            (#t2 < #vr.24) ∧
                                                            (∀ #t0 pp.
                                                              (Unlock( pp, ~n.8, <~n.1, ~n> ) @ #t0)
                                                             ⇒
                                                              #t0 = #t2) ∧
                                                            (∀ pp lpp #t0.
                                                              (Lock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                                             ⇒
                                                              ((#t0 < #vr.19) ∨
                                                               (#t0 = #vr.19) ∨
                                                               (#t2 < #t0))) ∧
                                                            (∀ pp lpp #t0.
                                                              (Unlock( pp, lpp, <~n.1, ~n> ) @ #t0)
                                                             ⇒
                                                              ((#t0 < #vr.19) ∨
                                                               (#t2 < #t0) ∨
                                                               (#t2 = #t0)))))  ∥
                                                         (#vr.24 < #vr.19)  ∥ (#vr.19 = #vr.24) )
                                                    case case_1
                                                    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.6 )
                                                      case newkEnc_0_1111
                                                      solve( State_11111( ~prog_1, a, b, kEnc, kSign
                                                             ) ▶₀ #t.6 )
                                                        case newkEnc_0_1111
                                                        solve( State_1111111( ~prog_1.1, ~prog_1111111.1, a,
                                                                              b, kEnc, kSign
                                                               ) ▶₀ #t.6 )
                                                          case p_1_111111
                                                          solve( State_11111211111( ~prog_1.1,
                                                                                    ~prog_1111121.2,
                                                                                    ~prog_111112111.1, MH.2,
                                                                                    SH.2, a, b, kEnc, kSign,
                                                                                    m, pad.2, seq.1, lock
                                                                 ) ▶₀ #t.6 )
                                                            case eventRecvabm_0_1111121111
                                                            by contradiction /* from formulas */
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  next
                                                    case case_2
                                                    solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.6 )
                                                      case newkEnc_0_1111
                                                      solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1
                                                             ) ▶₀ #t.6 )
                                                        case newkEnc_0_1111
                                                        solve( State_1111111( ~prog_1.2, ~prog_1111111.1, a,
                                                                              b, kEnc.1, kSign.1
                                                               ) ▶₀ #t.6 )
                                                          case p_1_111111
                                                          by solve( State_11111211111( ~prog_1.2,
                                                                                       ~prog_1111121.3,
                                                                                       ~prog_111112111.2,
                                                                                       MH.3, SH.3, a, b,
                                                                                       kEnc.1, kSign.1, m.1,
                                                                                       pad.3, seq.2, lock
                                                                    ) ▶₀ #t.6 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( State_11111( ~prog_1, a, b, kEnc, kSign ) ▶₀ #t.1 )
            case newkEnc_0_1111
            solve( State_11111( ~prog_1, a, b, kEnc.1, kSign.1 ) ▶₀ #t.2 )
              case newkEnc_0_1111
              solve( State_1111111( ~prog_1.2, ~prog_1111111, a, b, kEnc.1, kSign.1
                     ) ▶₀ #t.2 )
                case p_1_111111
                solve( State_1111111111111( $MH.1, $SH.1, $pad.1, ~prog_1.2,
                                            ~prog_1111111.3, ~prog_111111111, a, b, kEnc.1, kSign.1, lock,
                                            m.1, seq.2
                       ) ▶₀ #t.3 )
                  case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                  solve( MID_Receiver( ~mid_111111111111 ) ▶₃ #j.1 )
                    case MessageIDRule
                    solve( State_11111( ~prog_1, a.1, b.1, kEnc.1, kSign.1 ) ▶₀ #t.4 )
                      case newkEnc_0_1111
                      solve( State_11111( ~prog_1, a.1, b.1, kEnc.1, kSign.1 ) ▶₀ #t.4 )
                        case newkEnc_0_1111
                        solve( State_1111111( ~prog_1.3, ~prog_1111111.1, a.1, b.1, kEnc.1,
                                              kSign.1
                               ) ▶₀ #t.4 )
                          case p_1_111111
                          solve( State_1111111111111( $MH.2, $SH.2, $pad.2, ~prog_1.3,
                                                      ~prog_1111111.3, ~prog_111111111.1, a.1, b.1, kEnc.1,
                                                      kSign.1, lock.1, m.1, seq.2
                                 ) ▶₀ #t.5 )
                            case outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111
                            by contradiction /* cyclic */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

rule (modulo E) MessageIDRule[color=#ffffff, process="!"]:
   [ Fr( ~mid_ ) ] --> [ MID_Receiver( ~mid_ ), MID_Sender( ~mid_ ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init[color=#ffffff, process="!"]:
   [ ] --[ Init( ) ]-> [ State_( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_[color=#ffffff, process="!"]:
   [ State_( ) ] --> [ !Semistate_1( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_1_[color=#ffffff, process="!"]:
   [ Fr( ~prog_1 ), !Semistate_1( ) ]
  --[ ProgressFrom_1( ~prog_1 ) ]->
   [ State_1( ~prog_1 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newa_0_1[color=#ffffff, process="new a;"]:
   [ State_1( ~prog_1 ), Fr( a ) ] --> [ State_11( ~prog_1, a ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newb_0_11[color=#ffffff, process="new b;"]:
   [ State_11( ~prog_1, a ), Fr( b ) ] --> [ State_111( ~prog_1, a, b ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newkSign_0_111[color=#ffffff, process="new kSign;"]:
   [ State_111( ~prog_1, a, b ), Fr( kSign ) ]
  -->
   [ State_1111( ~prog_1, a, b, kSign ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newkEnc_0_1111[color=#ffffff, process="new kEnc;"]:
   [ State_1111( ~prog_1, a, b, kSign ), Fr( kEnc ) ]
  -->
   [ State_11111( ~prog_1, a, b, kEnc, kSign ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_11111[color=#ffffff, process="|"]:
   [ State_11111( ~prog_1, a, b, kEnc, kSign ) ]
  --[ ProgressTo_111111( ~prog_1 ), ProgressTo_111112( ~prog_1 ) ]->
   [
   State_111111( ~prog_1, a, b, kEnc, kSign ),
   State_111112( ~prog_1, a, b, kEnc, kSign )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_111111[color=#804046, process="!"]:
   [ State_111111( ~prog_1, a, b, kEnc, kSign ) ]
  -->
   [ !Semistate_1111111( ~prog_1, a, b, kEnc, kSign ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_1_111111[color=#804046, process="!"]:
   [ Fr( ~prog_1111111 ), !Semistate_1111111( ~prog_1, a, b, kEnc, kSign ) ]
  --[ ProgressFrom_1111111( ~prog_1111111 ) ]->
   [ State_1111111( ~prog_1, ~prog_1111111, a, b, kEnc, kSign ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) lockab_0_1111111[color=#804046, process="lock <a, b>;"]:
   [ State_1111111( ~prog_1, ~prog_1111111, a, b, kEnc, kSign ), Fr( lock )
   ]
  --[
  ProgressTo_11111111( ~prog_1111111 ), Lock_0( '0', lock, <a, b> ),
  Lock( '0', lock, <a, b> )
  ]->
   [ State_11111111( ~prog_1, ~prog_1111111, a, b, kEnc, kSign, lock ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) incseq_0_11111111[color=#804046, process="in('c',seq);"]:
   [
   Fr( ~prog_111111111 ),
   State_11111111( ~prog_1, ~prog_1111111, a, b, kEnc, kSign, lock ),
   In( <'c', seq> )
   ]
  --[ ProgressFrom_111111111( ~prog_111111111 ), ChannelIn( <'c', seq> )
  ]->
   [
   State_111111111( ~prog_1, ~prog_1111111, ~prog_111111111, a, b, kEnc,
                    kSign, lock, seq
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventSeqSentabseq_0_111111111[color=#804046,
                                              process="event Seq_Sent( a, b, seq );"]:
   [
   State_111111111( ~prog_1, ~prog_1111111, ~prog_111111111, a, b, kEnc,
                    kSign, lock, seq
   )
   ]
  --[ Seq_Sent( a, b, seq ) ]->
   [
   State_1111111111( ~prog_1, ~prog_1111111, ~prog_111111111, a, b, kEnc,
                     kSign, lock, seq
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newm_0_1111111111[color=#804046, process="new m;"]:
   [
   State_1111111111( ~prog_1, ~prog_1111111, ~prog_111111111, a, b, kEnc,
                     kSign, lock, seq
   ),
   Fr( m )
   ]
  -->
   [
   State_11111111111( ~prog_1, ~prog_1111111, ~prog_111111111, a, b, kEnc,
                      kSign, lock, m, seq
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventSentabm_0_11111111111[color=#804046,
                                           process="event Sent( a, b, m );"]:
   [
   State_11111111111( ~prog_1, ~prog_1111111, ~prog_111111111, a, b, kEnc,
                      kSign, lock, m, seq
   )
   ]
  --[ Sent( a, b, m ) ]->
   [
   State_111111111111( ~prog_1, ~prog_1111111, ~prog_111111111, a, b, kEnc,
                       kSign, lock, m, seq
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_111111111111[color=#804046,
                                                                          process="out('r',<$MH, $SH, 
 senc(<seq, m, $pad, mac(<$MH, $SH, seq, m, $pad>, kSign)>, kEnc)>);"]:
   [
   MID_Sender( ~mid_111111111111 ),
   State_111111111111( ~prog_1, ~prog_1111111, ~prog_111111111, a, b, kEnc,
                       kSign, lock, m, seq
   )
   ]
  --[
  Send( ~mid_111111111111,
        <$MH, $SH, 
         senc(<seq, m, $pad, mac(<$MH, $SH, seq, m, $pad>, kSign)>, kEnc)>
  )
  ]->
   [
   Out( <$MH, $SH, 
         senc(<seq, m, $pad, mac(<$MH, $SH, seq, m, $pad>, kSign)>, kEnc)>
   ),
   State_1111111111111( $MH, $SH, $pad, ~prog_1, ~prog_1111111,
                        ~prog_111111111, a, b, kEnc, kSign, lock, m, seq
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) unlockab_0_1111111111111[color=#804046,
                                         process="unlock <a, b>;"]:
   [
   State_1111111111111( $MH, $SH, $pad, ~prog_1, ~prog_1111111,
                        ~prog_111111111, a, b, kEnc, kSign, lock, m, seq
   )
   ]
  --[
  ProgressTo_11111111111111( ~prog_111111111 ),
  Unlock_0( '0', lock, <a, b> ), Unlock( '0', lock, <a, b> )
  ]->
   [
   State_11111111111111( $MH, $SH, $pad, ~prog_1, ~prog_1111111,
                         ~prog_111111111, a, b, kEnc, kSign, lock, m, seq
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_11111111111111[color=#804046, process="0"]:
   [
   State_11111111111111( $MH, $SH, $pad, ~prog_1, ~prog_1111111,
                         ~prog_111111111, a, b, kEnc, kSign, lock, m, seq
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_111112[color=#628040, process="!"]:
   [ State_111112( ~prog_1, a, b, kEnc, kSign ) ]
  -->
   [ !Semistate_1111121( ~prog_1, a, b, kEnc, kSign ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_1_111112[color=#628040, process="!"]:
   [ Fr( ~prog_1111121 ), !Semistate_1111121( ~prog_1, a, b, kEnc, kSign ) ]
  --[ ProgressFrom_1111121( ~prog_1111121 ) ]->
   [ State_1111121( ~prog_1, ~prog_1111121, a, b, kEnc, kSign ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) lockba_0_1111121[color=#628040, process="lock <b, a>;"]:
   [
   State_1111121( ~prog_1, ~prog_1111121, a, b, kEnc, kSign ), Fr( lock.1 )
   ]
  --[
  ProgressTo_11111211( ~prog_1111121 ), Lock_1( '1', lock.1, <b, a> ),
  Lock( '1', lock.1, <b, a> )
  ]->
   [ State_11111211( ~prog_1, ~prog_1111121, a, b, kEnc, kSign, lock.1 ) ]

  /*
  rule (modulo AC) lockba_0_1111121[color=#628040, process="lock <b, a>;"]:
     [ State_1111121( ~prog_1, ~prog_1111121, a, b, kEnc, kSign ), Fr( lock )
     ]
    --[
    ProgressTo_11111211( ~prog_1111121 ), Lock_1( '1', lock, <b, a> ),
    Lock( '1', lock, <b, a> )
    ]->
     [ State_11111211( ~prog_1, ~prog_1111121, a, b, kEnc, kSign, lock ) ]
  */

rule (modulo E) inrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_11111211[color=#628040,
                                                                     process="in('r',<MH, SH, 
 senc(<seq, m, pad, mac(<MH, SH, seq, m, pad>, kSign)>, kEnc)>);"]:
   [
   Fr( ~prog_111112111 ),
   State_11111211( ~prog_1, ~prog_1111121, a, b, kEnc, kSign, lock.1 ),
   In( <MH, SH, senc(<seq, m, pad, mac(<MH, SH, seq, m, pad>, kSign)>, kEnc)
       >
   ),
   MID_Receiver( ~mid_11111211 )
   ]
  --[
  ProgressFrom_111112111( ~prog_111112111 ),
  Receive( ~mid_11111211,
           <MH, SH, senc(<seq, m, pad, mac(<MH, SH, seq, m, pad>, kSign)>, kEnc)>
  )
  ]->
   [
   State_111112111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                    kEnc, kSign, m, pad, seq, lock.1
   )
   ]

  /*
  rule (modulo AC) inrMHSHsencseqmpadmacMHSHseqmpadkSignkEnc_0_11111211[color=#628040,
                                                                        process="in('r',<MH, SH, 
 senc(<seq, m, pad, mac(<MH, SH, seq, m, pad>, kSign)>, kEnc)>);"]:
     [
     Fr( ~prog_111112111 ),
     State_11111211( ~prog_1, ~prog_1111121, a, b, kEnc, kSign, lock ),
     In( <MH, SH, senc(<seq, m, pad, mac(<MH, SH, seq, m, pad>, kSign)>, kEnc)
         >
     ),
     MID_Receiver( ~mid_11111211 )
     ]
    --[
    ProgressFrom_111112111( ~prog_111112111 ),
    Receive( ~mid_11111211,
             <MH, SH, senc(<seq, m, pad, mac(<MH, SH, seq, m, pad>, kSign)>, kEnc)>
    )
    ]->
     [
     State_111112111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                      kEnc, kSign, m, pad, seq, lock
     )
     ]
  */

rule (modulo E) eventSeqRecvabseq_0_111112111[color=#628040,
                                              process="event Seq_Recv( a, b, seq );"]:
   [
   State_111112111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                    kEnc, kSign, m, pad, seq, lock.1
   )
   ]
  --[ Seq_Recv( a, b, seq ) ]->
   [
   State_1111121111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                     kEnc, kSign, m, pad, seq, lock.1
   )
   ]

  /*
  rule (modulo AC) eventSeqRecvabseq_0_111112111[color=#628040,
                                                 process="event Seq_Recv( a, b, seq );"]:
     [
     State_111112111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                      kEnc, kSign, m, pad, seq, lock
     )
     ]
    --[ Seq_Recv( a, b, seq ) ]->
     [
     State_1111121111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                       kEnc, kSign, m, pad, seq, lock
     )
     ]
  */

rule (modulo E) eventRecvabm_0_1111121111[color=#628040,
                                          process="event Recv( a, b, m );"]:
   [
   State_1111121111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                     kEnc, kSign, m, pad, seq, lock.1
   )
   ]
  --[ Recv( a, b, m ) ]->
   [
   State_11111211111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                      kEnc, kSign, m, pad, seq, lock.1
   )
   ]

  /*
  rule (modulo AC) eventRecvabm_0_1111121111[color=#628040,
                                             process="event Recv( a, b, m );"]:
     [
     State_1111121111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                       kEnc, kSign, m, pad, seq, lock
     )
     ]
    --[ Recv( a, b, m ) ]->
     [
     State_11111211111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                        kEnc, kSign, m, pad, seq, lock
     )
     ]
  */

rule (modulo E) unlockba_0_11111211111[color=#628040,
                                       process="unlock <b, a>;"]:
   [
   State_11111211111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                      kEnc, kSign, m, pad, seq, lock.1
   )
   ]
  --[
  ProgressTo_111112111111( ~prog_111112111 ),
  Unlock_1( '1', lock.1, <b, a> ), Unlock( '1', lock.1, <b, a> )
  ]->
   [
   State_111112111111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a,
                       b, kEnc, kSign, m, pad, seq, lock.1
   )
   ]

  /*
  rule (modulo AC) unlockba_0_11111211111[color=#628040,
                                          process="unlock <b, a>;"]:
     [
     State_11111211111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a, b,
                        kEnc, kSign, m, pad, seq, lock
     )
     ]
    --[
    ProgressTo_111112111111( ~prog_111112111 ),
    Unlock_1( '1', lock, <b, a> ), Unlock( '1', lock, <b, a> )
    ]->
     [
     State_111112111111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a,
                         b, kEnc, kSign, m, pad, seq, lock
     )
     ]
  */

rule (modulo E) p_0_111112111111[color=#628040, process="0"]:
   [
   State_111112111111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a,
                       b, kEnc, kSign, m, pad, seq, lock.1
   )
   ]
  -->
   [ ]

  /*
  rule (modulo AC) p_0_111112111111[color=#628040, process="0"]:
     [
     State_111112111111( ~prog_1, ~prog_1111121, ~prog_111112111, MH, SH, a,
                         b, kEnc, kSign, m, pad, seq, lock
     )
     ]
    -->
     [ ]
  */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction locking_0:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_0( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_0( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_1:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_1( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_1( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction Progress_1_to_111111:
  "∀ prog_1 #t.
    (ProgressFrom_1( prog_1 ) @ #t) ⇒
    (∃ #t.1. ProgressTo_111111( prog_1 ) @ #t.1)"

restriction Progress_1_to_111112:
  "∀ prog_1 #t.
    (ProgressFrom_1( prog_1 ) @ #t) ⇒
    (∃ #t.1. ProgressTo_111112( prog_1 ) @ #t.1)"

restriction Progress_1111111_to_11111111:
  "∀ prog_1111111 #t.
    (ProgressFrom_1111111( prog_1111111 ) @ #t) ⇒
    (∃ #t.1. ProgressTo_11111111( prog_1111111 ) @ #t.1)"

restriction Progress_111111111_to_11111111111111:
  "∀ prog_111111111 #t.
    (ProgressFrom_111111111( prog_111111111 ) @ #t) ⇒
    (∃ #t.1. ProgressTo_11111111111111( prog_111111111 ) @ #t.1)"

restriction Progress_1111121_to_11111211:
  "∀ prog_1111121 #t.
    (ProgressFrom_1111121( prog_1111121 ) @ #t) ⇒
    (∃ #t.1. ProgressTo_11111211( prog_1111121 ) @ #t.1)"

restriction Progress_111112111_to_111112111111:
  "∀ prog_111112111 #t.
    (ProgressFrom_111112111( prog_111112111 ) @ #t) ⇒
    (∃ #t.1. ProgressTo_111112111111( prog_111112111 ) @ #t.1)"

restriction progressInit:
  "∃ #t. Init( ) @ #t"

restriction reliable:
  "∀ #i x y.
    (Send( x, y ) @ #i) ⇒ (∃ #j. (Receive( x, y ) @ #j) ∧ (#i < #j))"

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.


analyzing: examples/sapic/fast/SCADA/opc_ua_secure_conversation.spthy

------------------------------------------------------------------------------
analyzed: examples/sapic/fast/SCADA/opc_ua_secure_conversation.spthy

  output:          examples/sapic/fast/SCADA/opc_ua_secure_conversation.spthy.tmp
  processing time: 30.423713508s
  Executable (exists-trace): verified (47 steps)
  all_received_were_sent (all-traces): verified (16 steps)
  all_received_were_sent_injective (all-traces): verified (138 steps)
  order (all-traces): verified (203 steps)
  delivery_wo_order (all-traces): verified (15 steps)
  delivery_order (all-traces): verified (71 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: examples/sapic/fast/SCADA/opc_ua_secure_conversation.spthy

  output:          examples/sapic/fast/SCADA/opc_ua_secure_conversation.spthy.tmp
  processing time: 30.423713508s
  Executable (exists-trace): verified (47 steps)
  all_received_were_sent (all-traces): verified (16 steps)
  all_received_were_sent_injective (all-traces): verified (138 steps)
  order (all-traces): verified (203 steps)
  delivery_wo_order (all-traces): verified (15 steps)
  delivery_order (all-traces): verified (71 steps)

==============================================================================
*/
