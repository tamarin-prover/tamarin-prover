theory SimpleIf begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



heuristic: p

predicate: Equal( h1, h2 )<=>h1 = h2



lemma bogus_exists:
  exists-trace "∃ #i. Bogus( ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ #i. (Bogus( ) @ #i)"
*/
simplify
solve( State_1( h ) ▶₀ #i )
  case Init
  SOLVED // trace found
qed







rule (modulo E) Init[color=#ffffff, process="new h.1;", issapicrule]:
   [ Fr( h.1 ) ] --[ Init( ) ]-> [ State_1( h.1 ) ]

  /*
  rule (modulo AC) Init[color=#ffffff, process="new h.1;", issapicrule]:
     [ Fr( h ) ] --[ Init( ) ]-> [ State_1( h ) ]
  */

restriction Restr_ifEqualhh_0_1_1:
  "∀ x #NOW x.1. (Restr_ifEqualhh_0_1_1( x, x.1 ) @ #NOW) ⇒ (x = x.1)"
  // safety formula

rule (modulo E) ifEqualhh_0_1[color=#ffffff,
                              process="if Equal( h.1, h.1 )", issapicrule]:
   [ State_1( h.1 ) ]
  --[ Bogus( ), Restr_ifEqualhh_0_1_1( h.1, h.1 ) ]->
   [ ]

  /*
  rule (modulo AC) ifEqualhh_0_1[color=#ffffff,
                                 process="if Equal( h.1, h.1 )", issapicrule]:
     [ State_1( h ) ] --[ Bogus( ), Restr_ifEqualhh_0_1_1( h, h ) ]-> [ ]
  */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.9.0
Maude version 3.4
Git revision: f187584ba8325431d43d5e0a58baa381ac2c3f47, branch: develop
Compiled at: 2024-10-29 14:19:56.449404967 UTC
*/

end
/* Output

==============================================================================
summary of summaries:

analyzed: examples/sapic/fast/feature-predicates/simple_example.spthy

  output:          examples/sapic/fast/feature-predicates/simple_example.spthy.tmp
  processing time: 0.06s
  
  bogus_exists (exists-trace): verified (3 steps)

==============================================================================
*/
