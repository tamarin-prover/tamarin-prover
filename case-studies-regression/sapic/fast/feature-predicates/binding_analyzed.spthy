theory PredicatesBinding begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



heuristic: p

predicate: Added( x )<=>∃ #a. (A( x ) @ #a) ∧ (#a < #NOW)



lemma C_exists:
  exists-trace "∃ #i. C( ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ #i. (C( ) @ #i)"
*/
simplify
solve( State_12( a ) ▶₀ #i )
  case Init
  solve( State_11( ~n ) ▶₀ #a )
    case Init
    SOLVED // trace found
  qed
qed

lemma A_before_C:
  all-traces "∀ #c. (C( ) @ #c) ⇒ (∃ #a a.1. A( a.1 ) @ #a)"
/*
guarded formula characterizing all counter-examples:
"∃ #c. (C( ) @ #c) ∧ ∀ #a a.1. (A( a.1 ) @ #a) ⇒ ⊥"
*/
simplify
by contradiction /* from formulas */







rule (modulo E) eventAa_0_11[color=#ffffff, process="event A( a.1 );"]:
   [ State_11( a.1 ) ] --[ A( a.1 ) ]-> [ ]

  /*
  rule (modulo AC) eventAa_0_11[color=#ffffff, process="event A( a.1 );"]:
     [ State_11( a ) ] --[ A( a ) ]-> [ ]
  */

rule (modulo E) Init[color=#ffffff, process="new a.1;"]:
   [ Fr( a.1 ) ] --[ Init( ) ]-> [ State_11( a.1 ), State_12( a.1 ) ]

  /*
  rule (modulo AC) Init[color=#ffffff, process="new a.1;"]:
     [ Fr( a ) ] --[ Init( ) ]-> [ State_11( a ), State_12( a ) ]
  */

restriction Restr_ifAddeda_0_12_1:
  "∀ x #NOW.
    (Restr_ifAddeda_0_12_1( x ) @ #NOW) ⇒
    (∃ #a. (A( x ) @ #a) ∧ (#a < #NOW))"

rule (modulo E) ifAddeda_0_12[color=#ffffff, process="if Added( a.1 )"]:
   [ State_12( a.1 ) ] --[ C( ), Restr_ifAddeda_0_12_1( a.1 ) ]-> [ ]

  /*
  rule (modulo AC) ifAddeda_0_12[color=#ffffff, process="if Added( a.1 )"]:
     [ State_12( a ) ] --[ C( ), Restr_ifAddeda_0_12_1( a ) ]-> [ ]
  */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.7.1
Maude version 3.2.1
Git revision: 4b299c253445d7bbc7fce41abf0b0d5659bb1d58, branch: develop
Compiled at: 2023-06-26 11:54:20.223793825 UTC
*/

end
/* Output
maude tool: 'maude'
 checking version: 3.2.1. OK.
 checking installation: OK.

==============================================================================
summary of summaries:

analyzed: examples/sapic/fast/feature-predicates/binding.spthy

  output:          examples/sapic/fast/feature-predicates/binding.spthy.tmp
  processing time: 0.06s
  
  C_exists (exists-trace): verified (4 steps)
  A_before_C (all-traces): verified (2 steps)

==============================================================================
*/
