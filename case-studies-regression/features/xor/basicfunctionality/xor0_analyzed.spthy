theory xor0 begin

// Function signature and definition of the equational theory E

builtins: xor
functions: fst/1[destructor], pair/2, snd/1[destructor]
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2





rule (modulo E) challenge:
   [ Fr( ~a ), Fr( ~b ) ] --[ Challenge( (~a⊕~b) ) ]-> [ Out( <~a, ~b> ) ]

  /*
  rule (modulo AC) challenge:
     [ Fr( ~a ), Fr( ~b ) ] --[ Challenge( z ) ]-> [ Out( <~a, ~b> ) ]
    variants (modulo AC)
    1. ~a    = ~a.4
       ~b    = ~b.4
       z     = (~a.4⊕~b.4)
    
    2. ~a    = ~x.4
       ~b    = ~x.4
       z     = zero
  */

rule (modulo E) receive:
   [ In( (~a⊕~b) ) ] --[ Response( (~a⊕~b) ) ]-> [ ]

  /*
  rule (modulo AC) receive:
     [ In( z ) ] --[ Response( z ) ]-> [ ]
    variants (modulo AC)
    1. z     = zero
    
    2. z     = (~a.4⊕~b.4)
  */

lemma crworks:
  exists-trace "∃ x #i #j. (Challenge( x ) @ #i) ∧ (Response( x ) @ #j)"
/*
guarded formula characterizing all satisfying traces:
"∃ x #i #j. (Challenge( x ) @ #i) ∧ (Response( x ) @ #j)"
*/
simplify
solve( splitEqs(0) )
  case split
  solve( !KU( (~a⊕~b) ) @ #vk )
    case c_xor
    solve( !KU( ~b ) @ #vk.1 )
      case challenge
      solve( !KU( ~a ) @ #vk.2 )
        case challenge
        SOLVED // trace found
      qed
    qed
  qed
qed

/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.7.1
Maude version 2.7.1
Git revision: 9b1983ef654e3d0c6d13035da0cc1b4d336aa098, branch: subterm-new
Compiled at: 2022-10-27 12:37:48.599599113 UTC
*/

end
/* Output
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

==============================================================================
summary of summaries:

analyzed: examples/features/xor/basicfunctionality/xor0.spthy

  output:          examples/features/xor/basicfunctionality/xor0.spthy.tmp
  processing time: 0.06295111s
  
  crworks (exists-trace): verified (6 steps)

==============================================================================
*/
