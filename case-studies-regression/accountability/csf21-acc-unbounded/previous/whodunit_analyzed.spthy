theory WhoDunit begin

// Function signature and definition of the equational theory E

functions: extract/1, fst/1, pair/2, pk/1, sig/2,
           sk/1[private,destructor], snd/1, true/0, verify/3
equations:
    extract(sig(m, sk(i))) = m,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sig(m, sk(i)), m, pk(sk(i))) = true



heuristic: p













restriction unequal_blame:
  "∀ sid #i. (Unequal( sid ) @ #i) ⇒ (∃ x #j. Blame( sid, x ) @ #j)"























rule (modulo E) Init[color=#ffffff, process="!"]:
   [ ] --[ Init( ) ]-> [ !Semistate_1( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_1_[color=#ffffff, process="!"]:
   [
   !Semistate_1( ), Fr( sid.1 ), Fr( c_SA.1 ), Fr( c_AJ.1 ), Fr( c_SJ.1 ),
   In( <$x.1, $y.1> )
   ]
  -->
   [ State_1111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ) ]

  /*
  rule (modulo AC) p_1_[color=#ffffff, process="!"]:
     [
     !Semistate_1( ), Fr( sid ), Fr( c_SA ), Fr( c_AJ ), Fr( c_SJ ),
     In( <$x, $y> )
     ]
    -->
     [ State_1111111( $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) ifxy_0_1111111[color=#408051, process="if $x.1=$y.1"]:
   [ State_1111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ) ]
  --[ Pred_Eq( $x.1, $y.1 ) ]->
   [ ]

  /*
  rule (modulo AC) ifxy_0_1111111[color=#408051, process="if $x.1=$y.1"]:
     [ State_1111111( $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    --[ Pred_Eq( $x, $y ) ]->
     [ ]
  */

rule (modulo E) ifxy_1_1111111[color=#408051, process="if $x.1=$y.1"]:
   [ State_1111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ) ]
  --[ Pred_Not_Eq( $x.1, $y.1 ) ]->
   [
   State_111111121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   Out( pk(sk($x.1)) )
   ]

  /*
  rule (modulo AC) ifxy_1_1111111[color=#408051, process="if $x.1=$y.1"]:
     [ State_1111111( $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    --[ Pred_Not_Eq( $x, $y ) ]->
     [ State_111111121( $x, $y, c_AJ, c_SA, c_SJ, sid ), Out( pk(sk($x)) ) ]
  */

rule (modulo E) inv_0_11111112111111[color=#408051, process="in(v.1);"]:
   [
   State_11111112111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   In( v.1 )
   ]
  -->
   [ State_111111121111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1, v.1 )
   ]

  /*
  rule (modulo AC) inv_0_11111112111111[color=#408051, process="in(v.1);"]:
     [ State_11111112111111( $x, $y, c_AJ, c_SA, c_SJ, sid ), In( v ) ]
    -->
     [ State_111111121111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v ) ]
  */

rule (modulo E) outcSAsidvsigsidvskx_1_111111121111111[color=#408051,
                                                       process="out(c_SA.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
   [ State_111111121111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1, v.1 )
   ]
  -->
   [
   Message( c_SA.1, <<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))> ),
   Semistate_1111111211111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                               v.1
   )
   ]

  /*
  rule (modulo AC) outcSAsidvsigsidvskx_1_111111121111111[color=#408051,
                                                          process="out(c_SA.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
     [ State_111111121111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v ) ]
    -->
     [
     Message( c_SA, <<sid, v>, sig(<sid, v>, sk($x))> ),
     Semistate_1111111211111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v )
     ]
  */

rule (modulo E) outcSAsidvsigsidvskx_0_111111121111111[color=#408051,
                                                       process="out(c_SA.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
   [
   State_111111121111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1, v.1 ),
   In( c_SA.1 )
   ]
  -->
   [
   Out( <<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))> ),
   State_1111111211111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1, v.1 )
   ]

  /*
  rule (modulo AC) outcSAsidvsigsidvskx_0_111111121111111[color=#408051,
                                                          process="out(c_SA.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
     [ State_111111121111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v ), In( c_SA ) ]
    -->
     [
     Out( <<sid, v>, sig(<sid, v>, sk($x))> ),
     State_1111111211111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v )
     ]
  */

rule (modulo E) outcSAsidvsigsidvskx_2_111111121111111[color=#408051,
                                                       process="out(c_SA.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
   [
   Semistate_1111111211111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                               v.1
   ),
   Ack( c_SA.1, <<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))> )
   ]
  -->
   [
   State_1111111211111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1, v.1 )
   ]

  // loop breaker: [1]
  /*
  rule (modulo AC) outcSAsidvsigsidvskx_2_111111121111111[color=#408051,
                                                          process="out(c_SA.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
     [
     Semistate_1111111211111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v ),
     Ack( c_SA, <<sid, v>, sig(<sid, v>, sk($x))> )
     ]
    -->
     [ State_1111111211111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v ) ]
    // loop breaker: [1]
  */

rule (modulo E) outcSJsidvsigsidvskx_1_1111111211111111[color=#408051,
                                                        process="out(c_SJ.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
   [
   State_1111111211111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1, v.1 )
   ]
  -->
   [
   Message( c_SJ.1, <<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))> ),
   Semistate_11111112111111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                                v.1
   )
   ]

  /*
  rule (modulo AC) outcSJsidvsigsidvskx_1_1111111211111111[color=#408051,
                                                           process="out(c_SJ.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
     [ State_1111111211111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v ) ]
    -->
     [
     Message( c_SJ, <<sid, v>, sig(<sid, v>, sk($x))> ),
     Semistate_11111112111111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v )
     ]
  */

rule (modulo E) outcSJsidvsigsidvskx_0_1111111211111111[color=#408051,
                                                        process="out(c_SJ.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
   [
   State_1111111211111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1, v.1 ),
   In( c_SJ.1 )
   ]
  -->
   [
   Out( <<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))> ),
   State_11111112111111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1, v.1 )
   ]

  /*
  rule (modulo AC) outcSJsidvsigsidvskx_0_1111111211111111[color=#408051,
                                                           process="out(c_SJ.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
     [ State_1111111211111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v ), In( c_SJ )
     ]
    -->
     [
     Out( <<sid, v>, sig(<sid, v>, sk($x))> ),
     State_11111112111111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v )
     ]
  */

rule (modulo E) outcSJsidvsigsidvskx_2_1111111211111111[color=#408051,
                                                        process="out(c_SJ.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
   [
   Semistate_11111112111111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                                v.1
   ),
   Ack( c_SJ.1, <<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))> )
   ]
  -->
   [
   State_11111112111111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1, v.1 )
   ]

  /*
  rule (modulo AC) outcSJsidvsigsidvskx_2_1111111211111111[color=#408051,
                                                           process="out(c_SJ.1,<<sid.1, v.1>, sig(<sid.1, v.1>, sk($x.1))>);"]:
     [
     Semistate_11111112111111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v ),
     Ack( c_SJ, <<sid, v>, sig(<sid, v>, sk($x))> )
     ]
    -->
     [ State_11111112111111111( $x, $y, c_AJ, c_SA, c_SJ, sid, v ) ]
  */

rule (modulo E) incSAsidsvsigs_0_11111112111121[color=#40804a,
                                                process="in(c_SA.1,<<sid_s.1, v.2>, sig_s.1>);"]:
   [
   State_11111112111121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   Message( c_SA.1, x.2 )
   ]
  -->
   [
   Let_111111121111211( x.2, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   Ack( c_SA.1, x.2 )
   ]

  /*
  rule (modulo AC) incSAsidsvsigs_0_11111112111121[color=#40804a,
                                                   process="in(c_SA.1,<<sid_s.1, v.2>, sig_s.1>);"]:
     [
     State_11111112111121( $x, $y, c_AJ, c_SA, c_SJ, sid ),
     Message( c_SA, x.1 )
     ]
    -->
     [
     Let_111111121111211( x.1, $x, $y, c_AJ, c_SA, c_SJ, sid ),
     Ack( c_SA, x.1 )
     ]
  */

rule (modulo E) incSAsidsvsigs_2_11111112111121[color=#40804a,
                                                process="in(c_SA.1,<<sid_s.1, v.2>, sig_s.1>);"]:
   [
   State_11111112111121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   In( <c_SA.1, x.2> )
   ]
  -->
   [ Let_111111121111211( x.2, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ) ]

  /*
  rule (modulo AC) incSAsidsvsigs_2_11111112111121[color=#40804a,
                                                   process="in(c_SA.1,<<sid_s.1, v.2>, sig_s.1>);"]:
     [
     State_11111112111121( $x, $y, c_AJ, c_SA, c_SJ, sid ), In( <c_SA, x.1> )
     ]
    -->
     [ Let_111111121111211( x.1, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) incSAsidsvsigs_1_11111112111121[color=#40804a,
                                                process="in(c_SA.1,<<sid_s.1, v.2>, sig_s.1>);"]:
   [
   Let_111111121111211( <<sid_s.1, v.2>, sig_s.1>, $x.1, $y.1, c_AJ.1,
                        c_SA.1, c_SJ.1, sid.1
   )
   ]
  -->
   [
   State_111111121111211( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                          sid_s.1, sig_s.1, v.2
   )
   ]

  // loop breaker: [0]
  /*
  rule (modulo AC) incSAsidsvsigs_1_11111112111121[color=#40804a,
                                                   process="in(c_SA.1,<<sid_s.1, v.2>, sig_s.1>);"]:
     [
     Let_111111121111211( <<sid_s, v>, sig_s>, $x, $y, c_AJ, c_SA, c_SJ, sid )
     ]
    -->
     [ State_111111121111211( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_s, sig_s, v )
     ]
    // loop breaker: [0]
  */

rule (modulo E) incSAsidsvsigs_3_11111112111121[color=#40804a,
                                                process="in(c_SA.1,<<sid_s.1, v.2>, sig_s.1>);"]:
   [
   Let_111111121111211( <<sid_s.1, v.2>, sig_s.1>, $x.1, $y.1, c_AJ.1,
                        c_SA.1, c_SJ.1, sid.1
   )
   ]
  -->
   [
   State_111111121111211( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                          sid_s.1, sig_s.1, v.2
   )
   ]

  // loop breaker: [0]
  /*
  rule (modulo AC) incSAsidsvsigs_3_11111112111121[color=#40804a,
                                                   process="in(c_SA.1,<<sid_s.1, v.2>, sig_s.1>);"]:
     [
     Let_111111121111211( <<sid_s, v>, sig_s>, $x, $y, c_AJ, c_SA, c_SJ, sid )
     ]
    -->
     [ State_111111121111211( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_s, sig_s, v )
     ]
    // loop breaker: [0]
  */

rule (modulo E) ifverifysigssidvpkskxtrue_0_111111121111211[color=#40804a,
                                                            process="if verify(sig_s.1, <sid.1, v.2>, pk(sk($x.1)))=true"]:
   [
   State_111111121111211( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                          sid_s.1, sig_s.1, v.2
   )
   ]
  --[ Pred_Eq( verify(sig_s.1, <sid.1, v.2>, pk(sk($x.1))), true ) ]->
   [
   State_1111111211112111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                           sid_s.1, sig_s.1, v.2
   )
   ]

  /*
  rule (modulo AC) ifverifysigssidvpkskxtrue_0_111111121111211[color=#40804a,
                                                               process="if verify(sig_s.1, <sid.1, v.2>, pk(sk($x.1)))=true"]:
     [ State_111111121111211( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_s, sig_s, v )
     ]
    --[ Pred_Eq( z, true ) ]->
     [
     State_1111111211112111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_s, sig_s, v )
     ]
    variants (modulo AC)
    1. $x    = $x.13
       sid   = sid.13
       sig_s = sig_s.13
       v     = v.14
       z     = verify(sig_s.13, <sid.13, v.14>, pk(sk($x.13)))
    
    2. $x    = $x.13
       sid   = x.18
       sig_s = sig(<x.18, x.20>, sk($x.13))
       v     = x.20
       z     = true
  */

rule (modulo E) outcAJsidvsigssigsidvsky_1_1111111211112111[color=#40804a,
                                                            process="out(c_AJ.1,<<sid.1, v.2>, sig_s.1, sig(<sid.1, v.2>, sk($y.1))>);"]:
   [
   State_1111111211112111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                           sid_s.1, sig_s.1, v.2
   )
   ]
  -->
   [
   Message( c_AJ.1, <<sid.1, v.2>, sig_s.1, sig(<sid.1, v.2>, sk($y.1))> ),
   Semistate_11111112111121111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                                sid_s.1, sig_s.1, v.2
   )
   ]

  /*
  rule (modulo AC) outcAJsidvsigssigsidvsky_1_1111111211112111[color=#40804a,
                                                               process="out(c_AJ.1,<<sid.1, v.2>, sig_s.1, sig(<sid.1, v.2>, sk($y.1))>);"]:
     [
     State_1111111211112111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_s, sig_s, v )
     ]
    -->
     [
     Message( c_AJ, <<sid, v>, sig_s, sig(<sid, v>, sk($y))> ),
     Semistate_11111112111121111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_s, sig_s,
                                  v
     )
     ]
  */

rule (modulo E) outcAJsidvsigssigsidvsky_0_1111111211112111[color=#40804a,
                                                            process="out(c_AJ.1,<<sid.1, v.2>, sig_s.1, sig(<sid.1, v.2>, sk($y.1))>);"]:
   [
   State_1111111211112111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                           sid_s.1, sig_s.1, v.2
   ),
   In( c_AJ.1 )
   ]
  -->
   [
   Out( <<sid.1, v.2>, sig_s.1, sig(<sid.1, v.2>, sk($y.1))> ),
   State_11111112111121111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                            sid_s.1, sig_s.1, v.2
   )
   ]

  /*
  rule (modulo AC) outcAJsidvsigssigsidvsky_0_1111111211112111[color=#40804a,
                                                               process="out(c_AJ.1,<<sid.1, v.2>, sig_s.1, sig(<sid.1, v.2>, sk($y.1))>);"]:
     [
     State_1111111211112111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_s, sig_s, v ),
     In( c_AJ )
     ]
    -->
     [
     Out( <<sid, v>, sig_s, sig(<sid, v>, sk($y))> ),
     State_11111112111121111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_s, sig_s, v )
     ]
  */

rule (modulo E) outcAJsidvsigssigsidvsky_2_1111111211112111[color=#40804a,
                                                            process="out(c_AJ.1,<<sid.1, v.2>, sig_s.1, sig(<sid.1, v.2>, sk($y.1))>);"]:
   [
   Semistate_11111112111121111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                                sid_s.1, sig_s.1, v.2
   ),
   Ack( c_AJ.1, <<sid.1, v.2>, sig_s.1, sig(<sid.1, v.2>, sk($y.1))> )
   ]
  -->
   [
   State_11111112111121111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                            sid_s.1, sig_s.1, v.2
   )
   ]

  /*
  rule (modulo AC) outcAJsidvsigssigsidvsky_2_1111111211112111[color=#40804a,
                                                               process="out(c_AJ.1,<<sid.1, v.2>, sig_s.1, sig(<sid.1, v.2>, sk($y.1))>);"]:
     [
     Semistate_11111112111121111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_s, sig_s,
                                  v
     ),
     Ack( c_AJ, <<sid, v>, sig_s, sig(<sid, v>, sk($y))> )
     ]
    -->
     [
     State_11111112111121111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_s, sig_s, v )
     ]
  */

rule (modulo E) ifverifysigssidvpkskxtrue_1_111111121111211[color=#40804a,
                                                            process="if verify(sig_s.1, <sid.1, v.2>, pk(sk($x.1)))=true"]:
   [
   State_111111121111211( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                          sid_s.1, sig_s.1, v.2
   )
   ]
  --[ Pred_Not_Eq( verify(sig_s.1, <sid.1, v.2>, pk(sk($x.1))), true ) ]->
   [ ]

  /*
  rule (modulo AC) ifverifysigssidvpkskxtrue_1_111111121111211[color=#40804a,
                                                               process="if verify(sig_s.1, <sid.1, v.2>, pk(sk($x.1)))=true"]:
     [ State_111111121111211( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_s, sig_s, v )
     ]
    --[ Pred_Not_Eq( z, true ) ]->
     [ ]
    variants (modulo AC)
    1. $x    = $x.13
       sid   = sid.13
       sig_s = sig_s.13
       v     = v.14
       z     = verify(sig_s.13, <sid.13, v.14>, pk(sk($x.13)))
    
    2. $x    = $x.13
       sid   = x.18
       sig_s = sig(<x.18, x.20>, sk($x.13))
       v     = x.20
       z     = true
  */

rule (modulo E) incSJsidsvssigs_0_1111111211121[color=#40807d,
                                                process="in(c_SJ.1,<<sid_s.2, v_s.1>, sig1_s.1>);"]:
   [
   State_1111111211121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   Message( c_SJ.1, x.2 )
   ]
  -->
   [
   Let_11111112111211( x.2, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   Ack( c_SJ.1, x.2 )
   ]

  /*
  rule (modulo AC) incSJsidsvssigs_0_1111111211121[color=#40807d,
                                                   process="in(c_SJ.1,<<sid_s.2, v_s.1>, sig1_s.1>);"]:
     [
     State_1111111211121( $x, $y, c_AJ, c_SA, c_SJ, sid ),
     Message( c_SJ, x.1 )
     ]
    -->
     [
     Let_11111112111211( x.1, $x, $y, c_AJ, c_SA, c_SJ, sid ),
     Ack( c_SJ, x.1 )
     ]
  */

rule (modulo E) incSJsidsvssigs_2_1111111211121[color=#40807d,
                                                process="in(c_SJ.1,<<sid_s.2, v_s.1>, sig1_s.1>);"]:
   [
   State_1111111211121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   In( <c_SJ.1, x.2> )
   ]
  -->
   [ Let_11111112111211( x.2, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ) ]

  /*
  rule (modulo AC) incSJsidsvssigs_2_1111111211121[color=#40807d,
                                                   process="in(c_SJ.1,<<sid_s.2, v_s.1>, sig1_s.1>);"]:
     [ State_1111111211121( $x, $y, c_AJ, c_SA, c_SJ, sid ), In( <c_SJ, x.1> )
     ]
    -->
     [ Let_11111112111211( x.1, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) incSJsidsvssigs_1_1111111211121[color=#40807d,
                                                process="in(c_SJ.1,<<sid_s.2, v_s.1>, sig1_s.1>);"]:
   [
   Let_11111112111211( <<sid_s.2, v_s.1>, sig1_s.1>, $x.1, $y.1, c_AJ.1,
                       c_SA.1, c_SJ.1, sid.1
   )
   ]
  -->
   [
   State_11111112111211( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                         sig1_s.1, v_s.1, sid_s.2
   )
   ]

  /*
  rule (modulo AC) incSJsidsvssigs_1_1111111211121[color=#40807d,
                                                   process="in(c_SJ.1,<<sid_s.2, v_s.1>, sig1_s.1>);"]:
     [
     Let_11111112111211( <<sid_s, v_s>, sig1_s>, $x, $y, c_AJ, c_SA, c_SJ, sid
     )
     ]
    -->
     [
     State_11111112111211( $x, $y, c_AJ, c_SA, c_SJ, sid, sig1_s, v_s, sid_s )
     ]
  */

rule (modulo E) incSJsidsvssigs_3_1111111211121[color=#40807d,
                                                process="in(c_SJ.1,<<sid_s.2, v_s.1>, sig1_s.1>);"]:
   [
   Let_11111112111211( <<sid_s.2, v_s.1>, sig1_s.1>, $x.1, $y.1, c_AJ.1,
                       c_SA.1, c_SJ.1, sid.1
   )
   ]
  -->
   [
   State_11111112111211( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                         sig1_s.1, v_s.1, sid_s.2
   )
   ]

  /*
  rule (modulo AC) incSJsidsvssigs_3_1111111211121[color=#40807d,
                                                   process="in(c_SJ.1,<<sid_s.2, v_s.1>, sig1_s.1>);"]:
     [
     Let_11111112111211( <<sid_s, v_s>, sig1_s>, $x, $y, c_AJ, c_SA, c_SJ, sid
     )
     ]
    -->
     [
     State_11111112111211( $x, $y, c_AJ, c_SA, c_SJ, sid, sig1_s, v_s, sid_s )
     ]
  */

rule (modulo E) incAJsidavasigssiga_0_11111112111211[color=#40807d,
                                                     process="in(c_AJ.1,<<sid_a.1, v_a.1>, sig2_s.1, sig_a.1>);"]:
   [
   State_11111112111211( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                         sig1_s.1, v_s.1, sid_s.2
   ),
   Message( c_AJ.1, x.3 )
   ]
  -->
   [
   Let_111111121112111( x.3, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                        sig1_s.1, v_s.1, sid_s.2
   ),
   Ack( c_AJ.1, x.3 )
   ]

  /*
  rule (modulo AC) incAJsidavasigssiga_0_11111112111211[color=#40807d,
                                                        process="in(c_AJ.1,<<sid_a.1, v_a.1>, sig2_s.1, sig_a.1>);"]:
     [
     State_11111112111211( $x, $y, c_AJ, c_SA, c_SJ, sid, sig1_s, v_s, sid_s
     ),
     Message( c_AJ, x.1 )
     ]
    -->
     [
     Let_111111121112111( x.1, $x, $y, c_AJ, c_SA, c_SJ, sid, sig1_s, v_s,
                          sid_s
     ),
     Ack( c_AJ, x.1 )
     ]
  */

rule (modulo E) incAJsidavasigssiga_2_11111112111211[color=#40807d,
                                                     process="in(c_AJ.1,<<sid_a.1, v_a.1>, sig2_s.1, sig_a.1>);"]:
   [
   State_11111112111211( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                         sig1_s.1, v_s.1, sid_s.2
   ),
   In( <c_AJ.1, x.3> )
   ]
  -->
   [
   Let_111111121112111( x.3, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                        sig1_s.1, v_s.1, sid_s.2
   )
   ]

  /*
  rule (modulo AC) incAJsidavasigssiga_2_11111112111211[color=#40807d,
                                                        process="in(c_AJ.1,<<sid_a.1, v_a.1>, sig2_s.1, sig_a.1>);"]:
     [
     State_11111112111211( $x, $y, c_AJ, c_SA, c_SJ, sid, sig1_s, v_s, sid_s
     ),
     In( <c_AJ, x.1> )
     ]
    -->
     [
     Let_111111121112111( x.1, $x, $y, c_AJ, c_SA, c_SJ, sid, sig1_s, v_s,
                          sid_s
     )
     ]
  */

rule (modulo E) incAJsidavasigssiga_1_11111112111211[color=#40807d,
                                                     process="in(c_AJ.1,<<sid_a.1, v_a.1>, sig2_s.1, sig_a.1>);"]:
   [
   Let_111111121112111( <<sid_a.1, v_a.1>, sig2_s.1, sig_a.1>, $x.1, $y.1,
                        c_AJ.1, c_SA.1, c_SJ.1, sid.1, sig1_s.1, v_s.1, sid_s.2
   )
   ]
  -->
   [
   State_111111121112111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                          sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]

  /*
  rule (modulo AC) incAJsidavasigssiga_1_11111112111211[color=#40807d,
                                                        process="in(c_AJ.1,<<sid_a.1, v_a.1>, sig2_s.1, sig_a.1>);"]:
     [
     Let_111111121112111( <<sid_a, v_a>, sig2_s, sig_a>, $x, $y, c_AJ, c_SA,
                          c_SJ, sid, sig1_s, v_s, sid_s
     )
     ]
    -->
     [
     State_111111121112111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                            sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
  */

rule (modulo E) incAJsidavasigssiga_3_11111112111211[color=#40807d,
                                                     process="in(c_AJ.1,<<sid_a.1, v_a.1>, sig2_s.1, sig_a.1>);"]:
   [
   Let_111111121112111( <<sid_a.1, v_a.1>, sig2_s.1, sig_a.1>, $x.1, $y.1,
                        c_AJ.1, c_SA.1, c_SJ.1, sid.1, sig1_s.1, v_s.1, sid_s.2
   )
   ]
  -->
   [
   State_111111121112111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                          sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]

  /*
  rule (modulo AC) incAJsidavasigssiga_3_11111112111211[color=#40807d,
                                                        process="in(c_AJ.1,<<sid_a.1, v_a.1>, sig2_s.1, sig_a.1>);"]:
     [
     Let_111111121112111( <<sid_a, v_a>, sig2_s, sig_a>, $x, $y, c_AJ, c_SA,
                          c_SJ, sid, sig1_s, v_s, sid_s
     )
     ]
    -->
     [
     State_111111121112111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                            sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
  */

rule (modulo E) ifverifysigssidvspkskxtrue_0_111111121112111[color=#40807d,
                                                             process="if verify(sig1_s.1, <sid.1, v_s.1>, pk(sk($x.1)))=true"]:
   [
   State_111111121112111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                          sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]
  --[ Pred_Eq( verify(sig1_s.1, <sid.1, v_s.1>, pk(sk($x.1))), true ) ]->
   [
   State_1111111211121111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                           sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]

  /*
  rule (modulo AC) ifverifysigssidvspkskxtrue_0_111111121112111[color=#40807d,
                                                                process="if verify(sig1_s.1, <sid.1, v_s.1>, pk(sk($x.1)))=true"]:
     [
     State_111111121112111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                            sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    --[ Pred_Eq( z, true ) ]->
     [
     State_1111111211121111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                             sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    variants (modulo AC)
    1. $x    = $x.17
       sid   = sid.17
       sig1_s
             = sig1_s.17
       v_s   = v_s.17
       z     = verify(sig1_s.17, <sid.17, v_s.17>, pk(sk($x.17)))
    
    2. $x    = $x.17
       sid   = x.22
       sig1_s
             = sig(<x.22, x.24>, sk($x.17))
       v_s   = x.24
       z     = true
  */

rule (modulo E) ifverifysigssidvapkskxtrue_0_1111111211121111[color=#40807d,
                                                              process="if verify(sig2_s.1, <sid.1, v_a.1>, pk(sk($x.1)))=true"]:
   [
   State_1111111211121111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                           sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]
  --[ Pred_Eq( verify(sig2_s.1, <sid.1, v_a.1>, pk(sk($x.1))), true ) ]->
   [
   State_11111112111211111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                            sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]

  /*
  rule (modulo AC) ifverifysigssidvapkskxtrue_0_1111111211121111[color=#40807d,
                                                                 process="if verify(sig2_s.1, <sid.1, v_a.1>, pk(sk($x.1)))=true"]:
     [
     State_1111111211121111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                             sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    --[ Pred_Eq( z, true ) ]->
     [
     State_11111112111211111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                              sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    variants (modulo AC)
    1. $x    = $x.17
       sid   = sid.17
       sig2_s
             = sig2_s.17
       v_a   = v_a.17
       z     = verify(sig2_s.17, <sid.17, v_a.17>, pk(sk($x.17)))
    
    2. $x    = $x.17
       sid   = x.22
       sig2_s
             = sig(<x.22, x.25>, sk($x.17))
       v_a   = x.25
       z     = true
  */

rule (modulo E) ifverifysigasidvapkskytrue_0_11111112111211111[color=#40807d,
                                                               process="if verify(sig_a.1, <sid.1, v_a.1>, pk(sk($y.1)))=true"]:
   [
   State_11111112111211111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                            sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]
  --[ Pred_Eq( verify(sig_a.1, <sid.1, v_a.1>, pk(sk($y.1))), true ) ]->
   [
   State_111111121112111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                             sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]

  /*
  rule (modulo AC) ifverifysigasidvapkskytrue_0_11111112111211111[color=#40807d,
                                                                  process="if verify(sig_a.1, <sid.1, v_a.1>, pk(sk($y.1)))=true"]:
     [
     State_11111112111211111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                              sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    --[ Pred_Eq( z, true ) ]->
     [
     State_111111121112111111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                               sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    variants (modulo AC)
    1. $y    = $x.17
       sid   = x.21
       sig_a = sig(<x.21, x.25>, sk($x.17))
       v_a   = x.25
       z     = true
    
    2. $y    = $y.17
       sid   = sid.17
       sig_a = sig_a.17
       v_a   = v_a.17
       z     = verify(sig_a.17, <sid.17, v_a.17>, pk(sk($y.17)))
  */

rule (modulo E) ifvsva_0_111111121112111111[color=#40807d,
                                            process="if v_s.1=v_a.1"]:
   [
   State_111111121112111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                             sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]
  --[ Pred_Eq( v_s.1, v_a.1 ) ]->
   [
   State_1111111211121111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                              sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]

  /*
  rule (modulo AC) ifvsva_0_111111121112111111[color=#40807d,
                                               process="if v_s.1=v_a.1"]:
     [
     State_111111121112111111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                               sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    --[ Pred_Eq( v_s, v_a ) ]->
     [
     State_1111111211121111111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                                sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
  */

rule (modulo E) eventEqualsid_0_1111111211121111111[color=#40807d,
                                                    process="event Equal( sid.1 );"]:
   [
   State_1111111211121111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                              sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]
  --[ Equal( sid.1 ) ]->
   [ ]

  /*
  rule (modulo AC) eventEqualsid_0_1111111211121111111[color=#40807d,
                                                       process="event Equal( sid.1 );"]:
     [
     State_1111111211121111111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                                sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    --[ Equal( sid ) ]->
     [ ]
  */

rule (modulo E) ifvsva_1_111111121112111111[color=#40807d,
                                            process="if v_s.1=v_a.1"]:
   [
   State_111111121112111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                             sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]
  --[ Pred_Not_Eq( v_s.1, v_a.1 ) ]->
   [
   State_1111111211121111112( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                              sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]

  /*
  rule (modulo AC) ifvsva_1_111111121112111111[color=#40807d,
                                               process="if v_s.1=v_a.1"]:
     [
     State_111111121112111111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                               sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    --[ Pred_Not_Eq( v_s, v_a ) ]->
     [
     State_1111111211121111112( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                                sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
  */

rule (modulo E) eventUnequalsid_0_1111111211121111112[color=#40807d,
                                                      process="event Unequal( sid.1 );"]:
   [
   State_1111111211121111112( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                              sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]
  --[ Unequal( sid.1 ) ]->
   [
   State_11111112111211111121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                               sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]

  /*
  rule (modulo AC) eventUnequalsid_0_1111111211121111112[color=#40807d,
                                                         process="event Unequal( sid.1 );"]:
     [
     State_1111111211121111112( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                                sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    --[ Unequal( sid ) ]->
     [
     State_11111112111211111121( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                                 sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
  */

rule (modulo E) eventBlamesidx_0_11111112111211111121[color=#40807d,
                                                      process="event Blame( sid.1, $x.1 );"]:
   [
   State_11111112111211111121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                               sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]
  --[ Blame( sid.1, $x.1 ) ]->
   [ ]

  /*
  rule (modulo AC) eventBlamesidx_0_11111112111211111121[color=#40807d,
                                                         process="event Blame( sid.1, $x.1 );"]:
     [
     State_11111112111211111121( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                                 sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    --[ Blame( sid, $x ) ]->
     [ ]
  */

rule (modulo E) ifverifysigasidvapkskytrue_1_11111112111211111[color=#40807d,
                                                               process="if verify(sig_a.1, <sid.1, v_a.1>, pk(sk($y.1)))=true"]:
   [
   State_11111112111211111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                            sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]
  --[ Pred_Not_Eq( verify(sig_a.1, <sid.1, v_a.1>, pk(sk($y.1))), true )
  ]->
   [ ]

  /*
  rule (modulo AC) ifverifysigasidvapkskytrue_1_11111112111211111[color=#40807d,
                                                                  process="if verify(sig_a.1, <sid.1, v_a.1>, pk(sk($y.1)))=true"]:
     [
     State_11111112111211111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                              sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    --[ Pred_Not_Eq( z, true ) ]->
     [ ]
    variants (modulo AC)
    1. $y    = $x.17
       sid   = x.21
       sig_a = sig(<x.21, x.25>, sk($x.17))
       v_a   = x.25
       z     = true
    
    2. $y    = $y.17
       sid   = sid.17
       sig_a = sig_a.17
       v_a   = v_a.17
       z     = verify(sig_a.17, <sid.17, v_a.17>, pk(sk($y.17)))
  */

rule (modulo E) ifverifysigssidvapkskxtrue_1_1111111211121111[color=#40807d,
                                                              process="if verify(sig2_s.1, <sid.1, v_a.1>, pk(sk($x.1)))=true"]:
   [
   State_1111111211121111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                           sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]
  --[ Pred_Not_Eq( verify(sig2_s.1, <sid.1, v_a.1>, pk(sk($x.1))), true )
  ]->
   [ ]

  /*
  rule (modulo AC) ifverifysigssidvapkskxtrue_1_1111111211121111[color=#40807d,
                                                                 process="if verify(sig2_s.1, <sid.1, v_a.1>, pk(sk($x.1)))=true"]:
     [
     State_1111111211121111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                             sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    --[ Pred_Not_Eq( z, true ) ]->
     [ ]
    variants (modulo AC)
    1. $x    = $x.17
       sid   = sid.17
       sig2_s
             = sig2_s.17
       v_a   = v_a.17
       z     = verify(sig2_s.17, <sid.17, v_a.17>, pk(sk($x.17)))
    
    2. $x    = $x.17
       sid   = x.22
       sig2_s
             = sig(<x.22, x.25>, sk($x.17))
       v_a   = x.25
       z     = true
  */

rule (modulo E) ifverifysigssidvspkskxtrue_1_111111121112111[color=#40807d,
                                                             process="if verify(sig1_s.1, <sid.1, v_s.1>, pk(sk($x.1)))=true"]:
   [
   State_111111121112111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1,
                          sid_a.1, sig1_s.1, sig2_s.1, sig_a.1, v_a.1, v_s.1, sid_s.2
   )
   ]
  --[ Pred_Not_Eq( verify(sig1_s.1, <sid.1, v_s.1>, pk(sk($x.1))), true )
  ]->
   [ ]

  /*
  rule (modulo AC) ifverifysigssidvspkskxtrue_1_111111121112111[color=#40807d,
                                                                process="if verify(sig1_s.1, <sid.1, v_s.1>, pk(sk($x.1)))=true"]:
     [
     State_111111121112111( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a, sig1_s,
                            sig2_s, sig_a, v_a, v_s, sid_s
     )
     ]
    --[ Pred_Not_Eq( z, true ) ]->
     [ ]
    variants (modulo AC)
    1. $x    = $x.17
       sid   = sid.17
       sig1_s
             = sig1_s.17
       v_s   = v_s.17
       z     = verify(sig1_s.17, <sid.17, v_s.17>, pk(sk($x.17)))
    
    2. $x    = $x.17
       sid   = x.22
       sig1_s
             = sig(<x.22, x.24>, sk($x.17))
       v_s   = x.24
       z     = true
  */

rule (modulo E) outpksky_0_111111121[color=#408051,
                                     process="out(pk(sk($y.1)));"]:
   [ State_111111121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ) ]
  -->
   [
   !Semistate_111111121121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   State_1111111211121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   State_11111112111121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   State_11111112111111( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   Out( pk(sk($y.1)) )
   ]

  /*
  rule (modulo AC) outpksky_0_111111121[color=#408051,
                                        process="out(pk(sk($y.1)));"]:
     [ State_111111121( $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    -->
     [
     !Semistate_111111121121( $x, $y, c_AJ, c_SA, c_SJ, sid ),
     State_1111111211121( $x, $y, c_AJ, c_SA, c_SJ, sid ),
     State_11111112111121( $x, $y, c_AJ, c_SA, c_SJ, sid ),
     State_11111112111111( $x, $y, c_AJ, c_SA, c_SJ, sid ), Out( pk(sk($y)) )
     ]
  */

rule (modulo E) p_1_11111112112[color=#408051, process="!"]:
   [ !Semistate_111111121121( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ) ]
  -->
   [ State_1111111211211( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ) ]

  /*
  rule (modulo AC) p_1_11111112112[color=#408051, process="!"]:
     [ !Semistate_111111121121( $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    -->
     [ State_1111111211211( $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) inccorruptp_0_1111111211211[color=#408058,
                                            process="in('c',<'corrupt', $p.1>);"]:
   [
   State_1111111211211( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   Message( 'c', x.2 )
   ]
  -->
   [
   Let_11111112112111( x.2, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   Ack( 'c', x.2 )
   ]

  // loop breaker: [1]
  /*
  rule (modulo AC) inccorruptp_0_1111111211211[color=#408058,
                                               process="in('c',<'corrupt', $p.1>);"]:
     [
     State_1111111211211( $x, $y, c_AJ, c_SA, c_SJ, sid ), Message( 'c', x.1 )
     ]
    -->
     [
     Let_11111112112111( x.1, $x, $y, c_AJ, c_SA, c_SJ, sid ), Ack( 'c', x.1 )
     ]
    // loop breaker: [1]
  */

rule (modulo E) inccorruptp_2_1111111211211[color=#408058,
                                            process="in('c',<'corrupt', $p.1>);"]:
   [
   State_1111111211211( $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ),
   In( <'c', x.2> )
   ]
  -->
   [ Let_11111112112111( x.2, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 ) ]

  /*
  rule (modulo AC) inccorruptp_2_1111111211211[color=#408058,
                                               process="in('c',<'corrupt', $p.1>);"]:
     [ State_1111111211211( $x, $y, c_AJ, c_SA, c_SJ, sid ), In( <'c', x.1> )
     ]
    -->
     [ Let_11111112112111( x.1, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) inccorruptp_1_1111111211211[color=#408058,
                                            process="in('c',<'corrupt', $p.1>);"]:
   [
   Let_11111112112111( <'corrupt', $p.1>, $x.1, $y.1, c_AJ.1, c_SA.1,
                       c_SJ.1, sid.1
   )
   ]
  -->
   [ State_11111112112111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 )
   ]

  /*
  rule (modulo AC) inccorruptp_1_1111111211211[color=#408058,
                                               process="in('c',<'corrupt', $p.1>);"]:
     [ Let_11111112112111( <'corrupt', $p>, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    -->
     [ State_11111112112111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) inccorruptp_3_1111111211211[color=#408058,
                                            process="in('c',<'corrupt', $p.1>);"]:
   [
   Let_11111112112111( <'corrupt', $p.1>, $x.1, $y.1, c_AJ.1, c_SA.1,
                       c_SJ.1, sid.1
   )
   ]
  -->
   [ State_11111112112111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 )
   ]

  /*
  rule (modulo AC) inccorruptp_3_1111111211211[color=#408058,
                                               process="in('c',<'corrupt', $p.1>);"]:
     [ Let_11111112112111( <'corrupt', $p>, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    -->
     [ State_11111112112111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) eventCorruptedp_0_11111112112111[color=#40805f,
                                                 process="event Corrupted( $p.1 );"]:
   [ State_11111112112111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 )
   ]
  --[ Corrupted( $p.1 ) ]->
   [
   State_111111121121111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 )
   ]

  /*
  rule (modulo AC) eventCorruptedp_0_11111112112111[color=#40805f,
                                                    process="event Corrupted( $p.1 );"]:
     [ State_11111112112111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    --[ Corrupted( $p ) ]->
     [ State_111111121121111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) ifpx_0_111111121121111[color=#40805f,
                                       process="if $p.1=$x.1"]:
   [
   State_111111121121111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 )
   ]
  --[ Pred_Eq( $p.1, $x.1 ) ]->
   [
   State_1111111211211111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 )
   ]

  /*
  rule (modulo AC) ifpx_0_111111121121111[color=#40805f,
                                          process="if $p.1=$x.1"]:
     [ State_111111121121111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    --[ Pred_Eq( $p, $x ) ]->
     [ State_1111111211211111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) outcskpsidcSAcSJ_1_1111111211211111[color=#40805f,
                                                    process="out('c',<sk($p.1), sid.1, c_SA.1, c_SJ.1>);"]:
   [
   State_1111111211211111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 )
   ]
  -->
   [
   Message( 'c', <sk($p.1), sid.1, c_SA.1, c_SJ.1> ),
   Semistate_11111112112111111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1,
                                sid.1
   )
   ]

  /*
  rule (modulo AC) outcskpsidcSAcSJ_1_1111111211211111[color=#40805f,
                                                       process="out('c',<sk($p.1), sid.1, c_SA.1, c_SJ.1>);"]:
     [ State_1111111211211111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    -->
     [
     Message( 'c', <sk($p), sid, c_SA, c_SJ> ),
     Semistate_11111112112111111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid )
     ]
  */

rule (modulo E) outcskpsidcSAcSJ_0_1111111211211111[color=#40805f,
                                                    process="out('c',<sk($p.1), sid.1, c_SA.1, c_SJ.1>);"]:
   [
   State_1111111211211111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1
   ),
   In( 'c' )
   ]
  -->
   [
   Out( <sk($p.1), sid.1, c_SA.1, c_SJ.1> ),
   State_11111112112111111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1
   )
   ]

  /*
  rule (modulo AC) outcskpsidcSAcSJ_0_1111111211211111[color=#40805f,
                                                       process="out('c',<sk($p.1), sid.1, c_SA.1, c_SJ.1>);"]:
     [ State_1111111211211111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ), In( 'c' )
     ]
    -->
     [
     Out( <sk($p), sid, c_SA, c_SJ> ),
     State_11111112112111111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid )
     ]
  */

rule (modulo E) outcskpsidcSAcSJ_2_1111111211211111[color=#40805f,
                                                    process="out('c',<sk($p.1), sid.1, c_SA.1, c_SJ.1>);"]:
   [
   Semistate_11111112112111111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1,
                                sid.1
   ),
   Ack( 'c', <sk($p.1), sid.1, c_SA.1, c_SJ.1> )
   ]
  -->
   [
   State_11111112112111111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1
   )
   ]

  /*
  rule (modulo AC) outcskpsidcSAcSJ_2_1111111211211111[color=#40805f,
                                                       process="out('c',<sk($p.1), sid.1, c_SA.1, c_SJ.1>);"]:
     [
     Semistate_11111112112111111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ),
     Ack( 'c', <sk($p), sid, c_SA, c_SJ> )
     ]
    -->
     [ State_11111112112111111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) ifpx_1_111111121121111[color=#40805f,
                                       process="if $p.1=$x.1"]:
   [
   State_111111121121111( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 )
   ]
  --[ Pred_Not_Eq( $p.1, $x.1 ) ]->
   [
   State_1111111211211112( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 )
   ]

  /*
  rule (modulo AC) ifpx_1_111111121121111[color=#40805f,
                                          process="if $p.1=$x.1"]:
     [ State_111111121121111( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    --[ Pred_Not_Eq( $p, $x ) ]->
     [ State_1111111211211112( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) ifpy_0_1111111211211112[color=#40805f,
                                        process="if $p.1=$y.1"]:
   [
   State_1111111211211112( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 )
   ]
  --[ Pred_Eq( $p.1, $y.1 ) ]->
   [
   State_11111112112111121( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1
   )
   ]

  /*
  rule (modulo AC) ifpy_0_1111111211211112[color=#40805f,
                                           process="if $p.1=$y.1"]:
     [ State_1111111211211112( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    --[ Pred_Eq( $p, $y ) ]->
     [ State_11111112112111121( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) outcskpsidcSAcAJ_1_11111112112111121[color=#40805f,
                                                     process="out('c',<sk($p.1), sid.1, c_SA.1, c_AJ.1>);"]:
   [
   State_11111112112111121( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1
   )
   ]
  -->
   [
   Message( 'c', <sk($p.1), sid.1, c_SA.1, c_AJ.1> ),
   Semistate_111111121121111211( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1,
                                 sid.1
   )
   ]

  /*
  rule (modulo AC) outcskpsidcSAcAJ_1_11111112112111121[color=#40805f,
                                                        process="out('c',<sk($p.1), sid.1, c_SA.1, c_AJ.1>);"]:
     [ State_11111112112111121( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    -->
     [
     Message( 'c', <sk($p), sid, c_SA, c_AJ> ),
     Semistate_111111121121111211( $p, $x, $y, c_AJ, c_SA, c_SJ, sid )
     ]
  */

rule (modulo E) outcskpsidcSAcAJ_0_11111112112111121[color=#40805f,
                                                     process="out('c',<sk($p.1), sid.1, c_SA.1, c_AJ.1>);"]:
   [
   State_11111112112111121( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1
   ),
   In( 'c' )
   ]
  -->
   [
   Out( <sk($p.1), sid.1, c_SA.1, c_AJ.1> ),
   State_111111121121111211( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1
   )
   ]

  /*
  rule (modulo AC) outcskpsidcSAcAJ_0_11111112112111121[color=#40805f,
                                                        process="out('c',<sk($p.1), sid.1, c_SA.1, c_AJ.1>);"]:
     [ State_11111112112111121( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ), In( 'c' )
     ]
    -->
     [
     Out( <sk($p), sid, c_SA, c_AJ> ),
     State_111111121121111211( $p, $x, $y, c_AJ, c_SA, c_SJ, sid )
     ]
  */

rule (modulo E) outcskpsidcSAcAJ_2_11111112112111121[color=#40805f,
                                                     process="out('c',<sk($p.1), sid.1, c_SA.1, c_AJ.1>);"]:
   [
   Semistate_111111121121111211( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1,
                                 sid.1
   ),
   Ack( 'c', <sk($p.1), sid.1, c_SA.1, c_AJ.1> )
   ]
  -->
   [
   State_111111121121111211( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1
   )
   ]

  /*
  rule (modulo AC) outcskpsidcSAcAJ_2_11111112112111121[color=#40805f,
                                                        process="out('c',<sk($p.1), sid.1, c_SA.1, c_AJ.1>);"]:
     [
     Semistate_111111121121111211( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ),
     Ack( 'c', <sk($p), sid, c_SA, c_AJ> )
     ]
    -->
     [ State_111111121121111211( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
  */

rule (modulo E) ifpy_1_1111111211211112[color=#40805f,
                                        process="if $p.1=$y.1"]:
   [
   State_1111111211211112( $p.1, $x.1, $y.1, c_AJ.1, c_SA.1, c_SJ.1, sid.1 )
   ]
  --[ Pred_Not_Eq( $p.1, $y.1 ) ]->
   [ ]

  /*
  rule (modulo AC) ifpy_1_1111111211211112[color=#40805f,
                                           process="if $p.1=$y.1"]:
     [ State_1111111211211112( $p, $x, $y, c_AJ, c_SA, c_SJ, sid ) ]
    --[ Pred_Not_Eq( $p, $y ) ]->
     [ ]
  */

restriction predicate_eq:
  "∀ #i a b. (Pred_Eq( a, b ) @ #i) ⇒ (a = b)"
  // safety formula

restriction predicate_not_eq:
  "∀ #i a b. (Pred_Not_Eq( a, b ) @ #i) ⇒ (¬(a = b))"
  // safety formula

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

lemma acc_blamed_suff:
  exists-trace
  "∃ x sid #i.
    ((Blame( sid, x ) @ #i) ∧
     (∀ x.1 sid.1 #i.1. (Blame( sid.1, x.1 ) @ #i.1) ⇒ (x.1 = x))) ∧
    (∀ a #i.1. (Corrupted( a ) @ #i.1) ⇒ (a = x))"
/*
guarded formula characterizing all satisfying traces:
"∃ x sid #i.
  (Blame( sid, x ) @ #i)
 ∧
  (∀ x.1 sid.1 #i.1. (Blame( sid.1, x.1 ) @ #i.1) ⇒ x.1 = x) ∧
  (∀ a #i.1. (Corrupted( a ) @ #i.1) ⇒ a = x)"
*/
simplify
solve( State_11111112111211111121( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a,
                                   sig1_s, sig2_s, sig_a, v_a, v_s, sid_s
       ) ▶₀ #i )
  case eventUnequalsid_0_1111111211121111112_case_01
  solve( State_11111112111211111121( $x, $y.1, c_AJ, c_SA.1, c_SJ.1, ~n.3,
                                     sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.1 ) @ #vk )
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            solve( !KU( ~n.3 ) @ #vk.18 )
              case outcSAsidvsigsidvskx_0_111111121111111_case_1
              SOLVED // trace found
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma acc_verif_empty:
  all-traces
  "(¬(∃ x sid #i. Blame( sid, x ) @ #i)) ⇒
   (¬(∃ sid #i. Unequal( sid ) @ #i))"
/*
guarded formula characterizing all counter-examples:
"(∀ x sid #i. (Blame( sid, x ) @ #i) ⇒ ⊥) ∧
 (∃ sid #i. (Unequal( sid ) @ #i))"
*/
simplify
by contradiction /* from formulas */

lemma acc_blamed_verif_nonempty:
  all-traces
  "∀ x sid #i.
    (Blame( sid, x ) @ #i) ⇒ (¬(¬(∃ sid.1 #i.1. Unequal( sid.1 ) @ #i.1)))"
/*
guarded formula characterizing all counter-examples:
"∃ x sid #i.
  (Blame( sid, x ) @ #i) ∧ ∀ sid.1 #i.1. (Unequal( sid.1 ) @ #i.1) ⇒ ⊥"
*/
simplify
solve( State_11111112111211111121( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a,
                                   sig1_s, sig2_s, sig_a, v_a, v_s, sid_s
       ) ▶₀ #i )
  case eventUnequalsid_0_1111111211121111112_case_01
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_02
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_03
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_04
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_05
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_06
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_07
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_08
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_09
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_10
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_11
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_12
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_13
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_14
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_15
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_16
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_17
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_18
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_19
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_20
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_21
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_22
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_23
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_24
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_25
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_26
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_27
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_28
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_29
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_30
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_31
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_32
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_33
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_34
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_35
  by contradiction /* from formulas */
next
  case eventUnequalsid_0_1111111211121111112_case_36
  by contradiction /* from formulas */
qed

lemma acc_blamed_min:
  all-traces
  "∀ x sid #i.
    (Blame( sid, x ) @ #i) ⇒
    (¬(∃ x.1 sid.1 #i.1.
        (Blame( sid.1, x.1 ) @ #i.1) ∧ ((x.1 = x) ∧ (¬(x = x.1)))))"
/*
guarded formula characterizing all counter-examples:
"∃ x sid #i.
  (Blame( sid, x ) @ #i)
 ∧
  ∃ x.1 sid.1 #i.1. (Blame( sid.1, x.1 ) @ #i.1) ∧ (x.1 = x) ∧ ¬(x = x.1)"
*/
simplify
by contradiction /* from formulas */

lemma acc_blamed_uniq:
  all-traces
  "∀ x sid #i. (Blame( sid, x ) @ #i) ⇒ (∃ #i.1. Corrupted( x ) @ #i.1)"
/*
guarded formula characterizing all counter-examples:
"∃ x sid #i.
  (Blame( sid, x ) @ #i) ∧ ∀ #i.1. (Corrupted( x ) @ #i.1) ⇒ ⊥"
*/
simplify
solve( State_11111112111211111121( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a,
                                   sig1_s, sig2_s, sig_a, v_a, v_s, sid_s
       ) ▶₀ #i )
  case eventUnequalsid_0_1111111211121111112_case_01
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.1 ) @ #vk )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_02
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_0_11111112111121
      by contradiction /* from formulas */
    next
      case incSAsidsvsigs_2_11111112111121
      by solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))>
                ) ▶₁ #vr.15 )
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_03
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.1 ) @ #vk )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_04
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_0_11111112111121
      by contradiction /* from formulas */
    next
      case incSAsidsvsigs_2_11111112111121
      by solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))>
                ) ▶₁ #vr.15 )
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_05
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.2
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                $x, $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    next
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_06
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.2
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                $x, $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    next
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_07
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.1 ) @ #vk )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_08
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_0_11111112111121
      by contradiction /* from formulas */
    next
      case incSAsidsvsigs_2_11111112111121
      by solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))>
                ) ▶₁ #vr.15 )
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_09
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.1 ) @ #vk )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_10
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_0_11111112111121
      by contradiction /* from formulas */
    next
      case incSAsidsvsigs_2_11111112111121
      by solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))>
                ) ▶₁ #vr.15 )
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_11
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.2
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                $x, $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    next
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_12
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.2
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                $x, $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    next
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_13
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( !KU( ~n ) @ #vk.1 )
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.21, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.21, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_1
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.24 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_2
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.19 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        by contradiction /* from formulas */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_3
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.24 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_4
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.19 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_14
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))> ) ▶₁ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.26 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.18 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.26 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.18 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        qed
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_15
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( !KU( ~n ) @ #vk.1 )
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_1
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.21 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_2
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.24 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_1
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSJsidvsigsidvskx_0_1111111211111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_2
        solve( Ack( ~n.1, <<~n.3, v_a>, sig(<~n.3, v_a>, sk($x))> ) ▶₁ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
            case c_sig
            solve( !KU( ~n.2 ) @ #vk.11 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcSJsidvsigsidvskx_0_1111111211111111
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_3
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.21 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_4
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.24 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_1
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSJsidvsigsidvskx_0_1111111211111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_2
        solve( Ack( ~n.1, <<~n.3, v_a>, sig(<~n.3, v_a>, sk($x))> ) ▶₁ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
            case c_sig
            solve( !KU( ~n.2 ) @ #vk.11 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcSJsidvsigsidvskx_0_1111111211111111
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_16
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( !KU( ~n ) @ #vk.1 )
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.21, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.21, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_1
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.24 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_2
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.19 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        by contradiction /* from formulas */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_3
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.24 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_4
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.19 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_17
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))> ) ▶₁ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.26 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.18 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.26 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.18 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        qed
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_18
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( !KU( ~n ) @ #vk.1 )
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_1
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.21 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_2
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.24 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_1
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSJsidvsigsidvskx_0_1111111211111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_2
        solve( Ack( ~n.1, <<~n.3, v_a>, sig(<~n.3, v_a>, sk($x))> ) ▶₁ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
            case c_sig
            solve( !KU( ~n.2 ) @ #vk.11 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcSJsidvsigsidvskx_0_1111111211111111
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_3
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.21 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_4
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.24 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_1
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSJsidvsigsidvskx_0_1111111211111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_2
        solve( Ack( ~n.1, <<~n.3, v_a>, sig(<~n.3, v_a>, sk($x))> ) ▶₁ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
            case c_sig
            solve( !KU( ~n.2 ) @ #vk.11 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcSJsidvsigsidvskx_0_1111111211111111
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_19
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.1 ) @ #vk )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_20
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_0_11111112111121
      by contradiction /* from formulas */
    next
      case incSAsidsvsigs_2_11111112111121
      by solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))>
                ) ▶₁ #vr.15 )
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_21
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.1 ) @ #vk )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_22
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_0_11111112111121
      by contradiction /* from formulas */
    next
      case incSAsidsvsigs_2_11111112111121
      by solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))>
                ) ▶₁ #vr.15 )
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_23
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.2
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                $x, $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    next
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_24
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.2
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                $x, $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    next
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_25
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.1 ) @ #vk )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_26
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_0_11111112111121
      by contradiction /* from formulas */
    next
      case incSAsidsvsigs_2_11111112111121
      by solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))>
                ) ▶₁ #vr.15 )
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_27
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.1 ) @ #vk )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.25, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.26 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.28 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.36 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))
                                         >,
                                         $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          by solve( Let_111111121111211( <<sid_s.1, v_a>, 
                                          sig(<~n.3, v_a>, sk($x.1))>,
                                         $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.34 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.36 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_28
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_0_11111112111121
      by contradiction /* from formulas */
    next
      case incSAsidsvsigs_2_11111112111121
      by solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))>
                ) ▶₁ #vr.15 )
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_29
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.2
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                $x, $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    next
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_30
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA.1, c_SJ.1,
                                     ~n.3, sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.2
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                $x, $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.24, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    next
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.2 ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.19, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.21 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.21, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.23 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_1
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_2
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_3
        by contradiction /* from formulas */
      next
        case outcskpsidcSAcSJ_0_1111111211211111_case_4
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_31
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( !KU( ~n ) @ #vk.1 )
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.21, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.21, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_1
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.24 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_2
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.19 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        by contradiction /* from formulas */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_3
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.24 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_4
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.19 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_32
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))> ) ▶₁ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.26 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.18 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.26 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.18 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        qed
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_33
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( !KU( ~n ) @ #vk.1 )
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_1
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.21 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_2
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.24 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_1
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSJsidvsigsidvskx_0_1111111211111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_2
        solve( Ack( ~n.1, <<~n.3, v_a>, sig(<~n.3, v_a>, sk($x))> ) ▶₁ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
            case c_sig
            solve( !KU( ~n.2 ) @ #vk.11 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcSJsidvsigsidvskx_0_1111111211111111
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_3
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.21 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_4
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.24 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_1
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSJsidvsigsidvskx_0_1111111211111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_2
        solve( Ack( ~n.1, <<~n.3, v_a>, sig(<~n.3, v_a>, sk($x))> ) ▶₁ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
            case c_sig
            solve( !KU( ~n.2 ) @ #vk.11 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcSJsidvsigsidvskx_0_1111111211111111
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_34
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( !KU( ~n ) @ #vk.1 )
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.20 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.21, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.21, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.20, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
      solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                  $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.22 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_1
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.24 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_2
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.19 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        by contradiction /* from formulas */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_3
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.24 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_4
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.19 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                    $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.30 )
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.32 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_35
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Ack( ~n.1, <<~n.3, v_s>, sig(<~n.3, v_s>, sk($x))> ) ▶₁ #vr.12 )
      case incSAsidsvsigs_0_11111112111121
      solve( !KU( ~n ) @ #vk.1 )
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.20, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.22 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.23, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        next
          case incSAsidsvsigs_2_11111112111121
          by solve( (#vr.22, 0) ~~> (#vk, 0) )
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                    $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.24 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_1
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.26 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.18 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        qed
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_3
        by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.26 )
      next
        case outcskpsidcSAcAJ_0_11111112112111121_case_4
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.18 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                        $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.34 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcAJ_0_11111112112111121_case_4
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                      $y.1, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s, v>, sig(<sid, v>, sk($x.1))>, $x.1,
                                      $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.34 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        qed
      qed
    qed
  qed
next
  case eventUnequalsid_0_1111111211121111112_case_36
  solve( State_11111112111211111121( $x.1, $y.1, c_AJ, c_SA, c_SJ, ~n.3,
                                     sid_a.1, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( !KU( ~n ) @ #vk.1 )
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.15, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.17 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.18, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      next
        case incSAsidsvsigs_2_11111112111121
        by solve( (#vr.17, 0) ~~> (#vk, 0) )
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
      solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                  $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
             ) ▶₀ #vr.19 )
        case incSAsidsvsigs_0_11111112111121
        by contradiction /* cyclic */
      next
        case incSAsidsvsigs_2_11111112111121
        by contradiction /* cyclic */
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_1
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.21 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_2
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.24 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_1
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSJsidvsigsidvskx_0_1111111211111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_2
        solve( Ack( ~n.1, <<~n.3, v_a>, sig(<~n.3, v_a>, sk($x))> ) ▶₁ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
            case c_sig
            solve( !KU( ~n.2 ) @ #vk.11 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcSJsidvsigsidvskx_0_1111111211111111
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_3
      by solve( Message( 'c', <'corrupt', $y> ) ▶₁ #vr.21 )
    next
      case outcskpsidcSAcAJ_0_11111112112111121_case_4
      solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.7 )
        case c_sig
        solve( !KU( sk($x) ) @ #vk.24 )
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.27 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.29 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcAJ_0_11111112112111121_case_4
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_1
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_2
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_3
          by contradiction /* from formulas */
        next
          case outcskpsidcSAcSJ_0_1111111211211111_case_4
          by contradiction /* from formulas */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x))>,
                                    $x, $y.1, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( ~n.2 ) @ #vk.10 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.33, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.36, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.35, 0) ~~> (#vk.2, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.37 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
        solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                    $x.1, $x, c_AJ, c_SA, c_SJ, ~n.3
               ) ▶₀ #vr.27 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* from formulas */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* impossible chain */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* impossible chain */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
        solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                    $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
               ) ▶₀ #vr.29 )
          case incSAsidsvsigs_0_11111112111121
          by contradiction /* cyclic */
        next
          case incSAsidsvsigs_2_11111112111121
          by contradiction /* cyclic */
        qed
      next
        case outcSAsidvsigsidvskx_0_111111121111111
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.28, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.30 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.30, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.32 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.30 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.30 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.36 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.38 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.32 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSAsidvsigsidvskx_0_111111121111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_1
        solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
          case c_sig
          solve( !KU( ~n.2 ) @ #vk.11 )
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.29, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.31 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.32, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            next
              case incSAsidsvsigs_2_11111112111121
              by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_1
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_2
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_3
            by contradiction /* from formulas */
          next
            case outcskpsidcSAcSJ_0_1111111211211111_case_4
            by contradiction /* from formulas */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
          by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                         >,
                                         $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                    ) ▶₀ #vr.31 )
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
          solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                      $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                 ) ▶₀ #vr.31 )
            case incSAsidsvsigs_2_11111112111121
            solve( !KU( ~n.2 ) @ #vk.12 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.35, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.37 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.37, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.2, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.39 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* impossible chain */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* impossible chain */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
          solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                      $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                 ) ▶₀ #vr.33 )
            case incSAsidsvsigs_0_11111112111121
            by contradiction /* cyclic */
          next
            case incSAsidsvsigs_2_11111112111121
            by contradiction /* cyclic */
          qed
        next
          case outcSJsidvsigsidvskx_0_1111111211111111
          by contradiction /* from formulas */
        qed
      next
        case outcSJsidvsigsidvskx_0_1111111211111111_case_2
        solve( Ack( ~n.1, <<~n.3, v_a>, sig(<~n.3, v_a>, sk($x))> ) ▶₁ #vr.25 )
          case incSAsidsvsigs_0_11111112111121
          solve( !KU( sig(<~n.3, v_a>, sk($y)) ) @ #vk.8 )
            case c_sig
            solve( !KU( ~n.2 ) @ #vk.11 )
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.31, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.33 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.34, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              next
                case incSAsidsvsigs_2_11111112111121
                by solve( (#vr.33, 0) ~~> (#vk.3, 0) )
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
              solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                          $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                     ) ▶₀ #vr.35 )
                case incSAsidsvsigs_0_11111112111121
                by contradiction /* cyclic */
              next
                case incSAsidsvsigs_2_11111112111121
                by contradiction /* cyclic */
              qed
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_1
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_2
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_3
              by contradiction /* from formulas */
            next
              case outcskpsidcSAcSJ_0_1111111211211111_case_4
              by contradiction /* from formulas */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
            by solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($y))
                                           >,
                                           $y, $y.1, c_AJ, c_SA, c_SJ, ~n.3
                      ) ▶₀ #vr.33 )
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
            solve( Let_111111121111211( <<sid_s.1, v_a>, sig(<~n.3, v_a>, sk($x.1))>,
                                        $x.1, $y, c_AJ, c_SA, c_SJ, ~n.3
                   ) ▶₀ #vr.33 )
              case incSAsidsvsigs_0_11111112111121
              solve( !KU( ~n.2 ) @ #vk.10 )
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_01
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_02
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.36, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_03
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_04
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.38 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_05
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_06
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.39, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_07
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_08
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_09
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_10
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                next
                  case incSAsidsvsigs_2_11111112111121
                  by solve( (#vr.38, 0) ~~> (#vk.3, 0) )
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_11
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcAJsidvsigssigsidvsky_0_1111111211112111_case_12
                solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                            $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                       ) ▶₀ #vr.40 )
                  case incSAsidsvsigs_0_11111112111121
                  by contradiction /* cyclic */
                next
                  case incSAsidsvsigs_2_11111112111121
                  by contradiction /* cyclic */
                qed
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_1
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_2
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_3
                by contradiction /* from formulas */
              next
                case outcskpsidcSAcSJ_0_1111111211211111_case_4
                by contradiction /* from formulas */
              qed
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_13
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_14
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* impossible chain */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* impossible chain */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_15
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcAJsidvsigssigsidvsky_0_1111111211112111_case_16
            solve( Let_111111121111211( <<sid_s.1, v>, sig(<sid, v>, sk($x.1))>,
                                        $x.1, $y.1, c_AJ, c_SA, c_SJ, sid
                   ) ▶₀ #vr.35 )
              case incSAsidsvsigs_0_11111112111121
              by contradiction /* cyclic */
            next
              case incSAsidsvsigs_2_11111112111121
              by contradiction /* cyclic */
            qed
          next
            case outcSJsidvsigsidvskx_0_1111111211111111
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
qed

lemma acc_blamed_inj:
  all-traces "⊤"
/*
guarded formula characterizing all counter-examples:
"⊥"
*/
by contradiction /* from formulas */

lemma acc_blamed_single:
  exists-trace
  "∃ x sid #i.
    (Blame( sid, x ) @ #i) ∧
    (∀ x.1 sid.1 #i.1. (Blame( sid.1, x.1 ) @ #i.1) ⇒ (x.1 = x))"
/*
guarded formula characterizing all satisfying traces:
"∃ x sid #i.
  (Blame( sid, x ) @ #i)
 ∧
  ∀ x.1 sid.1 #i.1. (Blame( sid.1, x.1 ) @ #i.1) ⇒ x.1 = x"
*/
simplify
solve( State_11111112111211111121( $x, $y, c_AJ, c_SA, c_SJ, sid, sid_a,
                                   sig1_s, sig2_s, sig_a, v_a, v_s, sid_s
       ) ▶₀ #i )
  case eventUnequalsid_0_1111111211121111112_case_01
  solve( State_11111112111211111121( $x, $y.1, c_AJ, c_SA.1, c_SJ.1, ~n.3,
                                     sid_a, sig1_s, sig2_s, sig_a, v_a.1, v_s.1, sid_s.1
         ) ▶₀ #j )
    case eventUnequalsid_0_1111111211121111112
    solve( Let_111111121111211( <<sid_s, v_a>, sig(<~n.3, v_a>, sk($x))>, $x,
                                $y, ~n, c_SA, c_SJ, ~n.3
           ) ▶₀ #vr.13 )
      case incSAsidsvsigs_2_11111112111121
      solve( !KU( ~n.1 ) @ #vk )
        case outcskpsidcSAcAJ_0_11111112112111121_case_2
        solve( !KU( sig(<~n.3, v_a>, sk($x)) ) @ #vk.11 )
          case c_sig
          solve( !KU( sk($x) ) @ #vk.16 )
            case outcskpsidcSAcAJ_0_11111112112111121_case_2
            solve( !KU( ~n.3 ) @ #vk.20 )
              case outcSAsidvsigsidvskx_0_111111121111111_case_1
              SOLVED // trace found
            qed
          qed
        qed
      qed
    qed
  qed
qed

predicate: blamed( x )<=>∃ sid #i. Blame( sid, x ) @ #i

/*
WARNING: the following wellformedness checks failed!

Accountability (RP check)
  The specification contains at least one restriction.
  
  Please verify manually that your protocol fulfills the following condition:
  
  For each case test τ, traces t, t’, and instantiations ρ, ρ’:
  If τ holds on t with ρ, and τ single-matches with ρ’ on t’, then
  there exists a trace t’’ such that τ single-matches with ρ on t’’
  and the parties corrupted in t’’ are the same as the parties
  corrupted in t’ renamed from rng(ρ’) to rng(ρ).

Derivation Checks
=================

  Derivation checks timed out.
  Use --derivcheck-timeout=INT to configure timeout.
  Set to 0 to deactivate for no timeout.
*/

/*
Generated from:
Tamarin version 1.9.0
Maude version 3.2.2
Git revision: c838686f5a3d41b6a355eafd32cc2104ca41809c (with uncommited changes), branch: HEAD
Compiled at: 2023-10-25 11:27:38.363683988 UTC
*/

end
/* Output

==============================================================================
summary of summaries:

analyzed: examples/accountability/csf21-acc-unbounded/previous/whodunit.spthy

  output:          examples/accountability/csf21-acc-unbounded/previous/whodunit.spthy.tmp
  processing time: 600.27s
  
  WARNING: 2 wellformedness check failed!
           The analysis results might be wrong!
  
  acc_blamed_suff (exists-trace): verified (9 steps)
  acc_verif_empty (all-traces): verified (2 steps)
  acc_blamed_verif_nonempty (all-traces): verified (38 steps)
  acc_blamed_min (all-traces): verified (2 steps)
  acc_blamed_uniq (all-traces): verified (9750 steps)
  acc_blamed_inj (all-traces): verified (1 steps)
  acc_blamed_single (exists-trace): verified (9 steps)

==============================================================================
*/
