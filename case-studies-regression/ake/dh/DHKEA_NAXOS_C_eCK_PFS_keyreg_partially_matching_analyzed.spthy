theory DHKEA_NAXOS_C_eCK_PFS_keyreg_partially_matching begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, multiset
functions: concat/2, first/1, fst/1, h/1, h1/1, h2/1, pair/2, second/1,
           snd/1
equations:
    concat(first(x), second(x)) = x,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2



rule (modulo E) generate_ltk:
   [ Fr( ~ea ) ]
  --[ RegKey( $A ), Honest( $A ) ]->
   [ !Ltk( $A, ~ea ), !Pk( $A, 'g'^~ea ), Out( 'g'^~ea ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) generate_ltk_dishonest:
   [ In( pkA ) ] --[ RegKey( $A ) ]-> [ !Pk( $A, pkA ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_NAXOS_1:
   [ Fr( ~ex ), !Ltk( $A, ~ea ) ]
  --[ Sid( ~ex, <$A, $B, <'1', 'g'^h1(<~ex, ~ea>)>, 'Init', 'NAXOS_C'> )
  ]->
   [
   Init_1( ~ex, $A, $B, ~ea, 'g'^h1(<~ex, ~ea>) ), !Ephk( ~ex, ~ex ),
   Out( 'g'^h1(<~ex, ~ea>) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_NAXOS_2:
   [
   Init_1( ~ex, $A, $B, ~ea, X ), !Pk( $B, KB ),
   In( <$B, Y, 
        h2(<
            first(h(<Y^~ea, KB^h1(<~ex, ~ea>), Y^h1(<~ex, ~ea>), $A, $B, X, Y, 
                     'NAXOS_C'>)), 
            'R', $B, $A, Y, X, 'NAXOS_C'>)
       >
   )
   ]
  --[
  Accept( ~ex,
          second(h(<Y^~ea, KB^h1(<~ex, ~ea>), Y^h1(<~ex, ~ea>), $A, $B, X, Y, 
                    'NAXOS_C'>))
  ),
  Sid( ~ex,
       <$A, $B, 
        (<'1', X>+<'2', Y>+
         <'3', $A, 
          h2(<
              first(h(<Y^~ea, KB^h1(<~ex, ~ea>), Y^h1(<~ex, ~ea>), $A, $B, X, Y, 
                       'NAXOS_C'>)), 
              'I', $A, $B, X, Y, 'NAXOS_C'>)
         >
        ), 
        'Init', 'NAXOS_C'>
  )
  ]->
   [
   Out( <$A, 
         h2(<
             first(h(<Y^~ea, KB^h1(<~ex, ~ea>), Y^h1(<~ex, ~ea>), $A, $B, X, Y, 
                      'NAXOS_C'>)), 
             'I', $A, $B, X, Y, 'NAXOS_C'>)
        >
   ),
   !Sessk( ~ex,
           second(h(<Y^~ea, KB^h1(<~ex, ~ea>), Y^h1(<~ex, ~ea>), $A, $B, X, Y, 
                     'NAXOS_C'>))
   )
   ]

  /*
  rule (modulo AC) Init_NAXOS_2:
     [
     Init_1( ~ex, $A, $B, ~ea, X ), !Pk( $B, KB ),
     In( <$B, Y, 
          h2(<first(h(<z, z.1, z.2, $A, $B, X, Y, 'NAXOS_C'>)), 'R', $B, $A, Y, X, 
              'NAXOS_C'>)
         >
     )
     ]
    --[
    Accept( ~ex, second(h(<z, z.1, z.2, $A, $B, X, Y, 'NAXOS_C'>)) ),
    Sid( ~ex,
         <$A, $B, 
          (<'1', X>+<'2', Y>+
           <'3', $A, 
            h2(<first(h(<z, z.1, z.2, $A, $B, X, Y, 'NAXOS_C'>)), 'I', $A, $B, X, Y, 
                'NAXOS_C'>)
           >
          ), 
          'Init', 'NAXOS_C'>
    )
    ]->
     [
     Out( <$A, 
           h2(<first(h(<z, z.1, z.2, $A, $B, X, Y, 'NAXOS_C'>)), 'I', $A, $B, X, Y, 
               'NAXOS_C'>)
          >
     ),
     !Sessk( ~ex, second(h(<z, z.1, z.2, $A, $B, X, Y, 'NAXOS_C'>)) )
     ]
    variants (modulo AC)
     1. ~ea   = ~ea.16
        ~ex   = ~ex.17
        KB    = KB.18
        Y     = Y.20
        z     = Y.20^~ea.16
        z.1   = KB.18^h1(<~ex.17, ~ea.16>)
        z.2   = Y.20^h1(<~ex.17, ~ea.16>)
    
     2. ~ea   = ~ea.17
        ~ex   = ~ex.18
        KB    = KB.19
        Y     = z.22^inv(~ea.17)
        z     = z.22
        z.1   = KB.19^h1(<~ex.18, ~ea.17>)
        z.2   = z.22^(h1(<~ex.18, ~ea.17>)*inv(~ea.17))
    
     3. ~ea   = ~ea.18
        ~ex   = ~ex.19
        KB    = z.24^inv(h1(<~ex.19, ~ea.18>))
        Y     = Y.22
        z     = Y.22^~ea.18
        z.1   = z.24
        z.2   = Y.22^h1(<~ex.19, ~ea.18>)
    
     4. ~ea   = ~ea.18
        ~ex   = ~ex.19
        KB    = z.24^inv(h1(<~ex.19, ~ea.18>))
        Y     = z.23^inv(~ea.18)
        z     = z.23
        z.1   = z.24
        z.2   = z.23^(h1(<~ex.19, ~ea.18>)*inv(~ea.18))
    
     5. ~ea   = ~ea.19
        ~ex   = ~ex.20
        KB    = KB.21
        Y     = z.26^inv(h1(<~ex.20, ~ea.19>))
        z     = z.26^(~ea.19*inv(h1(<~ex.20, ~ea.19>)))
        z.1   = KB.21^h1(<~ex.20, ~ea.19>)
        z.2   = z.26
    
     6. ~ea   = ~ea.19
        ~ex   = ~ex.20
        KB    = z.25^inv(h1(<~ex.20, ~ea.19>))
        Y     = z.26^inv(h1(<~ex.20, ~ea.19>))
        z     = z.26^(~ea.19*inv(h1(<~ex.20, ~ea.19>)))
        z.1   = z.25
        z.2   = z.26
    
     7. ~ea   = ~ea.103
        ~ex   = ~ex.104
        KB    = KB.105
        Y     = x.201^x.202
        z     = x.201^(~ea.103*x.202)
        z.1   = KB.105^h1(<~ex.104, ~ea.103>)
        z.2   = x.201^(x.202*h1(<~ex.104, ~ea.103>))
    
     8. ~ea   = ~ea.103
        ~ex   = ~ex.104
        KB    = x.201^x.202
        Y     = Y.107
        z     = Y.107^~ea.103
        z.1   = x.201^(x.202*h1(<~ex.104, ~ea.103>))
        z.2   = Y.107^h1(<~ex.104, ~ea.103>)
    
     9. ~ea   = ~ea.105
        ~ex   = ~ex.106
        KB    = x.205^x.206
        Y     = z.110^inv(~ea.105)
        z     = z.110
        z.1   = x.205^(x.206*h1(<~ex.106, ~ea.105>))
        z.2   = z.110^(h1(<~ex.106, ~ea.105>)*inv(~ea.105))
    
    10. ~ea   = ~ea.105
        ~ex   = ~ex.106
        KB    = x.205^x.206
        Y     = z.112^inv(h1(<~ex.106, ~ea.105>))
        z     = z.112^(~ea.105*inv(h1(<~ex.106, ~ea.105>)))
        z.1   = x.205^(x.206*h1(<~ex.106, ~ea.105>))
        z.2   = z.112
    
    11. ~ea   = ~ea.105
        ~ex   = ~ex.106
        KB    = x.205^inv((x.206*h1(<~ex.106, ~ea.105>)))
        Y     = Y.109
        z     = Y.109^~ea.105
        z.1   = x.205^inv(x.206)
        z.2   = Y.109^h1(<~ex.106, ~ea.105>)
    
    12. ~ea   = ~ea.105
        ~ex   = ~ex.106
        KB    = x.205^inv((x.206*h1(<~ex.106, ~ea.105>)))
        Y     = z.110^inv(~ea.105)
        z     = z.110
        z.1   = x.205^inv(x.206)
        z.2   = z.110^(h1(<~ex.106, ~ea.105>)*inv(~ea.105))
    
    13. ~ea   = ~ea.105
        ~ex   = ~ex.106
        KB    = x.205^inv((x.206*h1(<~ex.106, ~ea.105>)))
        Y     = z.112^inv(h1(<~ex.106, ~ea.105>))
        z     = z.112^(~ea.105*inv(h1(<~ex.106, ~ea.105>)))
        z.1   = x.205^inv(x.206)
        z.2   = z.112
    
    14. ~ea   = ~ea.105
        ~ex   = ~ex.106
        KB    = x.205^(x.206*inv(h1(<~ex.106, ~ea.105>)))
        Y     = Y.109
        z     = Y.109^~ea.105
        z.1   = x.205^x.206
        z.2   = Y.109^h1(<~ex.106, ~ea.105>)
    
    15. ~ea   = ~ea.105
        ~ex   = ~ex.106
        KB    = x.205^(x.206*inv(h1(<~ex.106, ~ea.105>)))
        Y     = z.110^inv(~ea.105)
        z     = z.110
        z.1   = x.205^x.206
        z.2   = z.110^(h1(<~ex.106, ~ea.105>)*inv(~ea.105))
    
    16. ~ea   = ~ea.105
        ~ex   = ~ex.106
        KB    = x.205^(x.206*inv(h1(<~ex.106, ~ea.105>)))
        Y     = z.112^inv(h1(<~ex.106, ~ea.105>))
        z     = z.112^(~ea.105*inv(h1(<~ex.106, ~ea.105>)))
        z.1   = x.205^x.206
        z.2   = z.112
    
    17. ~ea   = ~ea.106
        ~ex   = ~ex.107
        KB    = KB.108
        Y     = x.208^inv((~ea.106*h1(<~ex.107, ~ea.106>)))
        z     = x.208^inv(h1(<~ex.107, ~ea.106>))
        z.1   = KB.108^h1(<~ex.107, ~ea.106>)
        z.2   = x.208^inv(~ea.106)
    
    18. ~ea   = ~ea.106
        ~ex   = ~ex.107
        KB    = z.112^inv(h1(<~ex.107, ~ea.106>))
        Y     = x.208^inv((~ea.106*h1(<~ex.107, ~ea.106>)))
        z     = x.208^inv(h1(<~ex.107, ~ea.106>))
        z.1   = z.112
        z.2   = x.208^inv(~ea.106)
    
    19. ~ea   = ~ea.106
        ~ex   = ~ex.107
        KB    = x.204^x.205
        Y     = x.207^x.208
        z     = x.207^(~ea.106*x.208)
        z.1   = x.204^(x.205*h1(<~ex.107, ~ea.106>))
        z.2   = x.207^(x.208*h1(<~ex.107, ~ea.106>))
    
    20. ~ea   = ~ea.106
        ~ex   = ~ex.107
        KB    = x.206^(x.207*inv((x.208*h1(<~ex.107, ~ea.106>))))
        Y     = Y.110
        z     = Y.110^~ea.106
        z.1   = x.206^(x.207*inv(x.208))
        z.2   = Y.110^h1(<~ex.107, ~ea.106>)
    
    21. ~ea   = ~ea.106
        ~ex   = ~ex.107
        KB    = x.206^(x.207*inv((x.208*h1(<~ex.107, ~ea.106>))))
        Y     = z.111^inv(~ea.106)
        z     = z.111
        z.1   = x.206^(x.207*inv(x.208))
        z.2   = z.111^(h1(<~ex.107, ~ea.106>)*inv(~ea.106))
    
    22. ~ea   = ~ea.106
        ~ex   = ~ex.107
        KB    = x.206^(x.207*inv((x.208*h1(<~ex.107, ~ea.106>))))
        Y     = z.113^inv(h1(<~ex.107, ~ea.106>))
        z     = z.113^(~ea.106*inv(h1(<~ex.107, ~ea.106>)))
        z.1   = x.206^(x.207*inv(x.208))
        z.2   = z.113
    
    23. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = KB.109
        Y     = x.209^inv((~ea.107*x.210))
        z     = x.209^inv(x.210)
        z.1   = KB.109^h1(<~ex.108, ~ea.107>)
        z.2   = x.209^(h1(<~ex.108, ~ea.107>)*inv((~ea.107*x.210)))
    
    24. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = KB.109
        Y     = x.209^inv((~ea.107*x.210*h1(<~ex.108, ~ea.107>)))
        z     = x.209^inv((x.210*h1(<~ex.108, ~ea.107>)))
        z.1   = KB.109^h1(<~ex.108, ~ea.107>)
        z.2   = x.209^inv((~ea.107*x.210))
    
    25. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = KB.109
        Y     = x.209^inv((x.210*h1(<~ex.108, ~ea.107>)))
        z     = x.209^(~ea.107*inv((x.210*h1(<~ex.108, ~ea.107>))))
        z.1   = KB.109^h1(<~ex.108, ~ea.107>)
        z.2   = x.209^inv(x.210)
    
    26. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = KB.109
        Y     = x.209^(x.210*inv(~ea.107))
        z     = x.209^x.210
        z.1   = KB.109^h1(<~ex.108, ~ea.107>)
        z.2   = x.209^(x.210*h1(<~ex.108, ~ea.107>)*inv(~ea.107))
    
    27. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = KB.109
        Y     = x.209^(x.210*inv(h1(<~ex.108, ~ea.107>)))
        z     = x.209^(~ea.107*x.210*inv(h1(<~ex.108, ~ea.107>)))
        z.1   = KB.109^h1(<~ex.108, ~ea.107>)
        z.2   = x.209^x.210
    
    28. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = KB.109
        Y     = x.209^(x.210*inv((~ea.107*h1(<~ex.108, ~ea.107>))))
        z     = x.209^(x.210*inv(h1(<~ex.108, ~ea.107>)))
        z.1   = KB.109^h1(<~ex.108, ~ea.107>)
        z.2   = x.209^(x.210*inv(~ea.107))
    
    29. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = z.113^inv(h1(<~ex.108, ~ea.107>))
        Y     = x.209^x.210
        z     = x.209^(~ea.107*x.210)
        z.1   = z.113
        z.2   = x.209^(x.210*h1(<~ex.108, ~ea.107>))
    
    30. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = z.113^inv(h1(<~ex.108, ~ea.107>))
        Y     = x.209^inv((~ea.107*x.210))
        z     = x.209^inv(x.210)
        z.1   = z.113
        z.2   = x.209^(h1(<~ex.108, ~ea.107>)*inv((~ea.107*x.210)))
    
    31. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = z.113^inv(h1(<~ex.108, ~ea.107>))
        Y     = x.209^inv((~ea.107*x.210*h1(<~ex.108, ~ea.107>)))
        z     = x.209^inv((x.210*h1(<~ex.108, ~ea.107>)))
        z.1   = z.113
        z.2   = x.209^inv((~ea.107*x.210))
    
    32. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = z.113^inv(h1(<~ex.108, ~ea.107>))
        Y     = x.209^inv((x.210*h1(<~ex.108, ~ea.107>)))
        z     = x.209^(~ea.107*inv((x.210*h1(<~ex.108, ~ea.107>))))
        z.1   = z.113
        z.2   = x.209^inv(x.210)
    
    33. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = z.113^inv(h1(<~ex.108, ~ea.107>))
        Y     = x.209^(x.210*inv(~ea.107))
        z     = x.209^x.210
        z.1   = z.113
        z.2   = x.209^(x.210*h1(<~ex.108, ~ea.107>)*inv(~ea.107))
    
    34. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = z.113^inv(h1(<~ex.108, ~ea.107>))
        Y     = x.209^(x.210*inv(h1(<~ex.108, ~ea.107>)))
        z     = x.209^(~ea.107*x.210*inv(h1(<~ex.108, ~ea.107>)))
        z.1   = z.113
        z.2   = x.209^x.210
    
    35. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = z.113^inv(h1(<~ex.108, ~ea.107>))
        Y     = x.209^(x.210*inv((~ea.107*h1(<~ex.108, ~ea.107>))))
        z     = x.209^(x.210*inv(h1(<~ex.108, ~ea.107>)))
        z.1   = z.113
        z.2   = x.209^(x.210*inv(~ea.107))
    
    36. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = x.207^x.208
        Y     = x.210^inv((~ea.107*h1(<~ex.108, ~ea.107>)))
        z     = x.210^inv(h1(<~ex.108, ~ea.107>))
        z.1   = x.207^(x.208*h1(<~ex.108, ~ea.107>))
        z.2   = x.210^inv(~ea.107)
    
    37. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = x.207^inv((x.208*h1(<~ex.108, ~ea.107>)))
        Y     = x.210^inv((~ea.107*h1(<~ex.108, ~ea.107>)))
        z     = x.210^inv(h1(<~ex.108, ~ea.107>))
        z.1   = x.207^inv(x.208)
        z.2   = x.210^inv(~ea.107)
    
    38. ~ea   = ~ea.107
        ~ex   = ~ex.108
        KB    = x.207^(x.208*inv(h1(<~ex.108, ~ea.107>)))
        Y     = x.210^inv((~ea.107*h1(<~ex.108, ~ea.107>)))
        z     = x.210^inv(h1(<~ex.108, ~ea.107>))
        z.1   = x.207^x.208
        z.2   = x.210^inv(~ea.107)
    
    39. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = KB.110
        Y     = x.210^(x.211*inv((~ea.108*x.212)))
        z     = x.210^(x.211*inv(x.212))
        z.1   = KB.110^h1(<~ex.109, ~ea.108>)
        z.2   = x.210^(x.211*h1(<~ex.109, ~ea.108>)*inv((~ea.108*x.212)))
    
    40. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = KB.110
        Y     = x.210^(x.211*inv((~ea.108*x.212*h1(<~ex.109, ~ea.108>))))
        z     = x.210^(x.211*inv((x.212*h1(<~ex.109, ~ea.108>))))
        z.1   = KB.110^h1(<~ex.109, ~ea.108>)
        z.2   = x.210^(x.211*inv((~ea.108*x.212)))
    
    41. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = KB.110
        Y     = x.210^(x.211*inv((x.212*h1(<~ex.109, ~ea.108>))))
        z     = x.210^(~ea.108*x.211*inv((x.212*h1(<~ex.109, ~ea.108>))))
        z.1   = KB.110^h1(<~ex.109, ~ea.108>)
        z.2   = x.210^(x.211*inv(x.212))
    
    42. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = z.114^inv(h1(<~ex.109, ~ea.108>))
        Y     = x.210^(x.211*inv((~ea.108*x.212)))
        z     = x.210^(x.211*inv(x.212))
        z.1   = z.114
        z.2   = x.210^(x.211*h1(<~ex.109, ~ea.108>)*inv((~ea.108*x.212)))
    
    43. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = z.114^inv(h1(<~ex.109, ~ea.108>))
        Y     = x.210^(x.211*inv((~ea.108*x.212*h1(<~ex.109, ~ea.108>))))
        z     = x.210^(x.211*inv((x.212*h1(<~ex.109, ~ea.108>))))
        z.1   = z.114
        z.2   = x.210^(x.211*inv((~ea.108*x.212)))
    
    44. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = z.114^inv(h1(<~ex.109, ~ea.108>))
        Y     = x.210^(x.211*inv((x.212*h1(<~ex.109, ~ea.108>))))
        z     = x.210^(~ea.108*x.211*inv((x.212*h1(<~ex.109, ~ea.108>))))
        z.1   = z.114
        z.2   = x.210^(x.211*inv(x.212))
    
    45. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^x.209
        Y     = x.211^inv((~ea.108*x.212))
        z     = x.211^inv(x.212)
        z.1   = x.208^(x.209*h1(<~ex.109, ~ea.108>))
        z.2   = x.211^(h1(<~ex.109, ~ea.108>)*inv((~ea.108*x.212)))
    
    46. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^x.209
        Y     = x.211^inv((~ea.108*x.212*h1(<~ex.109, ~ea.108>)))
        z     = x.211^inv((x.212*h1(<~ex.109, ~ea.108>)))
        z.1   = x.208^(x.209*h1(<~ex.109, ~ea.108>))
        z.2   = x.211^inv((~ea.108*x.212))
    
    47. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^x.209
        Y     = x.211^inv((x.212*h1(<~ex.109, ~ea.108>)))
        z     = x.211^(~ea.108*inv((x.212*h1(<~ex.109, ~ea.108>))))
        z.1   = x.208^(x.209*h1(<~ex.109, ~ea.108>))
        z.2   = x.211^inv(x.212)
    
    48. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^x.209
        Y     = x.211^(x.212*inv(~ea.108))
        z     = x.211^x.212
        z.1   = x.208^(x.209*h1(<~ex.109, ~ea.108>))
        z.2   = x.211^(x.212*h1(<~ex.109, ~ea.108>)*inv(~ea.108))
    
    49. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^x.209
        Y     = x.211^(x.212*inv(h1(<~ex.109, ~ea.108>)))
        z     = x.211^(~ea.108*x.212*inv(h1(<~ex.109, ~ea.108>)))
        z.1   = x.208^(x.209*h1(<~ex.109, ~ea.108>))
        z.2   = x.211^x.212
    
    50. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^x.209
        Y     = x.211^(x.212*inv((~ea.108*h1(<~ex.109, ~ea.108>))))
        z     = x.211^(x.212*inv(h1(<~ex.109, ~ea.108>)))
        z.1   = x.208^(x.209*h1(<~ex.109, ~ea.108>))
        z.2   = x.211^(x.212*inv(~ea.108))
    
    51. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^inv((x.209*h1(<~ex.109, ~ea.108>)))
        Y     = x.211^x.212
        z     = x.211^(~ea.108*x.212)
        z.1   = x.208^inv(x.209)
        z.2   = x.211^(x.212*h1(<~ex.109, ~ea.108>))
    
    52. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^inv((x.209*h1(<~ex.109, ~ea.108>)))
        Y     = x.211^inv((~ea.108*x.212))
        z     = x.211^inv(x.212)
        z.1   = x.208^inv(x.209)
        z.2   = x.211^(h1(<~ex.109, ~ea.108>)*inv((~ea.108*x.212)))
    
    53. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^inv((x.209*h1(<~ex.109, ~ea.108>)))
        Y     = x.211^inv((~ea.108*x.212*h1(<~ex.109, ~ea.108>)))
        z     = x.211^inv((x.212*h1(<~ex.109, ~ea.108>)))
        z.1   = x.208^inv(x.209)
        z.2   = x.211^inv((~ea.108*x.212))
    
    54. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^inv((x.209*h1(<~ex.109, ~ea.108>)))
        Y     = x.211^inv((x.212*h1(<~ex.109, ~ea.108>)))
        z     = x.211^(~ea.108*inv((x.212*h1(<~ex.109, ~ea.108>))))
        z.1   = x.208^inv(x.209)
        z.2   = x.211^inv(x.212)
    
    55. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^inv((x.209*h1(<~ex.109, ~ea.108>)))
        Y     = x.211^(x.212*inv(~ea.108))
        z     = x.211^x.212
        z.1   = x.208^inv(x.209)
        z.2   = x.211^(x.212*h1(<~ex.109, ~ea.108>)*inv(~ea.108))
    
    56. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^inv((x.209*h1(<~ex.109, ~ea.108>)))
        Y     = x.211^(x.212*inv(h1(<~ex.109, ~ea.108>)))
        z     = x.211^(~ea.108*x.212*inv(h1(<~ex.109, ~ea.108>)))
        z.1   = x.208^inv(x.209)
        z.2   = x.211^x.212
    
    57. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^inv((x.209*h1(<~ex.109, ~ea.108>)))
        Y     = x.211^(x.212*inv((~ea.108*h1(<~ex.109, ~ea.108>))))
        z     = x.211^(x.212*inv(h1(<~ex.109, ~ea.108>)))
        z.1   = x.208^inv(x.209)
        z.2   = x.211^(x.212*inv(~ea.108))
    
    58. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^(x.209*inv(h1(<~ex.109, ~ea.108>)))
        Y     = x.211^x.212
        z     = x.211^(~ea.108*x.212)
        z.1   = x.208^x.209
        z.2   = x.211^(x.212*h1(<~ex.109, ~ea.108>))
    
    59. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^(x.209*inv(h1(<~ex.109, ~ea.108>)))
        Y     = x.211^inv((~ea.108*x.212))
        z     = x.211^inv(x.212)
        z.1   = x.208^x.209
        z.2   = x.211^(h1(<~ex.109, ~ea.108>)*inv((~ea.108*x.212)))
    
    60. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^(x.209*inv(h1(<~ex.109, ~ea.108>)))
        Y     = x.211^inv((~ea.108*x.212*h1(<~ex.109, ~ea.108>)))
        z     = x.211^inv((x.212*h1(<~ex.109, ~ea.108>)))
        z.1   = x.208^x.209
        z.2   = x.211^inv((~ea.108*x.212))
    
    61. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^(x.209*inv(h1(<~ex.109, ~ea.108>)))
        Y     = x.211^inv((x.212*h1(<~ex.109, ~ea.108>)))
        z     = x.211^(~ea.108*inv((x.212*h1(<~ex.109, ~ea.108>))))
        z.1   = x.208^x.209
        z.2   = x.211^inv(x.212)
    
    62. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^(x.209*inv(h1(<~ex.109, ~ea.108>)))
        Y     = x.211^(x.212*inv(~ea.108))
        z     = x.211^x.212
        z.1   = x.208^x.209
        z.2   = x.211^(x.212*h1(<~ex.109, ~ea.108>)*inv(~ea.108))
    
    63. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^(x.209*inv(h1(<~ex.109, ~ea.108>)))
        Y     = x.211^(x.212*inv(h1(<~ex.109, ~ea.108>)))
        z     = x.211^(~ea.108*x.212*inv(h1(<~ex.109, ~ea.108>)))
        z.1   = x.208^x.209
        z.2   = x.211^x.212
    
    64. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^(x.209*inv(h1(<~ex.109, ~ea.108>)))
        Y     = x.211^(x.212*inv((~ea.108*h1(<~ex.109, ~ea.108>))))
        z     = x.211^(x.212*inv(h1(<~ex.109, ~ea.108>)))
        z.1   = x.208^x.209
        z.2   = x.211^(x.212*inv(~ea.108))
    
    65. ~ea   = ~ea.108
        ~ex   = ~ex.109
        KB    = x.208^(x.209*inv((x.210*h1(<~ex.109, ~ea.108>))))
        Y     = x.212^inv((~ea.108*h1(<~ex.109, ~ea.108>)))
        z     = x.212^inv(h1(<~ex.109, ~ea.108>))
        z.1   = x.208^(x.209*inv(x.210))
        z.2   = x.212^inv(~ea.108)
    
    66. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^x.210
        Y     = x.212^(x.213*inv((~ea.109*x.214)))
        z     = x.212^(x.213*inv(x.214))
        z.1   = x.209^(x.210*h1(<~ex.110, ~ea.109>))
        z.2   = x.212^(x.213*h1(<~ex.110, ~ea.109>)*inv((~ea.109*x.214)))
    
    67. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^x.210
        Y     = x.212^(x.213*inv((~ea.109*x.214*h1(<~ex.110, ~ea.109>))))
        z     = x.212^(x.213*inv((x.214*h1(<~ex.110, ~ea.109>))))
        z.1   = x.209^(x.210*h1(<~ex.110, ~ea.109>))
        z.2   = x.212^(x.213*inv((~ea.109*x.214)))
    
    68. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^x.210
        Y     = x.212^(x.213*inv((x.214*h1(<~ex.110, ~ea.109>))))
        z     = x.212^(~ea.109*x.213*inv((x.214*h1(<~ex.110, ~ea.109>))))
        z.1   = x.209^(x.210*h1(<~ex.110, ~ea.109>))
        z.2   = x.212^(x.213*inv(x.214))
    
    69. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^inv((x.210*h1(<~ex.110, ~ea.109>)))
        Y     = x.212^(x.213*inv((~ea.109*x.214)))
        z     = x.212^(x.213*inv(x.214))
        z.1   = x.209^inv(x.210)
        z.2   = x.212^(x.213*h1(<~ex.110, ~ea.109>)*inv((~ea.109*x.214)))
    
    70. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^inv((x.210*h1(<~ex.110, ~ea.109>)))
        Y     = x.212^(x.213*inv((~ea.109*x.214*h1(<~ex.110, ~ea.109>))))
        z     = x.212^(x.213*inv((x.214*h1(<~ex.110, ~ea.109>))))
        z.1   = x.209^inv(x.210)
        z.2   = x.212^(x.213*inv((~ea.109*x.214)))
    
    71. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^inv((x.210*h1(<~ex.110, ~ea.109>)))
        Y     = x.212^(x.213*inv((x.214*h1(<~ex.110, ~ea.109>))))
        z     = x.212^(~ea.109*x.213*inv((x.214*h1(<~ex.110, ~ea.109>))))
        z.1   = x.209^inv(x.210)
        z.2   = x.212^(x.213*inv(x.214))
    
    72. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^(x.210*inv(h1(<~ex.110, ~ea.109>)))
        Y     = x.212^(x.213*inv((~ea.109*x.214)))
        z     = x.212^(x.213*inv(x.214))
        z.1   = x.209^x.210
        z.2   = x.212^(x.213*h1(<~ex.110, ~ea.109>)*inv((~ea.109*x.214)))
    
    73. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^(x.210*inv(h1(<~ex.110, ~ea.109>)))
        Y     = x.212^(x.213*inv((~ea.109*x.214*h1(<~ex.110, ~ea.109>))))
        z     = x.212^(x.213*inv((x.214*h1(<~ex.110, ~ea.109>))))
        z.1   = x.209^x.210
        z.2   = x.212^(x.213*inv((~ea.109*x.214)))
    
    74. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^(x.210*inv(h1(<~ex.110, ~ea.109>)))
        Y     = x.212^(x.213*inv((x.214*h1(<~ex.110, ~ea.109>))))
        z     = x.212^(~ea.109*x.213*inv((x.214*h1(<~ex.110, ~ea.109>))))
        z.1   = x.209^x.210
        z.2   = x.212^(x.213*inv(x.214))
    
    75. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^(x.210*inv((x.211*h1(<~ex.110, ~ea.109>))))
        Y     = x.213^x.214
        z     = x.213^(~ea.109*x.214)
        z.1   = x.209^(x.210*inv(x.211))
        z.2   = x.213^(x.214*h1(<~ex.110, ~ea.109>))
    
    76. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^(x.210*inv((x.211*h1(<~ex.110, ~ea.109>))))
        Y     = x.213^inv((~ea.109*x.214))
        z     = x.213^inv(x.214)
        z.1   = x.209^(x.210*inv(x.211))
        z.2   = x.213^(h1(<~ex.110, ~ea.109>)*inv((~ea.109*x.214)))
    
    77. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^(x.210*inv((x.211*h1(<~ex.110, ~ea.109>))))
        Y     = x.213^inv((~ea.109*x.214*h1(<~ex.110, ~ea.109>)))
        z     = x.213^inv((x.214*h1(<~ex.110, ~ea.109>)))
        z.1   = x.209^(x.210*inv(x.211))
        z.2   = x.213^inv((~ea.109*x.214))
    
    78. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^(x.210*inv((x.211*h1(<~ex.110, ~ea.109>))))
        Y     = x.213^inv((x.214*h1(<~ex.110, ~ea.109>)))
        z     = x.213^(~ea.109*inv((x.214*h1(<~ex.110, ~ea.109>))))
        z.1   = x.209^(x.210*inv(x.211))
        z.2   = x.213^inv(x.214)
    
    79. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^(x.210*inv((x.211*h1(<~ex.110, ~ea.109>))))
        Y     = x.213^(x.214*inv(~ea.109))
        z     = x.213^x.214
        z.1   = x.209^(x.210*inv(x.211))
        z.2   = x.213^(x.214*h1(<~ex.110, ~ea.109>)*inv(~ea.109))
    
    80. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^(x.210*inv((x.211*h1(<~ex.110, ~ea.109>))))
        Y     = x.213^(x.214*inv(h1(<~ex.110, ~ea.109>)))
        z     = x.213^(~ea.109*x.214*inv(h1(<~ex.110, ~ea.109>)))
        z.1   = x.209^(x.210*inv(x.211))
        z.2   = x.213^x.214
    
    81. ~ea   = ~ea.109
        ~ex   = ~ex.110
        KB    = x.209^(x.210*inv((x.211*h1(<~ex.110, ~ea.109>))))
        Y     = x.213^(x.214*inv((~ea.109*h1(<~ex.110, ~ea.109>))))
        z     = x.213^(x.214*inv(h1(<~ex.110, ~ea.109>)))
        z.1   = x.209^(x.210*inv(x.211))
        z.2   = x.213^(x.214*inv(~ea.109))
    
    82. ~ea   = ~ea.110
        ~ex   = ~ex.111
        KB    = x.210^(x.211*inv((x.212*h1(<~ex.111, ~ea.110>))))
        Y     = x.214^(x.215*inv((~ea.110*x.216)))
        z     = x.214^(x.215*inv(x.216))
        z.1   = x.210^(x.211*inv(x.212))
        z.2   = x.214^(x.215*h1(<~ex.111, ~ea.110>)*inv((~ea.110*x.216)))
    
    83. ~ea   = ~ea.110
        ~ex   = ~ex.111
        KB    = x.210^(x.211*inv((x.212*h1(<~ex.111, ~ea.110>))))
        Y     = x.214^(x.215*inv((~ea.110*x.216*h1(<~ex.111, ~ea.110>))))
        z     = x.214^(x.215*inv((x.216*h1(<~ex.111, ~ea.110>))))
        z.1   = x.210^(x.211*inv(x.212))
        z.2   = x.214^(x.215*inv((~ea.110*x.216)))
    
    84. ~ea   = ~ea.110
        ~ex   = ~ex.111
        KB    = x.210^(x.211*inv((x.212*h1(<~ex.111, ~ea.110>))))
        Y     = x.214^(x.215*inv((x.216*h1(<~ex.111, ~ea.110>))))
        z     = x.214^(~ea.110*x.215*inv((x.216*h1(<~ex.111, ~ea.110>))))
        z.1   = x.210^(x.211*inv(x.212))
        z.2   = x.214^(x.215*inv(x.216))
  */

rule (modulo E) Resp_NAXOS_1:
   [ Fr( ~ey ), !Ltk( $B, ~eb ), !Pk( $A, KA ), In( X ) ]
  --[
  Sid( ~ey,
       <$B, $A, (<'1', X>+<'2', 'g'^h1(<~ey, ~eb>)>), 'Respo', 'NAXOS_C'>
  )
  ]->
   [
   Out( <$B, 'g'^h1(<~ey, ~eb>), 
         h2(<
             first(h(<KA^h1(<~ey, ~eb>), X^~eb, X^h1(<~ey, ~eb>), $A, $B, X, 
                      'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)), 
             'R', $B, $A, 'g'^h1(<~ey, ~eb>), X, 'NAXOS_C'>)
        >
   ),
   Resp_1( ~ey, $B, $A, 'g'^h1(<~ey, ~eb>), X,
           h2(<
               first(h(<KA^h1(<~ey, ~eb>), X^~eb, X^h1(<~ey, ~eb>), $A, $B, X, 
                        'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)), 
               'I', $A, $B, X, 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>),
           second(h(<KA^h1(<~ey, ~eb>), X^~eb, X^h1(<~ey, ~eb>), $A, $B, X, 
                     'g'^h1(<~ey, ~eb>), 'NAXOS_C'>))
   ),
   !Ephk( ~ey, ~ey )
   ]

  /*
  rule (modulo AC) Resp_NAXOS_1:
     [ Fr( ~ey ), !Ltk( $B, ~eb ), !Pk( $A, KA ), In( X ) ]
    --[
    Sid( ~ey,
         <$B, $A, (<'1', X>+<'2', 'g'^h1(<~ey, ~eb>)>), 'Respo', 'NAXOS_C'>
    )
    ]->
     [
     Out( <$B, 'g'^h1(<~ey, ~eb>), 
           h2(<first(h(<z, z.1, z.2, $A, $B, X, 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)), 
               'R', $B, $A, 'g'^h1(<~ey, ~eb>), X, 'NAXOS_C'>)
          >
     ),
     Resp_1( ~ey, $B, $A, 'g'^h1(<~ey, ~eb>), X,
             h2(<first(h(<z, z.1, z.2, $A, $B, X, 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)), 
                 'I', $A, $B, X, 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>),
             second(h(<z, z.1, z.2, $A, $B, X, 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>))
     ),
     !Ephk( ~ey, ~ey )
     ]
    variants (modulo AC)
     1. ~eb   = ~eb.15
        ~ey   = ~ey.16
        KA    = KA.17
        X     = X.18
        z     = KA.17^h1(<~ey.16, ~eb.15>)
        z.1   = X.18^~eb.15
        z.2   = X.18^h1(<~ey.16, ~eb.15>)
    
     2. ~eb   = ~eb.17
        ~ey   = ~ey.18
        KA    = z.22^inv(h1(<~ey.18, ~eb.17>))
        X     = X.20
        z     = z.22
        z.1   = X.20^~eb.17
        z.2   = X.20^h1(<~ey.18, ~eb.17>)
    
     3. ~eb   = ~eb.18
        ~ey   = ~ey.19
        KA    = KA.20
        X     = z.24^inv(~eb.18)
        z     = KA.20^h1(<~ey.19, ~eb.18>)
        z.1   = z.24
        z.2   = z.24^(h1(<~ey.19, ~eb.18>)*inv(~eb.18))
    
     4. ~eb   = ~eb.18
        ~ey   = ~ey.19
        KA    = z.23^inv(h1(<~ey.19, ~eb.18>))
        X     = z.24^inv(~eb.18)
        z     = z.23
        z.1   = z.24
        z.2   = z.24^(h1(<~ey.19, ~eb.18>)*inv(~eb.18))
    
     5. ~eb   = ~eb.19
        ~ey   = ~ey.20
        KA    = KA.21
        X     = z.26^inv(h1(<~ey.20, ~eb.19>))
        z     = KA.21^h1(<~ey.20, ~eb.19>)
        z.1   = z.26^(~eb.19*inv(h1(<~ey.20, ~eb.19>)))
        z.2   = z.26
    
     6. ~eb   = ~eb.19
        ~ey   = ~ey.20
        KA    = z.24^inv(h1(<~ey.20, ~eb.19>))
        X     = z.26^inv(h1(<~ey.20, ~eb.19>))
        z     = z.24
        z.1   = z.26^(~eb.19*inv(h1(<~ey.20, ~eb.19>)))
        z.2   = z.26
    
     7. ~eb   = ~eb.227
        ~ey   = ~ey.228
        KA    = KA.229
        X     = x.449^x.450
        z     = KA.229^h1(<~ey.228, ~eb.227>)
        z.1   = x.449^(~eb.227*x.450)
        z.2   = x.449^(x.450*h1(<~ey.228, ~eb.227>))
    
     8. ~eb   = ~eb.227
        ~ey   = ~ey.228
        KA    = x.449^x.450
        X     = X.230
        z     = x.449^(x.450*h1(<~ey.228, ~eb.227>))
        z.1   = X.230^~eb.227
        z.2   = X.230^h1(<~ey.228, ~eb.227>)
    
     9. ~eb   = ~eb.229
        ~ey   = ~ey.230
        KA    = KA.231
        X     = x.454^inv((~eb.229*h1(<~ey.230, ~eb.229>)))
        z     = KA.231^h1(<~ey.230, ~eb.229>)
        z.1   = x.454^inv(h1(<~ey.230, ~eb.229>))
        z.2   = x.454^inv(~eb.229)
    
    10. ~eb   = ~eb.229
        ~ey   = ~ey.230
        KA    = z.234^inv(h1(<~ey.230, ~eb.229>))
        X     = x.454^inv((~eb.229*h1(<~ey.230, ~eb.229>)))
        z     = z.234
        z.1   = x.454^inv(h1(<~ey.230, ~eb.229>))
        z.2   = x.454^inv(~eb.229)
    
    11. ~eb   = ~eb.229
        ~ey   = ~ey.230
        KA    = x.451^x.452
        X     = x.453^x.454
        z     = x.451^(x.452*h1(<~ey.230, ~eb.229>))
        z.1   = x.453^(~eb.229*x.454)
        z.2   = x.453^(x.454*h1(<~ey.230, ~eb.229>))
    
    12. ~eb   = ~eb.229
        ~ey   = ~ey.230
        KA    = x.453^x.454
        X     = z.235^inv(~eb.229)
        z     = x.453^(x.454*h1(<~ey.230, ~eb.229>))
        z.1   = z.235
        z.2   = z.235^(h1(<~ey.230, ~eb.229>)*inv(~eb.229))
    
    13. ~eb   = ~eb.229
        ~ey   = ~ey.230
        KA    = x.453^x.454
        X     = z.236^inv(h1(<~ey.230, ~eb.229>))
        z     = x.453^(x.454*h1(<~ey.230, ~eb.229>))
        z.1   = z.236^(~eb.229*inv(h1(<~ey.230, ~eb.229>)))
        z.2   = z.236
    
    14. ~eb   = ~eb.229
        ~ey   = ~ey.230
        KA    = x.453^inv((x.454*h1(<~ey.230, ~eb.229>)))
        X     = X.232
        z     = x.453^inv(x.454)
        z.1   = X.232^~eb.229
        z.2   = X.232^h1(<~ey.230, ~eb.229>)
    
    15. ~eb   = ~eb.229
        ~ey   = ~ey.230
        KA    = x.453^inv((x.454*h1(<~ey.230, ~eb.229>)))
        X     = z.235^inv(~eb.229)
        z     = x.453^inv(x.454)
        z.1   = z.235
        z.2   = z.235^(h1(<~ey.230, ~eb.229>)*inv(~eb.229))
    
    16. ~eb   = ~eb.229
        ~ey   = ~ey.230
        KA    = x.453^inv((x.454*h1(<~ey.230, ~eb.229>)))
        X     = z.236^inv(h1(<~ey.230, ~eb.229>))
        z     = x.453^inv(x.454)
        z.1   = z.236^(~eb.229*inv(h1(<~ey.230, ~eb.229>)))
        z.2   = z.236
    
    17. ~eb   = ~eb.229
        ~ey   = ~ey.230
        KA    = x.453^(x.454*inv(h1(<~ey.230, ~eb.229>)))
        X     = X.232
        z     = x.453^x.454
        z.1   = X.232^~eb.229
        z.2   = X.232^h1(<~ey.230, ~eb.229>)
    
    18. ~eb   = ~eb.229
        ~ey   = ~ey.230
        KA    = x.453^(x.454*inv(h1(<~ey.230, ~eb.229>)))
        X     = z.235^inv(~eb.229)
        z     = x.453^x.454
        z.1   = z.235
        z.2   = z.235^(h1(<~ey.230, ~eb.229>)*inv(~eb.229))
    
    19. ~eb   = ~eb.229
        ~ey   = ~ey.230
        KA    = x.453^(x.454*inv(h1(<~ey.230, ~eb.229>)))
        X     = z.236^inv(h1(<~ey.230, ~eb.229>))
        z     = x.453^x.454
        z.1   = z.236^(~eb.229*inv(h1(<~ey.230, ~eb.229>)))
        z.2   = z.236
    
    20. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = KA.232
        X     = x.455^inv((~eb.230*x.456))
        z     = KA.232^h1(<~ey.231, ~eb.230>)
        z.1   = x.455^inv(x.456)
        z.2   = x.455^(h1(<~ey.231, ~eb.230>)*inv((~eb.230*x.456)))
    
    21. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = KA.232
        X     = x.455^inv((~eb.230*x.456*h1(<~ey.231, ~eb.230>)))
        z     = KA.232^h1(<~ey.231, ~eb.230>)
        z.1   = x.455^inv((x.456*h1(<~ey.231, ~eb.230>)))
        z.2   = x.455^inv((~eb.230*x.456))
    
    22. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = KA.232
        X     = x.455^inv((x.456*h1(<~ey.231, ~eb.230>)))
        z     = KA.232^h1(<~ey.231, ~eb.230>)
        z.1   = x.455^(~eb.230*inv((x.456*h1(<~ey.231, ~eb.230>))))
        z.2   = x.455^inv(x.456)
    
    23. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = KA.232
        X     = x.455^(x.456*inv(~eb.230))
        z     = KA.232^h1(<~ey.231, ~eb.230>)
        z.1   = x.455^x.456
        z.2   = x.455^(x.456*h1(<~ey.231, ~eb.230>)*inv(~eb.230))
    
    24. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = KA.232
        X     = x.455^(x.456*inv(h1(<~ey.231, ~eb.230>)))
        z     = KA.232^h1(<~ey.231, ~eb.230>)
        z.1   = x.455^(~eb.230*x.456*inv(h1(<~ey.231, ~eb.230>)))
        z.2   = x.455^x.456
    
    25. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = KA.232
        X     = x.455^(x.456*inv((~eb.230*h1(<~ey.231, ~eb.230>))))
        z     = KA.232^h1(<~ey.231, ~eb.230>)
        z.1   = x.455^(x.456*inv(h1(<~ey.231, ~eb.230>)))
        z.2   = x.455^(x.456*inv(~eb.230))
    
    26. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = z.235^inv(h1(<~ey.231, ~eb.230>))
        X     = x.455^x.456
        z     = z.235
        z.1   = x.455^(~eb.230*x.456)
        z.2   = x.455^(x.456*h1(<~ey.231, ~eb.230>))
    
    27. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = z.235^inv(h1(<~ey.231, ~eb.230>))
        X     = x.455^inv((~eb.230*x.456))
        z     = z.235
        z.1   = x.455^inv(x.456)
        z.2   = x.455^(h1(<~ey.231, ~eb.230>)*inv((~eb.230*x.456)))
    
    28. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = z.235^inv(h1(<~ey.231, ~eb.230>))
        X     = x.455^inv((~eb.230*x.456*h1(<~ey.231, ~eb.230>)))
        z     = z.235
        z.1   = x.455^inv((x.456*h1(<~ey.231, ~eb.230>)))
        z.2   = x.455^inv((~eb.230*x.456))
    
    29. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = z.235^inv(h1(<~ey.231, ~eb.230>))
        X     = x.455^inv((x.456*h1(<~ey.231, ~eb.230>)))
        z     = z.235
        z.1   = x.455^(~eb.230*inv((x.456*h1(<~ey.231, ~eb.230>))))
        z.2   = x.455^inv(x.456)
    
    30. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = z.235^inv(h1(<~ey.231, ~eb.230>))
        X     = x.455^(x.456*inv(~eb.230))
        z     = z.235
        z.1   = x.455^x.456
        z.2   = x.455^(x.456*h1(<~ey.231, ~eb.230>)*inv(~eb.230))
    
    31. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = z.235^inv(h1(<~ey.231, ~eb.230>))
        X     = x.455^(x.456*inv(h1(<~ey.231, ~eb.230>)))
        z     = z.235
        z.1   = x.455^(~eb.230*x.456*inv(h1(<~ey.231, ~eb.230>)))
        z.2   = x.455^x.456
    
    32. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = z.235^inv(h1(<~ey.231, ~eb.230>))
        X     = x.455^(x.456*inv((~eb.230*h1(<~ey.231, ~eb.230>))))
        z     = z.235
        z.1   = x.455^(x.456*inv(h1(<~ey.231, ~eb.230>)))
        z.2   = x.455^(x.456*inv(~eb.230))
    
    33. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = x.454^x.455
        X     = x.456^inv((~eb.230*h1(<~ey.231, ~eb.230>)))
        z     = x.454^(x.455*h1(<~ey.231, ~eb.230>))
        z.1   = x.456^inv(h1(<~ey.231, ~eb.230>))
        z.2   = x.456^inv(~eb.230)
    
    34. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = x.454^inv((x.455*h1(<~ey.231, ~eb.230>)))
        X     = x.456^inv((~eb.230*h1(<~ey.231, ~eb.230>)))
        z     = x.454^inv(x.455)
        z.1   = x.456^inv(h1(<~ey.231, ~eb.230>))
        z.2   = x.456^inv(~eb.230)
    
    35. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = x.454^(x.455*inv(h1(<~ey.231, ~eb.230>)))
        X     = x.456^inv((~eb.230*h1(<~ey.231, ~eb.230>)))
        z     = x.454^x.455
        z.1   = x.456^inv(h1(<~ey.231, ~eb.230>))
        z.2   = x.456^inv(~eb.230)
    
    36. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = x.454^(x.455*inv((x.456*h1(<~ey.231, ~eb.230>))))
        X     = X.233
        z     = x.454^(x.455*inv(x.456))
        z.1   = X.233^~eb.230
        z.2   = X.233^h1(<~ey.231, ~eb.230>)
    
    37. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = x.454^(x.455*inv((x.456*h1(<~ey.231, ~eb.230>))))
        X     = z.236^inv(~eb.230)
        z     = x.454^(x.455*inv(x.456))
        z.1   = z.236
        z.2   = z.236^(h1(<~ey.231, ~eb.230>)*inv(~eb.230))
    
    38. ~eb   = ~eb.230
        ~ey   = ~ey.231
        KA    = x.454^(x.455*inv((x.456*h1(<~ey.231, ~eb.230>))))
        X     = z.237^inv(h1(<~ey.231, ~eb.230>))
        z     = x.454^(x.455*inv(x.456))
        z.1   = z.237^(~eb.230*inv(h1(<~ey.231, ~eb.230>)))
        z.2   = z.237
    
    39. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = KA.233
        X     = x.456^(x.457*inv((~eb.231*x.458)))
        z     = KA.233^h1(<~ey.232, ~eb.231>)
        z.1   = x.456^(x.457*inv(x.458))
        z.2   = x.456^(x.457*h1(<~ey.232, ~eb.231>)*inv((~eb.231*x.458)))
    
    40. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = KA.233
        X     = x.456^(x.457*inv((~eb.231*x.458*h1(<~ey.232, ~eb.231>))))
        z     = KA.233^h1(<~ey.232, ~eb.231>)
        z.1   = x.456^(x.457*inv((x.458*h1(<~ey.232, ~eb.231>))))
        z.2   = x.456^(x.457*inv((~eb.231*x.458)))
    
    41. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = KA.233
        X     = x.456^(x.457*inv((x.458*h1(<~ey.232, ~eb.231>))))
        z     = KA.233^h1(<~ey.232, ~eb.231>)
        z.1   = x.456^(~eb.231*x.457*inv((x.458*h1(<~ey.232, ~eb.231>))))
        z.2   = x.456^(x.457*inv(x.458))
    
    42. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = z.236^inv(h1(<~ey.232, ~eb.231>))
        X     = x.456^(x.457*inv((~eb.231*x.458)))
        z     = z.236
        z.1   = x.456^(x.457*inv(x.458))
        z.2   = x.456^(x.457*h1(<~ey.232, ~eb.231>)*inv((~eb.231*x.458)))
    
    43. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = z.236^inv(h1(<~ey.232, ~eb.231>))
        X     = x.456^(x.457*inv((~eb.231*x.458*h1(<~ey.232, ~eb.231>))))
        z     = z.236
        z.1   = x.456^(x.457*inv((x.458*h1(<~ey.232, ~eb.231>))))
        z.2   = x.456^(x.457*inv((~eb.231*x.458)))
    
    44. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = z.236^inv(h1(<~ey.232, ~eb.231>))
        X     = x.456^(x.457*inv((x.458*h1(<~ey.232, ~eb.231>))))
        z     = z.236
        z.1   = x.456^(~eb.231*x.457*inv((x.458*h1(<~ey.232, ~eb.231>))))
        z.2   = x.456^(x.457*inv(x.458))
    
    45. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^x.456
        X     = x.457^inv((~eb.231*x.458))
        z     = x.455^(x.456*h1(<~ey.232, ~eb.231>))
        z.1   = x.457^inv(x.458)
        z.2   = x.457^(h1(<~ey.232, ~eb.231>)*inv((~eb.231*x.458)))
    
    46. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^x.456
        X     = x.457^inv((~eb.231*x.458*h1(<~ey.232, ~eb.231>)))
        z     = x.455^(x.456*h1(<~ey.232, ~eb.231>))
        z.1   = x.457^inv((x.458*h1(<~ey.232, ~eb.231>)))
        z.2   = x.457^inv((~eb.231*x.458))
    
    47. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^x.456
        X     = x.457^inv((x.458*h1(<~ey.232, ~eb.231>)))
        z     = x.455^(x.456*h1(<~ey.232, ~eb.231>))
        z.1   = x.457^(~eb.231*inv((x.458*h1(<~ey.232, ~eb.231>))))
        z.2   = x.457^inv(x.458)
    
    48. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^x.456
        X     = x.457^(x.458*inv(~eb.231))
        z     = x.455^(x.456*h1(<~ey.232, ~eb.231>))
        z.1   = x.457^x.458
        z.2   = x.457^(x.458*h1(<~ey.232, ~eb.231>)*inv(~eb.231))
    
    49. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^x.456
        X     = x.457^(x.458*inv(h1(<~ey.232, ~eb.231>)))
        z     = x.455^(x.456*h1(<~ey.232, ~eb.231>))
        z.1   = x.457^(~eb.231*x.458*inv(h1(<~ey.232, ~eb.231>)))
        z.2   = x.457^x.458
    
    50. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^x.456
        X     = x.457^(x.458*inv((~eb.231*h1(<~ey.232, ~eb.231>))))
        z     = x.455^(x.456*h1(<~ey.232, ~eb.231>))
        z.1   = x.457^(x.458*inv(h1(<~ey.232, ~eb.231>)))
        z.2   = x.457^(x.458*inv(~eb.231))
    
    51. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^inv((x.456*h1(<~ey.232, ~eb.231>)))
        X     = x.457^x.458
        z     = x.455^inv(x.456)
        z.1   = x.457^(~eb.231*x.458)
        z.2   = x.457^(x.458*h1(<~ey.232, ~eb.231>))
    
    52. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^inv((x.456*h1(<~ey.232, ~eb.231>)))
        X     = x.457^inv((~eb.231*x.458))
        z     = x.455^inv(x.456)
        z.1   = x.457^inv(x.458)
        z.2   = x.457^(h1(<~ey.232, ~eb.231>)*inv((~eb.231*x.458)))
    
    53. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^inv((x.456*h1(<~ey.232, ~eb.231>)))
        X     = x.457^inv((~eb.231*x.458*h1(<~ey.232, ~eb.231>)))
        z     = x.455^inv(x.456)
        z.1   = x.457^inv((x.458*h1(<~ey.232, ~eb.231>)))
        z.2   = x.457^inv((~eb.231*x.458))
    
    54. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^inv((x.456*h1(<~ey.232, ~eb.231>)))
        X     = x.457^inv((x.458*h1(<~ey.232, ~eb.231>)))
        z     = x.455^inv(x.456)
        z.1   = x.457^(~eb.231*inv((x.458*h1(<~ey.232, ~eb.231>))))
        z.2   = x.457^inv(x.458)
    
    55. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^inv((x.456*h1(<~ey.232, ~eb.231>)))
        X     = x.457^(x.458*inv(~eb.231))
        z     = x.455^inv(x.456)
        z.1   = x.457^x.458
        z.2   = x.457^(x.458*h1(<~ey.232, ~eb.231>)*inv(~eb.231))
    
    56. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^inv((x.456*h1(<~ey.232, ~eb.231>)))
        X     = x.457^(x.458*inv(h1(<~ey.232, ~eb.231>)))
        z     = x.455^inv(x.456)
        z.1   = x.457^(~eb.231*x.458*inv(h1(<~ey.232, ~eb.231>)))
        z.2   = x.457^x.458
    
    57. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^inv((x.456*h1(<~ey.232, ~eb.231>)))
        X     = x.457^(x.458*inv((~eb.231*h1(<~ey.232, ~eb.231>))))
        z     = x.455^inv(x.456)
        z.1   = x.457^(x.458*inv(h1(<~ey.232, ~eb.231>)))
        z.2   = x.457^(x.458*inv(~eb.231))
    
    58. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^(x.456*inv(h1(<~ey.232, ~eb.231>)))
        X     = x.457^x.458
        z     = x.455^x.456
        z.1   = x.457^(~eb.231*x.458)
        z.2   = x.457^(x.458*h1(<~ey.232, ~eb.231>))
    
    59. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^(x.456*inv(h1(<~ey.232, ~eb.231>)))
        X     = x.457^inv((~eb.231*x.458))
        z     = x.455^x.456
        z.1   = x.457^inv(x.458)
        z.2   = x.457^(h1(<~ey.232, ~eb.231>)*inv((~eb.231*x.458)))
    
    60. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^(x.456*inv(h1(<~ey.232, ~eb.231>)))
        X     = x.457^inv((~eb.231*x.458*h1(<~ey.232, ~eb.231>)))
        z     = x.455^x.456
        z.1   = x.457^inv((x.458*h1(<~ey.232, ~eb.231>)))
        z.2   = x.457^inv((~eb.231*x.458))
    
    61. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^(x.456*inv(h1(<~ey.232, ~eb.231>)))
        X     = x.457^inv((x.458*h1(<~ey.232, ~eb.231>)))
        z     = x.455^x.456
        z.1   = x.457^(~eb.231*inv((x.458*h1(<~ey.232, ~eb.231>))))
        z.2   = x.457^inv(x.458)
    
    62. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^(x.456*inv(h1(<~ey.232, ~eb.231>)))
        X     = x.457^(x.458*inv(~eb.231))
        z     = x.455^x.456
        z.1   = x.457^x.458
        z.2   = x.457^(x.458*h1(<~ey.232, ~eb.231>)*inv(~eb.231))
    
    63. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^(x.456*inv(h1(<~ey.232, ~eb.231>)))
        X     = x.457^(x.458*inv(h1(<~ey.232, ~eb.231>)))
        z     = x.455^x.456
        z.1   = x.457^(~eb.231*x.458*inv(h1(<~ey.232, ~eb.231>)))
        z.2   = x.457^x.458
    
    64. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^(x.456*inv(h1(<~ey.232, ~eb.231>)))
        X     = x.457^(x.458*inv((~eb.231*h1(<~ey.232, ~eb.231>))))
        z     = x.455^x.456
        z.1   = x.457^(x.458*inv(h1(<~ey.232, ~eb.231>)))
        z.2   = x.457^(x.458*inv(~eb.231))
    
    65. ~eb   = ~eb.231
        ~ey   = ~ey.232
        KA    = x.455^(x.456*inv((x.457*h1(<~ey.232, ~eb.231>))))
        X     = x.458^inv((~eb.231*h1(<~ey.232, ~eb.231>)))
        z     = x.455^(x.456*inv(x.457))
        z.1   = x.458^inv(h1(<~ey.232, ~eb.231>))
        z.2   = x.458^inv(~eb.231)
    
    66. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^x.457
        X     = x.458^(x.459*inv((~eb.232*x.460)))
        z     = x.456^(x.457*h1(<~ey.233, ~eb.232>))
        z.1   = x.458^(x.459*inv(x.460))
        z.2   = x.458^(x.459*h1(<~ey.233, ~eb.232>)*inv((~eb.232*x.460)))
    
    67. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^x.457
        X     = x.458^(x.459*inv((~eb.232*x.460*h1(<~ey.233, ~eb.232>))))
        z     = x.456^(x.457*h1(<~ey.233, ~eb.232>))
        z.1   = x.458^(x.459*inv((x.460*h1(<~ey.233, ~eb.232>))))
        z.2   = x.458^(x.459*inv((~eb.232*x.460)))
    
    68. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^x.457
        X     = x.458^(x.459*inv((x.460*h1(<~ey.233, ~eb.232>))))
        z     = x.456^(x.457*h1(<~ey.233, ~eb.232>))
        z.1   = x.458^(~eb.232*x.459*inv((x.460*h1(<~ey.233, ~eb.232>))))
        z.2   = x.458^(x.459*inv(x.460))
    
    69. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^inv((x.457*h1(<~ey.233, ~eb.232>)))
        X     = x.458^(x.459*inv((~eb.232*x.460)))
        z     = x.456^inv(x.457)
        z.1   = x.458^(x.459*inv(x.460))
        z.2   = x.458^(x.459*h1(<~ey.233, ~eb.232>)*inv((~eb.232*x.460)))
    
    70. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^inv((x.457*h1(<~ey.233, ~eb.232>)))
        X     = x.458^(x.459*inv((~eb.232*x.460*h1(<~ey.233, ~eb.232>))))
        z     = x.456^inv(x.457)
        z.1   = x.458^(x.459*inv((x.460*h1(<~ey.233, ~eb.232>))))
        z.2   = x.458^(x.459*inv((~eb.232*x.460)))
    
    71. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^inv((x.457*h1(<~ey.233, ~eb.232>)))
        X     = x.458^(x.459*inv((x.460*h1(<~ey.233, ~eb.232>))))
        z     = x.456^inv(x.457)
        z.1   = x.458^(~eb.232*x.459*inv((x.460*h1(<~ey.233, ~eb.232>))))
        z.2   = x.458^(x.459*inv(x.460))
    
    72. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^(x.457*inv(h1(<~ey.233, ~eb.232>)))
        X     = x.458^(x.459*inv((~eb.232*x.460)))
        z     = x.456^x.457
        z.1   = x.458^(x.459*inv(x.460))
        z.2   = x.458^(x.459*h1(<~ey.233, ~eb.232>)*inv((~eb.232*x.460)))
    
    73. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^(x.457*inv(h1(<~ey.233, ~eb.232>)))
        X     = x.458^(x.459*inv((~eb.232*x.460*h1(<~ey.233, ~eb.232>))))
        z     = x.456^x.457
        z.1   = x.458^(x.459*inv((x.460*h1(<~ey.233, ~eb.232>))))
        z.2   = x.458^(x.459*inv((~eb.232*x.460)))
    
    74. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^(x.457*inv(h1(<~ey.233, ~eb.232>)))
        X     = x.458^(x.459*inv((x.460*h1(<~ey.233, ~eb.232>))))
        z     = x.456^x.457
        z.1   = x.458^(~eb.232*x.459*inv((x.460*h1(<~ey.233, ~eb.232>))))
        z.2   = x.458^(x.459*inv(x.460))
    
    75. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^(x.457*inv((x.458*h1(<~ey.233, ~eb.232>))))
        X     = x.459^x.460
        z     = x.456^(x.457*inv(x.458))
        z.1   = x.459^(~eb.232*x.460)
        z.2   = x.459^(x.460*h1(<~ey.233, ~eb.232>))
    
    76. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^(x.457*inv((x.458*h1(<~ey.233, ~eb.232>))))
        X     = x.459^inv((~eb.232*x.460))
        z     = x.456^(x.457*inv(x.458))
        z.1   = x.459^inv(x.460)
        z.2   = x.459^(h1(<~ey.233, ~eb.232>)*inv((~eb.232*x.460)))
    
    77. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^(x.457*inv((x.458*h1(<~ey.233, ~eb.232>))))
        X     = x.459^inv((~eb.232*x.460*h1(<~ey.233, ~eb.232>)))
        z     = x.456^(x.457*inv(x.458))
        z.1   = x.459^inv((x.460*h1(<~ey.233, ~eb.232>)))
        z.2   = x.459^inv((~eb.232*x.460))
    
    78. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^(x.457*inv((x.458*h1(<~ey.233, ~eb.232>))))
        X     = x.459^inv((x.460*h1(<~ey.233, ~eb.232>)))
        z     = x.456^(x.457*inv(x.458))
        z.1   = x.459^(~eb.232*inv((x.460*h1(<~ey.233, ~eb.232>))))
        z.2   = x.459^inv(x.460)
    
    79. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^(x.457*inv((x.458*h1(<~ey.233, ~eb.232>))))
        X     = x.459^(x.460*inv(~eb.232))
        z     = x.456^(x.457*inv(x.458))
        z.1   = x.459^x.460
        z.2   = x.459^(x.460*h1(<~ey.233, ~eb.232>)*inv(~eb.232))
    
    80. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^(x.457*inv((x.458*h1(<~ey.233, ~eb.232>))))
        X     = x.459^(x.460*inv(h1(<~ey.233, ~eb.232>)))
        z     = x.456^(x.457*inv(x.458))
        z.1   = x.459^(~eb.232*x.460*inv(h1(<~ey.233, ~eb.232>)))
        z.2   = x.459^x.460
    
    81. ~eb   = ~eb.232
        ~ey   = ~ey.233
        KA    = x.456^(x.457*inv((x.458*h1(<~ey.233, ~eb.232>))))
        X     = x.459^(x.460*inv((~eb.232*h1(<~ey.233, ~eb.232>))))
        z     = x.456^(x.457*inv(x.458))
        z.1   = x.459^(x.460*inv(h1(<~ey.233, ~eb.232>)))
        z.2   = x.459^(x.460*inv(~eb.232))
    
    82. ~eb   = ~eb.233
        ~ey   = ~ey.234
        KA    = x.457^(x.458*inv((x.459*h1(<~ey.234, ~eb.233>))))
        X     = x.460^(x.461*inv((~eb.233*x.462)))
        z     = x.457^(x.458*inv(x.459))
        z.1   = x.460^(x.461*inv(x.462))
        z.2   = x.460^(x.461*h1(<~ey.234, ~eb.233>)*inv((~eb.233*x.462)))
    
    83. ~eb   = ~eb.233
        ~ey   = ~ey.234
        KA    = x.457^(x.458*inv((x.459*h1(<~ey.234, ~eb.233>))))
        X     = x.460^(x.461*inv((~eb.233*x.462*h1(<~ey.234, ~eb.233>))))
        z     = x.457^(x.458*inv(x.459))
        z.1   = x.460^(x.461*inv((x.462*h1(<~ey.234, ~eb.233>))))
        z.2   = x.460^(x.461*inv((~eb.233*x.462)))
    
    84. ~eb   = ~eb.233
        ~ey   = ~ey.234
        KA    = x.457^(x.458*inv((x.459*h1(<~ey.234, ~eb.233>))))
        X     = x.460^(x.461*inv((x.462*h1(<~ey.234, ~eb.233>))))
        z     = x.457^(x.458*inv(x.459))
        z.1   = x.460^(~eb.233*x.461*inv((x.462*h1(<~ey.234, ~eb.233>))))
        z.2   = x.460^(x.461*inv(x.462))
  */

rule (modulo E) Resp_NAXOS_2:
   [ Resp_1( ~ey, $B, $A, Y, X, confA, key ), In( <$A, confA> ) ]
  --[
  Accept( ~ey, key ),
  Sid( ~ey,
       <$B, $A, (<'1', X>+<'2', Y>+<'3', $A, confA>), 'Respo', 'NAXOS_C'>
  )
  ]->
   [ !Sessk( ~ey, key ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_DHKEA_1:
   [ Fr( ~ex ), !Ltk( $A, ~ea ) ]
  --[ Sid( ~ex, <$A, $B, <'1', 'g'^h1(<~ex, ~ea>)>, 'Init', 'DHKEA'> ) ]->
   [
   Init_DHKEA_1( ~ex, $A, $B, ~ea, 'g'^h1(<~ex, ~ea>) ), !Ephk( ~ex, ~ex ),
   Out( 'g'^h1(<~ex, ~ea>) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_DHKEA_2:
   [
   Init_DHKEA_1( ~ex, $A, $B, ~ea, X ), !Pk( $B, 'g'^~eb ),
   In( <$B, Y, 
        h2(<first(h(<Y^h1(<~ex, ~ea>), $A, $B, X, Y, 'DHKEA'>)), 
            'g'^~eb^h1(<~ex, ~ea>), 'R', $B, $A, Y, X, 'DHKEA'>)
       >
   )
   ]
  --[
  Accept( ~ex, second(h(<Y^h1(<~ex, ~ea>), $A, $B, X, Y, 'DHKEA'>)) ),
  Sid( ~ex,
       <$A, $B, 
        (<'1', X>+<'2', Y>+
         <'3', $A, 
          h2(<first(h(<Y^h1(<~ex, ~ea>), $A, $B, X, Y, 'DHKEA'>)), Y^~ea, 'I', $A, 
              $B, X, Y, 'DHKEA'>)
         >
        ), 
        'Init', 'DHKEA'>
  )
  ]->
   [
   Out( <$A, 
         h2(<first(h(<Y^h1(<~ex, ~ea>), $A, $B, X, Y, 'DHKEA'>)), Y^~ea, 'I', $A, 
             $B, X, Y, 'DHKEA'>)
        >
   ),
   !Sessk( ~ex, second(h(<Y^h1(<~ex, ~ea>), $A, $B, X, Y, 'DHKEA'>)) )
   ]

  /*
  rule (modulo AC) Init_DHKEA_2:
     [
     Init_DHKEA_1( ~ex, $A, $B, ~ea, X ), !Pk( $B, 'g'^~x ),
     In( <$B, Y, 
          h2(<first(h(<z, $A, $B, X, Y, 'DHKEA'>)), 'g'^(~x*h1(<~ex, ~ea>)), 'R', 
              $B, $A, Y, X, 'DHKEA'>)
         >
     )
     ]
    --[
    Accept( ~ex, second(h(<z, $A, $B, X, Y, 'DHKEA'>)) ),
    Sid( ~ex,
         <$A, $B, 
          (<'1', X>+<'2', Y>+
           <'3', $A, 
            h2(<first(h(<z, $A, $B, X, Y, 'DHKEA'>)), z.1, 'I', $A, $B, X, Y, 'DHKEA'
               >)
           >
          ), 
          'Init', 'DHKEA'>
    )
    ]->
     [
     Out( <$A, 
           h2(<first(h(<z, $A, $B, X, Y, 'DHKEA'>)), z.1, 'I', $A, $B, X, Y, 'DHKEA'
              >)
          >
     ),
     !Sessk( ~ex, second(h(<z, $A, $B, X, Y, 'DHKEA'>)) )
     ]
    variants (modulo AC)
     1. ~ea   = ~ea.27
        ~ex   = ~ex.29
        Y     = Y.31
        z     = Y.31^h1(<~ex.29, ~ea.27>)
        z.1   = Y.31^~ea.27
    
     2. ~ea   = ~ea.29
        ~ex   = ~ex.31
        Y     = z.35^inv(h1(<~ex.31, ~ea.29>))
        z     = z.35
        z.1   = z.35^(~ea.29*inv(h1(<~ex.31, ~ea.29>)))
    
     3. ~ea   = ~ea.33
        ~ex   = ~ex.35
        Y     = z.43^inv(~ea.33)
        z     = z.43^(h1(<~ex.35, ~ea.33>)*inv(~ea.33))
        z.1   = z.43
    
     4. ~ea   = ~ea.471
        ~ex   = ~ex.473
        Y     = x.937^x.938
        z     = x.937^(x.938*h1(<~ex.473, ~ea.471>))
        z.1   = x.937^(~ea.471*x.938)
    
     5. ~ea   = ~ea.474
        ~ex   = ~ex.476
        Y     = x.944^inv((~ea.474*h1(<~ex.476, ~ea.474>)))
        z     = x.944^inv(~ea.474)
        z.1   = x.944^inv(h1(<~ex.476, ~ea.474>))
    
     6. ~ea   = ~ea.475
        ~ex   = ~ex.477
        Y     = x.945^inv((~ea.475*x.946))
        z     = x.945^(h1(<~ex.477, ~ea.475>)*inv((~ea.475*x.946)))
        z.1   = x.945^inv(x.946)
    
     7. ~ea   = ~ea.475
        ~ex   = ~ex.477
        Y     = x.945^inv((~ea.475*x.946*h1(<~ex.477, ~ea.475>)))
        z     = x.945^inv((~ea.475*x.946))
        z.1   = x.945^inv((x.946*h1(<~ex.477, ~ea.475>)))
    
     8. ~ea   = ~ea.475
        ~ex   = ~ex.477
        Y     = x.945^inv((x.946*h1(<~ex.477, ~ea.475>)))
        z     = x.945^inv(x.946)
        z.1   = x.945^(~ea.475*inv((x.946*h1(<~ex.477, ~ea.475>))))
    
     9. ~ea   = ~ea.475
        ~ex   = ~ex.477
        Y     = x.945^(x.946*inv(~ea.475))
        z     = x.945^(x.946*h1(<~ex.477, ~ea.475>)*inv(~ea.475))
        z.1   = x.945^x.946
    
    10. ~ea   = ~ea.475
        ~ex   = ~ex.477
        Y     = x.945^(x.946*inv(h1(<~ex.477, ~ea.475>)))
        z     = x.945^x.946
        z.1   = x.945^(~ea.475*x.946*inv(h1(<~ex.477, ~ea.475>)))
    
    11. ~ea   = ~ea.475
        ~ex   = ~ex.477
        Y     = x.945^(x.946*inv((~ea.475*h1(<~ex.477, ~ea.475>))))
        z     = x.945^(x.946*inv(~ea.475))
        z.1   = x.945^(x.946*inv(h1(<~ex.477, ~ea.475>)))
    
    12. ~ea   = ~ea.476
        ~ex   = ~ex.478
        Y     = x.946^(x.947*inv((~ea.476*x.948)))
        z     = x.946^(x.947*h1(<~ex.478, ~ea.476>)*inv((~ea.476*x.948)))
        z.1   = x.946^(x.947*inv(x.948))
    
    13. ~ea   = ~ea.476
        ~ex   = ~ex.478
        Y     = x.946^(x.947*inv((~ea.476*x.948*h1(<~ex.478, ~ea.476>))))
        z     = x.946^(x.947*inv((~ea.476*x.948)))
        z.1   = x.946^(x.947*inv((x.948*h1(<~ex.478, ~ea.476>))))
    
    14. ~ea   = ~ea.476
        ~ex   = ~ex.478
        Y     = x.946^(x.947*inv((x.948*h1(<~ex.478, ~ea.476>))))
        z     = x.946^(x.947*inv(x.948))
        z.1   = x.946^(~ea.476*x.947*inv((x.948*h1(<~ex.478, ~ea.476>))))
  */

rule (modulo E) Resp_DHKEA_1:
   [ Fr( ~ey ), !Ltk( $B, ~eb ), !Pk( $A, 'g'^~lkI ), In( X ) ]
  --[
  Sid( ~ey,
       <$B, $A, (<'1', X>+<'2', 'g'^h1(<~ey, ~eb>)>), 'Respo', 'DHKEA'>
  )
  ]->
   [
   Out( <$B, 'g'^h1(<~ey, ~eb>), 
         h2(<
             first(h(<X^h1(<~ey, ~eb>), $A, $B, X, 'g'^h1(<~ey, ~eb>), 'DHKEA'>)), 
             X^~eb, 'R', $B, $A, 'g'^h1(<~ey, ~eb>), X, 'DHKEA'>)
        >
   ),
   Resp_DHKEA_1( ~ey, $B, $A, 'g'^h1(<~ey, ~eb>), X,
                 h2(<
                     first(h(<X^h1(<~ey, ~eb>), $A, $B, X, 'g'^h1(<~ey, ~eb>), 'DHKEA'>)), 
                     'g'^~lkI^h1(<~ey, ~eb>), 'I', $A, $B, X, 'g'^h1(<~ey, ~eb>), 'DHKEA'>),
                 second(h(<X^h1(<~ey, ~eb>), $A, $B, X, 'g'^h1(<~ey, ~eb>), 'DHKEA'>))
   ),
   !Ephk( ~ey, ~ey )
   ]

  /*
  rule (modulo AC) Resp_DHKEA_1:
     [ Fr( ~ey ), !Ltk( $B, ~eb ), !Pk( $A, 'g'^~x ), In( X ) ]
    --[
    Sid( ~ey,
         <$B, $A, (<'1', X>+<'2', 'g'^h1(<~ey, ~eb>)>), 'Respo', 'DHKEA'>
    )
    ]->
     [
     Out( <$B, 'g'^h1(<~ey, ~eb>), 
           h2(<first(h(<z, $A, $B, X, 'g'^h1(<~ey, ~eb>), 'DHKEA'>)), z.1, 'R', $B, 
               $A, 'g'^h1(<~ey, ~eb>), X, 'DHKEA'>)
          >
     ),
     Resp_DHKEA_1( ~ey, $B, $A, 'g'^h1(<~ey, ~eb>), X,
                   h2(<first(h(<z, $A, $B, X, 'g'^h1(<~ey, ~eb>), 'DHKEA'>)), 
                       'g'^(~x*h1(<~ey, ~eb>)), 'I', $A, $B, X, 'g'^h1(<~ey, ~eb>), 'DHKEA'>),
                   second(h(<z, $A, $B, X, 'g'^h1(<~ey, ~eb>), 'DHKEA'>))
     ),
     !Ephk( ~ey, ~ey )
     ]
    variants (modulo AC)
     1. ~eb   = ~eb.40
        ~ey   = ~ey.41
        X     = X.43
        z     = X.43^h1(<~ey.41, ~eb.40>)
        z.1   = X.43^~eb.40
    
     2. ~eb   = ~eb.43
        ~ey   = ~ey.44
        X     = z.49^inv(h1(<~ey.44, ~eb.43>))
        z     = z.49
        z.1   = z.49^(~eb.43*inv(h1(<~ey.44, ~eb.43>)))
    
     3. ~eb   = ~eb.45
        ~ey   = ~ey.46
        X     = z.53^inv(~eb.45)
        z     = z.53^(h1(<~ey.46, ~eb.45>)*inv(~eb.45))
        z.1   = z.53
    
     4. ~eb   = ~eb.666
        ~ey   = ~ey.667
        X     = x.1327^x.1328
        z     = x.1327^(x.1328*h1(<~ey.667, ~eb.666>))
        z.1   = x.1327^(~eb.666*x.1328)
    
     5. ~eb   = ~eb.668
        ~ey   = ~ey.669
        X     = x.1332^inv((~eb.668*h1(<~ey.669, ~eb.668>)))
        z     = x.1332^inv(~eb.668)
        z.1   = x.1332^inv(h1(<~ey.669, ~eb.668>))
    
     6. ~eb   = ~eb.669
        ~ey   = ~ey.670
        X     = x.1333^inv((~eb.669*x.1334))
        z     = x.1333^(h1(<~ey.670, ~eb.669>)*inv((~eb.669*x.1334)))
        z.1   = x.1333^inv(x.1334)
    
     7. ~eb   = ~eb.669
        ~ey   = ~ey.670
        X     = x.1333^inv((~eb.669*x.1334*h1(<~ey.670, ~eb.669>)))
        z     = x.1333^inv((~eb.669*x.1334))
        z.1   = x.1333^inv((x.1334*h1(<~ey.670, ~eb.669>)))
    
     8. ~eb   = ~eb.669
        ~ey   = ~ey.670
        X     = x.1333^inv((x.1334*h1(<~ey.670, ~eb.669>)))
        z     = x.1333^inv(x.1334)
        z.1   = x.1333^(~eb.669*inv((x.1334*h1(<~ey.670, ~eb.669>))))
    
     9. ~eb   = ~eb.669
        ~ey   = ~ey.670
        X     = x.1333^(x.1334*inv(~eb.669))
        z     = x.1333^(x.1334*h1(<~ey.670, ~eb.669>)*inv(~eb.669))
        z.1   = x.1333^x.1334
    
    10. ~eb   = ~eb.669
        ~ey   = ~ey.670
        X     = x.1333^(x.1334*inv(h1(<~ey.670, ~eb.669>)))
        z     = x.1333^x.1334
        z.1   = x.1333^(~eb.669*x.1334*inv(h1(<~ey.670, ~eb.669>)))
    
    11. ~eb   = ~eb.669
        ~ey   = ~ey.670
        X     = x.1333^(x.1334*inv((~eb.669*h1(<~ey.670, ~eb.669>))))
        z     = x.1333^(x.1334*inv(~eb.669))
        z.1   = x.1333^(x.1334*inv(h1(<~ey.670, ~eb.669>)))
    
    12. ~eb   = ~eb.670
        ~ey   = ~ey.671
        X     = x.1334^(x.1335*inv((~eb.670*x.1336)))
        z     = x.1334^(x.1335*h1(<~ey.671, ~eb.670>)*inv((~eb.670*x.1336)))
        z.1   = x.1334^(x.1335*inv(x.1336))
    
    13. ~eb   = ~eb.670
        ~ey   = ~ey.671
        X     = x.1334^(x.1335*inv((~eb.670*x.1336*h1(<~ey.671, ~eb.670>))))
        z     = x.1334^(x.1335*inv((~eb.670*x.1336)))
        z.1   = x.1334^(x.1335*inv((x.1336*h1(<~ey.671, ~eb.670>))))
    
    14. ~eb   = ~eb.670
        ~ey   = ~ey.671
        X     = x.1334^(x.1335*inv((x.1336*h1(<~ey.671, ~eb.670>))))
        z     = x.1334^(x.1335*inv(x.1336))
        z.1   = x.1334^(~eb.670*x.1335*inv((x.1336*h1(<~ey.671, ~eb.670>))))
  */

rule (modulo E) Resp_DHKEA_2:
   [ Resp_DHKEA_1( ~ey, $B, $A, Y, X, confA, key ), In( <$A, confA> ) ]
  --[
  Accept( ~ey, key ),
  Sid( ~ey,
       <$B, $A, (<'1', X>+<'2', Y>+<'3', $A, confA>), 'Respo', 'DHKEA'>
  )
  ]->
   [ !Sessk( ~ey, key ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Sessk_reveal:
   [ !Sessk( ~s, k ) ] --[ RevealSessk( ~s ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Ltk_reveal:
   [ !Ltk( $A, ea ) ] --[ RevealLtk( $A ) ]-> [ Out( ea ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Ephk_reveal:
   [ !Ephk( ~s, ~ek ) ] --[ RevealEphk( ~s ) ]-> [ Out( ~ek ) ]

  /* has exactly the trivial AC variant */

restriction RegKeyUnique:
  "∀ #i #j A. ((RegKey( A ) @ #i) ∧ (RegKey( A ) @ #j)) ⇒ (#i = #j)"
  // safety formula

lemma execution_match_same_key_NAXOS:
  exists-trace
  "∃ #i1 #i2 s1 s2 k A B com role1 role2.
    ((((Accept( s1, k ) @ #i1) ∧ (Accept( s2, k ) @ #i2)) ∧
      (Sid( s1, <A, B, com, role1, 'NAXOS_C'> ) @ #i1)) ∧
     (Sid( s2, <B, A, com, role2, 'NAXOS_C'> ) @ #i2)) ∧
    (¬(role1 = role2))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i1 #i2 s1 s2 k A B com role1 role2.
  (Accept( s1, k ) @ #i1) ∧
  (Accept( s2, k ) @ #i2) ∧
  (Sid( s1, <A, B, com, role1, 'NAXOS_C'> ) @ #i1) ∧
  (Sid( s2, <B, A, com, role2, 'NAXOS_C'> ) @ #i2)
 ∧
  ¬(role1 = role2)"
*/
simplify
solve( Accept( s1, k ) @ #i1 )
  case Init_NAXOS_2
  solve( Init_1( ~ex, $A, $B, ~ea, X ) ▶₀ #i1 )
    case Init_NAXOS_1
    solve( !Pk( $B, KB ) ▶₁ #i1 )
      case generate_ltk
      solve( Accept( s2,
                     second(h(<z, 'g'^(~ea.1*h1(<~ex, ~ea>)), z.1, $A, $B, 
                               'g'^h1(<~ex, ~ea>), Y, 'NAXOS_C'>))
             ) @ #i2 )
        case Resp_NAXOS_2
        solve( Resp_1( ~ey, $B.1, $A.1, Y.1, X, confA,
                       second(h(<z, 'g'^(~ea.1*h1(<~ex, ~ea>)), z.1, $A, $B, 
                                 'g'^h1(<~ex, ~ea>), Y, 'NAXOS_C'>))
               ) ▶₀ #i2 )
          case Resp_NAXOS_1
          solve( Sid( ~ex, <A.1, B.1, com, role1, 'NAXOS_C'> ) @ #i1 )
            case Init_NAXOS_2
            solve( Sid( ~ey,
                        <$B, $A, 
                         (<'1', 'g'^h1(<~ex, ~ea>)>+<'2', 'g'^h1(<~ey, ~ea.1>)>+
                          <'3', $A, 
                           h2(<
                               first(h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 'g'^(~ea.1*h1(<~ex, ~ea>)), 
                                        'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                        'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)), 
                               'I', $A, $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)
                          >
                         ), 
                         role2, 'NAXOS_C'>
                   ) @ #i2 )
              case Resp_NAXOS_2
              solve( !KU( h2(<
                              first(h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 'g'^(~ea.1*h1(<~ex, ~ea>)), 
                                       'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                       'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)), 
                              'R', $B, $A, 'g'^h1(<~ey, ~ea.1>), 'g'^h1(<~ex, ~ea>), 'NAXOS_C'>)
                     ) @ #vk.4 )
                case Resp_NAXOS_1
                solve( !KU( 'g'^h1(<~ex, ~ea>) ) @ #vk.8 )
                  case Init_NAXOS_1
                  solve( !KU( 'g'^h1(<~ey, ~ea.1>) ) @ #vk.5 )
                    case Resp_NAXOS_1
                    solve( !KU( h2(<
                                    first(h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 'g'^(~ea.1*h1(<~ex, ~ea>)), 
                                             'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), $A, $B, 
                                             'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)), 
                                    'I', $A, $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)
                           ) @ #vk.8 )
                      case Init_NAXOS_2
                      SOLVED // trace found
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma eCK_key_secrecy:
  all-traces
  "∀ #i1 #i2 #i3 #i4 test A B k com role proto.
    (((((Accept( test, k ) @ #i1) ∧ (K( k ) @ #i2)) ∧
       (Sid( test, <A, B, com, role, proto> ) @ #i1)) ∧
      (Honest( A ) @ #i3)) ∧
     (Honest( B ) @ #i4)) ⇒
    ((((∃ #i3.1. RevealSessk( test ) @ #i3.1) ∨
       (∃ #i5 #i6. (RevealLtk( A ) @ #i5) ∧ (RevealEphk( test ) @ #i6))) ∨
      (∃ matchingSession #i3.1 matchingRole matchingCom.
        ((((Sid( matchingSession, <B, A, matchingCom, matchingRole, proto>
            ) @ #i3.1) ∧
           (¬(matchingRole = role))) ∧
          ((∃ rest. (matchingCom+rest) = com) ∨ (matchingCom = com))) ∧
         (¬(∃ #i4.1 sid.
             (Sid( matchingSession, sid ) @ #i4.1) ∧ (#i3.1 < #i4.1)))) ∧
        ((∃ #i5. RevealSessk( matchingSession ) @ #i5) ∨
         (∃ #i5 #i6.
           (RevealLtk( B ) @ #i5) ∧ (RevealEphk( matchingSession ) @ #i6))))) ∨
     ((¬(∃ matchingSession #i3.1 matchingRole matchingCom.
          (((Sid( matchingSession, <B, A, matchingCom, matchingRole, proto>
             ) @ #i3.1) ∧
            (¬(matchingRole = role))) ∧
           ((∃ rest. (matchingCom+rest) = com) ∨ (matchingCom = com))) ∧
          (¬(∃ #i4.1 sid.
              (Sid( matchingSession, sid ) @ #i4.1) ∧ (#i3.1 < #i4.1))))) ∧
      (∃ #i5. (RevealLtk( B ) @ #i5) ∧ (#i5 < #i1))))"
/*
guarded formula characterizing all counter-examples:
"∃ #i1 #i2 #i3 #i4 test A B k com role proto.
  (Accept( test, k ) @ #i1) ∧
  (K( k ) @ #i2) ∧
  (Sid( test, <A, B, com, role, proto> ) @ #i1) ∧
  (Honest( A ) @ #i3) ∧
  (Honest( B ) @ #i4)
 ∧
  (∀ #i3.1. (RevealSessk( test ) @ #i3.1) ⇒ ⊥) ∧
  (∀ #i5 #i6. (RevealLtk( A ) @ #i5) ∧ (RevealEphk( test ) @ #i6) ⇒ ⊥) ∧
  (∀ matchingSession #i3.1 matchingRole matchingCom.
    (Sid( matchingSession, <B, A, matchingCom, matchingRole, proto>
     ) @ #i3.1)
   ⇒
    ((matchingRole = role) ∨
     ((∀ rest. ((matchingCom+rest) = com) ⇒ ⊥) ∧ (¬(matchingCom = com))) ∨
     (∃ #i4.1 sid. (Sid( matchingSession, sid ) @ #i4.1) ∧ #i3.1 < #i4.1) ∨
     ((∀ #i5. (RevealSessk( matchingSession ) @ #i5) ⇒ ⊥) ∧
      (∀ #i5 #i6.
        (RevealLtk( B ) @ #i5) ∧ (RevealEphk( matchingSession ) @ #i6) ⇒ ⊥)))) ∧
  (((∃ matchingSession #i3.1 matchingRole matchingCom.
      (Sid( matchingSession, <B, A, matchingCom, matchingRole, proto>
       ) @ #i3.1)
     ∧
      (¬(matchingRole = role)) ∧
      (((∃ rest. ((matchingCom+rest) = com)) ∨ (matchingCom = com))) ∧
      (∀ #i4.1 sid.
        (Sid( matchingSession, sid ) @ #i4.1) ⇒ ¬(#i3.1 < #i4.1))) ∨
    (∀ #i5. (RevealLtk( B ) @ #i5) ⇒ ¬(#i5 < #i1))))"
*/
simplify
solve( (∃ matchingSession #i3 matchingRole matchingCom.
         (Sid( matchingSession, <$A.1, $A, matchingCom, matchingRole, proto>
          ) @ #i3)
        ∧
         (¬(matchingRole = role)) ∧
         (((∃ rest. ((matchingCom+rest) = com)) ∨ (matchingCom = com))) ∧
         (∀ #i4 sid. (Sid( matchingSession, sid ) @ #i4) ⇒ ¬(#i3 < #i4)))  ∥
       (∀ #i5. (RevealLtk( $A.1 ) @ #i5) ⇒ ¬(#i5 < #i1)) )
  case case_1
  solve( (∃ rest. ((matchingCom+rest) = com))  ∥ (matchingCom = com) )
    case case_1
    solve( (matchingRole = role)  ∥
           (∀ rest.1. ((matchingCom+rest.1) = (matchingCom+rest)) ⇒ ⊥)  ∥
           (∃ #i4 sid. (Sid( matchingSession, sid ) @ #i4) ∧ #i3.1 < #i4)  ∥
           ((∀ #i5. (RevealSessk( matchingSession ) @ #i5) ⇒ ⊥) ∧
            (∀ #i5 #i6.
              (RevealLtk( $A.1 ) @ #i5) ∧ (RevealEphk( matchingSession ) @ #i6) ⇒ ⊥)) )
      case case_1
      by contradiction /* from formulas */
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      by contradiction /* from formulas */
    next
      case case_4
      solve( Accept( test, k ) @ #i1 )
        case Init_DHKEA_2
        solve( Init_DHKEA_1( ~ex, $A, $B, ~ea, X ) ▶₀ #i1 )
          case Init_DHKEA_1
          solve( !Pk( $B, 'g'^~x ) ▶₁ #i1 )
            case generate_ltk
            solve( Sid( ~ex, <$A.1, $A.2, (matchingCom+rest), role, proto> ) @ #i1 )
              case Init_DHKEA_2_case_1
              by solve( Sid( matchingSession,
                             <$B, $A, 
                              <'3', $A, 
                               h2(<first(h(<z, $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>)), z.1, 'I', $A, 
                                   $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>)
                              >, 
                              matchingRole, 'DHKEA'>
                        ) @ #i3.1 )
            next
              case Init_DHKEA_2_case_2
              by solve( Sid( matchingSession,
                             <$B, $A, 
                              (<'2', Y>+
                               <'3', $A, 
                                h2(<first(h(<z, $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>)), z.1, 'I', $A, 
                                    $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>)
                               >
                              ), 
                              matchingRole, 'DHKEA'>
                        ) @ #i3.1 )
            next
              case Init_DHKEA_2_case_3
              by solve( Sid( matchingSession,
                             <$B, $A, 
                              (<'1', 'g'^h1(<~ex, ~ea>)>+
                               <'3', $A, 
                                h2(<first(h(<z, $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>)), z.1, 'I', $A, 
                                    $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>)
                               >
                              ), 
                              matchingRole, 'DHKEA'>
                        ) @ #i3.1 )
            next
              case Init_DHKEA_2_case_4
              solve( Sid( matchingSession,
                          <$B, $A, <'1', 'g'^h1(<~ex, ~ea>)>, matchingRole, 'DHKEA'>
                     ) @ #i3.1 )
                case Init_DHKEA_1
                by contradiction /* from formulas */
              qed
            next
              case Init_DHKEA_2_case_5
              solve( Sid( matchingSession,
                          <$B, $A, (<'1', 'g'^h1(<~ex, ~ea>)>+<'2', Y>), matchingRole, 'DHKEA'>
                     ) @ #i3.1 )
                case Resp_DHKEA_1
                solve( !Ltk( $B, ~eb ) ▶₁ #i3.1 )
                  case generate_ltk
                  solve( !Pk( $A, 'g'^~x ) ▶₂ #i3.1 )
                    case generate_ltk
                    solve( !KU( second(h(<'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)), $A, $B, 
                                          'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~eb>), 'DHKEA'>))
                           ) @ #vk )
                      case Sessk_reveal_case_1
                      by contradiction /* from formulas */
                    next
                      case Sessk_reveal_case_2
                      by contradiction /* from formulas */
                    next
                      case c_second
                      solve( !KU( h(<'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)), $A, $B, 
                                     'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~eb>), 'DHKEA'>)
                             ) @ #vk.7 )
                        case c_h
                        solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)) ) @ #vk.12 )
                          case Init_DHKEA_1
                          solve( !KU( h1(<~ey, ~eb>) ) @ #vk.16 )
                            case c_h1
                            solve( !KU( ~ey ) @ #vk.18 )
                              case Ephk_reveal
                              solve( !KU( ~eb ) @ #vk.19 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        next
                          case Resp_DHKEA_1
                          solve( !KU( h1(<~ex, ~ea>) ) @ #vk.16 )
                            case c_h1
                            solve( !KU( ~ex ) @ #vk.18 )
                              case Ephk_reveal
                              solve( !KU( ~ea ) @ #vk.19 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        next
                          case c_exp
                          solve( !KU( h1(<~ex, ~ea>) ) @ #vk.18 )
                            case c_h1
                            solve( !KU( ~ex ) @ #vk.21 )
                              case Ephk_reveal
                              solve( !KU( ~ea ) @ #vk.22 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case Init_DHKEA_2_case_6
              by solve( Sid( matchingSession, <$B, $A, <'2', Y>, matchingRole, 'DHKEA'>
                        ) @ #i3.1 )
            qed
          next
            case generate_ltk_dishonest
            by solve( Sid( ~ex, <$A.1, $A.2, (matchingCom+rest), role, proto>
                      ) @ #i1 )
          qed
        qed
      next
        case Init_NAXOS_2
        solve( Init_1( ~ex, $A, $B, ~ea, X ) ▶₀ #i1 )
          case Init_NAXOS_1
          solve( !Pk( $B, KB ) ▶₁ #i1 )
            case generate_ltk
            solve( Sid( ~ex, <$A.1, $A.2, (matchingCom+rest), role, proto> ) @ #i1 )
              case Init_NAXOS_2_case_1
              by solve( Sid( matchingSession,
                             <$B, $A, 
                              <'3', $A, 
                               h2(<
                                   first(h(<z, 'g'^(~ea.1*h1(<~ex, ~ea>)), z.1, $A, $B, 'g'^h1(<~ex, ~ea>), 
                                            Y, 'NAXOS_C'>)), 
                                   'I', $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'NAXOS_C'>)
                              >, 
                              matchingRole, 'NAXOS_C'>
                        ) @ #i3.1 )
            next
              case Init_NAXOS_2_case_2
              by solve( Sid( matchingSession,
                             <$B, $A, 
                              (<'2', Y>+
                               <'3', $A, 
                                h2(<
                                    first(h(<z, 'g'^(~ea.1*h1(<~ex, ~ea>)), z.1, $A, $B, 'g'^h1(<~ex, ~ea>), 
                                             Y, 'NAXOS_C'>)), 
                                    'I', $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'NAXOS_C'>)
                               >
                              ), 
                              matchingRole, 'NAXOS_C'>
                        ) @ #i3.1 )
            next
              case Init_NAXOS_2_case_3
              by solve( Sid( matchingSession,
                             <$B, $A, 
                              (<'1', 'g'^h1(<~ex, ~ea>)>+
                               <'3', $A, 
                                h2(<
                                    first(h(<z, 'g'^(~ea.1*h1(<~ex, ~ea>)), z.1, $A, $B, 'g'^h1(<~ex, ~ea>), 
                                             Y, 'NAXOS_C'>)), 
                                    'I', $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'NAXOS_C'>)
                               >
                              ), 
                              matchingRole, 'NAXOS_C'>
                        ) @ #i3.1 )
            next
              case Init_NAXOS_2_case_4
              solve( Sid( matchingSession,
                          <$B, $A, <'1', 'g'^h1(<~ex, ~ea>)>, matchingRole, 'NAXOS_C'>
                     ) @ #i3.1 )
                case Init_NAXOS_1
                by contradiction /* from formulas */
              qed
            next
              case Init_NAXOS_2_case_5
              solve( Sid( matchingSession,
                          <$B, $A, (<'1', 'g'^h1(<~ex, ~ea>)>+<'2', Y>), matchingRole, 'NAXOS_C'>
                     ) @ #i3.1 )
                case Resp_NAXOS_1
                solve( !Ltk( $B, ~eb ) ▶₁ #i3.1 )
                  case generate_ltk
                  solve( !Pk( $A, KA ) ▶₂ #i3.1 )
                    case generate_ltk
                    solve( !KU( second(h(<'g'^(~ea*h1(<~ey, ~eb>)), 
                                          'g'^(~eb*h1(<~ex, ~ea>)), 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)), $A, 
                                          $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>))
                           ) @ #vk )
                      case Sessk_reveal_case_1
                      by contradiction /* from formulas */
                    next
                      case Sessk_reveal_case_2
                      by contradiction /* from formulas */
                    next
                      case c_second
                      solve( !KU( h(<'g'^(~ea*h1(<~ey, ~eb>)), 'g'^(~eb*h1(<~ex, ~ea>)), 
                                     'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                     'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)
                             ) @ #vk.7 )
                        case c_h
                        solve( !KU( 'g'^(~ea*h1(<~ey, ~eb>)) ) @ #vk.12 )
                          case Resp_NAXOS_1
                          solve( !KU( ~ea ) @ #vk.20 )
                            case Ltk_reveal
                            solve( !KU( 'g'^(~eb*h1(<~ex, ~ea>)) ) @ #vk.17 )
                              case Init_NAXOS_1
                              solve( !KU( ~eb ) @ #vk.21 )
                                case Ltk_reveal
                                solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)) ) @ #vk.19 )
                                  case Init_NAXOS_1
                                  solve( !KU( h1(<~ey, ~eb>) ) @ #vk.22 )
                                    case c_h1
                                    solve( !KU( ~ey ) @ #vk.24 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case Resp_NAXOS_1
                                  solve( (∀ rest.
                                           ((rest+<'1', 'g'^h1(<~ex, ~ea>)>+<'2', 'g'^h1(<~ey, ~eb>)>) =
                                            (<'1', 'g'^h1(<~ex, ~ea>)>+<'2', 'g'^h1(<~ey, ~eb>)>+
                                             <'3', $A, 
                                              h2(<
                                                  first(h(<'g'^(~ea*h1(<~ey, ~eb>)), 
                                                           'g'^(~eb*h1(<~ex, ~ea>)), 
                                                           'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)), $A, $B, 
                                                           'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~eb>), 'NAXOS_C'
                                                          >)), 
                                                  'I', $A, $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~eb>), 
                                                  'NAXOS_C'>)
                                             >
                                            ))
                                          ⇒
                                           ⊥)  ∥
                                         (∃ #i4 sid. (Sid( ~ey, sid ) @ #i4) ∧ #i3.1 < #i4)  ∥
                                         ((∀ #i5. (RevealSessk( ~ey ) @ #i5) ⇒ ⊥) ∧
                                          (∀ #i5 #i6.
                                            (RevealLtk( $B ) @ #i5) ∧ (RevealEphk( ~ey ) @ #i6) ⇒ ⊥)) )
                                    case case_1
                                    by contradiction /* from formulas */
                                  next
                                    case case_2
                                    by contradiction /* from formulas */
                                  next
                                    case case_3
                                    solve( !KU( h1(<~ex, ~ea>) ) @ #vk.22 )
                                      case c_h1
                                      solve( !KU( ~ex ) @ #vk.24 )
                                        case Ephk_reveal
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  qed
                                next
                                  case c_exp
                                  solve( !KU( h1(<~ex, ~ea>) ) @ #vk.24 )
                                    case c_h1
                                    solve( !KU( ~ex ) @ #vk.27 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~eb ) @ #vk.23 )
                                case Ltk_reveal
                                solve( !KU( h1(<~ex, ~ea>) ) @ #vk.24 )
                                  case c_h1
                                  solve( !KU( ~ex ) @ #vk.26 )
                                    case Ephk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case generate_ltk
                              solve( !KU( h1(<~ex, ~ea>) ) @ #vk.21 )
                                case c_h1
                                solve( !KU( ~ex ) @ #vk.23 )
                                  case Ephk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_exp
                          solve( !KU( ~ea ) @ #vk.22 )
                            case Ltk_reveal
                            solve( !KU( h1(<~ey, ~eb>) ) @ #vk.23 )
                              case c_h1
                              solve( !KU( ~ey ) @ #vk.25 )
                                case Ephk_reveal
                                solve( !KU( ~eb ) @ #vk.26 )
                                  case Ltk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case generate_ltk
                          solve( !KU( h1(<~ey, ~eb>) ) @ #vk.20 )
                            case c_h1
                            solve( !KU( ~ey ) @ #vk.22 )
                              case Ephk_reveal
                              solve( !KU( ~eb ) @ #vk.23 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case Init_NAXOS_2_case_6
              by solve( Sid( matchingSession,
                             <$B, $A, <'2', Y>, matchingRole, 'NAXOS_C'>
                        ) @ #i3.1 )
            qed
          next
            case generate_ltk_dishonest
            by solve( Sid( ~ex, <$A.1, $A.2, (matchingCom+rest), role, proto>
                      ) @ #i1 )
          qed
        qed
      next
        case Resp_DHKEA_2
        solve( Resp_DHKEA_1( ~ey, $B, $A, Y, X, confA, k ) ▶₀ #i1 )
          case Resp_DHKEA_1_case_1
          solve( Sid( ~ey, <$A.1, $A.2, (matchingCom+rest), role, proto> ) @ #i1 )
            case Resp_DHKEA_2_case_1
            by solve( Sid( matchingSession,
                           <$A, $B, 
                            <'3', $A, 
                             h2(<first(h(<z, $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>)), 
                                 'g'^(~ea.1*h1(<~ey, ~ea>)), 'I', $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>)
                            >, 
                            matchingRole, 'DHKEA'>
                      ) @ #i3.1 )
          next
            case Resp_DHKEA_2_case_2
            by solve( Sid( matchingSession,
                           <$A, $B, 
                            (<'1', X>+
                             <'3', $A, 
                              h2(<first(h(<z, $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>)), 
                                  'g'^(~ea.1*h1(<~ey, ~ea>)), 'I', $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>)
                             >
                            ), 
                            matchingRole, 'DHKEA'>
                      ) @ #i3.1 )
          next
            case Resp_DHKEA_2_case_3
            by solve( Sid( matchingSession,
                           <$A, $B, 
                            (<'2', 'g'^h1(<~ey, ~ea>)>+
                             <'3', $A, 
                              h2(<first(h(<z, $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>)), 
                                  'g'^(~ea.1*h1(<~ey, ~ea>)), 'I', $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>)
                             >
                            ), 
                            matchingRole, 'DHKEA'>
                      ) @ #i3.1 )
          next
            case Resp_DHKEA_2_case_4
            by solve( Sid( matchingSession,
                           <$A, $B, <'2', 'g'^h1(<~ey, ~ea>)>, matchingRole, 'DHKEA'>
                      ) @ #i3.1 )
          next
            case Resp_DHKEA_2_case_5
            solve( Sid( matchingSession, <$A, $B, <'1', X>, matchingRole, 'DHKEA'>
                   ) @ #i3.1 )
              case Init_DHKEA_1
              solve( !Ltk( $A, ~ea.1 ) ▶₁ #i3.1 )
                case generate_ltk
                solve( !KU( second(h(<'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)), $A, $B, 
                                      'g'^h1(<~ex, ~ea.1>), 'g'^h1(<~ey, ~ea>), 'DHKEA'>))
                       ) @ #vk )
                  case Sessk_reveal_case_1
                  by contradiction /* from formulas */
                next
                  case Sessk_reveal_case_2
                  by contradiction /* from formulas */
                next
                  case c_second
                  solve( !KU( h(<'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)), $A, $B, 
                                 'g'^h1(<~ex, ~ea.1>), 'g'^h1(<~ey, ~ea>), 'DHKEA'>)
                         ) @ #vk.5 )
                    case c_h
                    solve( !KU( 'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)) ) @ #vk.9 )
                      case Init_DHKEA_1
                      solve( !KU( h1(<~ey, ~ea>) ) @ #vk.15 )
                        case c_h1
                        solve( !KU( ~ey ) @ #vk.17 )
                          case Ephk_reveal
                          solve( !KU( ~ea ) @ #vk.18 )
                            case Ltk_reveal
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    next
                      case Resp_DHKEA_1
                      solve( !KU( h1(<~ex, ~ea.1>) ) @ #vk.15 )
                        case c_h1
                        solve( !KU( ~ex ) @ #vk.17 )
                          case Ephk_reveal
                          solve( !KU( ~ea.1 ) @ #vk.18 )
                            case Ltk_reveal
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    next
                      case c_exp
                      solve( !KU( h1(<~ex, ~ea.1>) ) @ #vk.17 )
                        case c_h1
                        solve( !KU( ~ex ) @ #vk.20 )
                          case Ephk_reveal
                          solve( !KU( ~ea.1 ) @ #vk.21 )
                            case Ltk_reveal
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case Resp_DHKEA_2_case_6
            solve( Sid( matchingSession,
                        <$A, $B, (<'1', X>+<'2', 'g'^h1(<~ey, ~ea>)>), matchingRole, 'DHKEA'>
                   ) @ #i3.1 )
              case Resp_DHKEA_1
              by contradiction /* from formulas */
            qed
          qed
        next
          case Resp_DHKEA_1_case_2
          by solve( Sid( ~ey, <$A.1, $A.2, (matchingCom+rest), role, proto>
                    ) @ #i1 )
        qed
      next
        case Resp_NAXOS_2
        solve( Resp_1( ~ey, $B, $A, Y, X, confA, k ) ▶₀ #i1 )
          case Resp_NAXOS_1_case_1
          solve( Sid( ~ey, <$A.1, $A.2, (matchingCom+rest), role, proto> ) @ #i1 )
            case Resp_NAXOS_2_case_1
            by solve( Sid( matchingSession,
                           <$A, $B, 
                            <'3', $A, 
                             h2(<
                                 first(h(<'g'^(~ea.1*h1(<~ey, ~ea>)), z, z.1, $A, $B, X, 
                                          'g'^h1(<~ey, ~ea>), 'NAXOS_C'>)), 
                                 'I', $A, $B, X, 'g'^h1(<~ey, ~ea>), 'NAXOS_C'>)
                            >, 
                            matchingRole, 'NAXOS_C'>
                      ) @ #i3.1 )
          next
            case Resp_NAXOS_2_case_2
            by solve( Sid( matchingSession,
                           <$A, $B, 
                            (<'1', X>+
                             <'3', $A, 
                              h2(<
                                  first(h(<'g'^(~ea.1*h1(<~ey, ~ea>)), z, z.1, $A, $B, X, 
                                           'g'^h1(<~ey, ~ea>), 'NAXOS_C'>)), 
                                  'I', $A, $B, X, 'g'^h1(<~ey, ~ea>), 'NAXOS_C'>)
                             >
                            ), 
                            matchingRole, 'NAXOS_C'>
                      ) @ #i3.1 )
          next
            case Resp_NAXOS_2_case_3
            by solve( Sid( matchingSession,
                           <$A, $B, 
                            (<'2', 'g'^h1(<~ey, ~ea>)>+
                             <'3', $A, 
                              h2(<
                                  first(h(<'g'^(~ea.1*h1(<~ey, ~ea>)), z, z.1, $A, $B, X, 
                                           'g'^h1(<~ey, ~ea>), 'NAXOS_C'>)), 
                                  'I', $A, $B, X, 'g'^h1(<~ey, ~ea>), 'NAXOS_C'>)
                             >
                            ), 
                            matchingRole, 'NAXOS_C'>
                      ) @ #i3.1 )
          next
            case Resp_NAXOS_2_case_4
            by solve( Sid( matchingSession,
                           <$A, $B, <'2', 'g'^h1(<~ey, ~ea>)>, matchingRole, 'NAXOS_C'>
                      ) @ #i3.1 )
          next
            case Resp_NAXOS_2_case_5
            solve( Sid( matchingSession, <$A, $B, <'1', X>, matchingRole, 'NAXOS_C'>
                   ) @ #i3.1 )
              case Init_NAXOS_1
              solve( !Ltk( $A, ~ea.1 ) ▶₁ #i3.1 )
                case generate_ltk
                solve( !KU( second(h(<'g'^(~ea.1*h1(<~ey, ~ea>)), 
                                      'g'^(~ea*h1(<~ex, ~ea.1>)), 'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)), $A, 
                                      $B, 'g'^h1(<~ex, ~ea.1>), 'g'^h1(<~ey, ~ea>), 'NAXOS_C'>))
                       ) @ #vk )
                  case Sessk_reveal_case_1
                  by contradiction /* from formulas */
                next
                  case Sessk_reveal_case_2
                  by contradiction /* from formulas */
                next
                  case c_second
                  solve( !KU( h(<'g'^(~ea.1*h1(<~ey, ~ea>)), 'g'^(~ea*h1(<~ex, ~ea.1>)), 
                                 'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)), $A, $B, 'g'^h1(<~ex, ~ea.1>), 
                                 'g'^h1(<~ey, ~ea>), 'NAXOS_C'>)
                         ) @ #vk.5 )
                    case c_h
                    solve( !KU( 'g'^(~ea.1*h1(<~ey, ~ea>)) ) @ #vk.9 )
                      case Resp_NAXOS_1
                      solve( !KU( ~ea.1 ) @ #vk.19 )
                        case Ltk_reveal
                        solve( !KU( 'g'^(~ea*h1(<~ex, ~ea.1>)) ) @ #vk.15 )
                          case Init_NAXOS_1
                          solve( !KU( ~ea ) @ #vk.20 )
                            case Ltk_reveal
                            solve( !KU( 'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)) ) @ #vk.18 )
                              case Init_NAXOS_1
                              solve( !KU( h1(<~ey, ~ea>) ) @ #vk.21 )
                                case c_h1
                                solve( !KU( ~ey ) @ #vk.23 )
                                  case Ephk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case Resp_NAXOS_1
                              solve( !KU( h1(<~ex, ~ea.1>) ) @ #vk.21 )
                                case c_h1
                                solve( !KU( ~ex ) @ #vk.23 )
                                  case Ephk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( h1(<~ex, ~ea.1>) ) @ #vk.23 )
                                case c_h1
                                solve( !KU( ~ex ) @ #vk.26 )
                                  case Ephk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_exp
                          solve( !KU( ~ea ) @ #vk.22 )
                            case Ltk_reveal
                            solve( !KU( h1(<~ex, ~ea.1>) ) @ #vk.23 )
                              case c_h1
                              solve( !KU( ~ex ) @ #vk.25 )
                                case Ephk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        next
                          case generate_ltk
                          solve( !KU( h1(<~ex, ~ea.1>) ) @ #vk.20 )
                            case c_h1
                            solve( !KU( ~ex ) @ #vk.22 )
                              case Ephk_reveal
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_exp
                      solve( !KU( ~ea.1 ) @ #vk.21 )
                        case Ltk_reveal
                        solve( !KU( h1(<~ey, ~ea>) ) @ #vk.22 )
                          case c_h1
                          solve( !KU( ~ey ) @ #vk.24 )
                            case Ephk_reveal
                            solve( !KU( ~ea ) @ #vk.25 )
                              case Ltk_reveal
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    next
                      case generate_ltk
                      solve( !KU( h1(<~ey, ~ea>) ) @ #vk.19 )
                        case c_h1
                        solve( !KU( ~ey ) @ #vk.21 )
                          case Ephk_reveal
                          solve( !KU( ~ea ) @ #vk.22 )
                            case Ltk_reveal
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case Resp_NAXOS_2_case_6
            solve( Sid( matchingSession,
                        <$A, $B, (<'1', X>+<'2', 'g'^h1(<~ey, ~ea>)>), matchingRole, 'NAXOS_C'>
                   ) @ #i3.1 )
              case Resp_NAXOS_1
              by contradiction /* from formulas */
            qed
          qed
        next
          case Resp_NAXOS_1_case_2
          by solve( Sid( ~ey, <$A.1, $A.2, (matchingCom+rest), role, proto>
                    ) @ #i1 )
        qed
      qed
    qed
  next
    case case_2
    solve( (matchingRole = role)  ∥
           (∃ #i4 sid. (Sid( matchingSession, sid ) @ #i4) ∧ #i3.1 < #i4)  ∥
           ((∀ #i5. (RevealSessk( matchingSession ) @ #i5) ⇒ ⊥) ∧
            (∀ #i5 #i6.
              (RevealLtk( $A.1 ) @ #i5) ∧ (RevealEphk( matchingSession ) @ #i6) ⇒ ⊥)) )
      case case_1
      by contradiction /* from formulas */
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      solve( Accept( test, k ) @ #i1 )
        case Init_DHKEA_2
        solve( Init_DHKEA_1( ~ex, $A, $B, ~ea, X ) ▶₀ #i1 )
          case Init_DHKEA_1
          solve( !Pk( $B, 'g'^~x ) ▶₁ #i1 )
            case generate_ltk
            solve( Sid( ~ex, <$A.1, $A.2, com, role, proto> ) @ #i1 )
              case Init_DHKEA_2
              solve( Sid( matchingSession,
                          <$B, $A, 
                           (<'1', 'g'^h1(<~ex, ~ea>)>+<'2', Y>+
                            <'3', $A, 
                             h2(<first(h(<z, $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>)), z.1, 'I', $A, 
                                 $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>)
                            >
                           ), 
                           matchingRole, 'DHKEA'>
                     ) @ #i3.1 )
                case Init_DHKEA_2
                by contradiction /* from formulas */
              next
                case Resp_DHKEA_2
                solve( Resp_DHKEA_1( ~ey, $B, $A, Y, 'g'^h1(<~ex, ~ea>),
                                     h2(<first(h(<z, $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>)), z.1, 'I', $A, 
                                         $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>),
                                     key
                       ) ▶₀ #i3.1 )
                  case Resp_DHKEA_1
                  solve( (∀ rest.
                           ((rest+<'1', 'g'^h1(<~ex, ~ea>)>+<'2', 'g'^h1(<~ey, ~x>)>) =
                            (<'1', 'g'^h1(<~ex, ~ea>)>+<'2', 'g'^h1(<~ey, ~x>)>+
                             <'3', $A, 
                              h2(<
                                  first(h(<'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~x>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                           'g'^h1(<~ey, ~x>), 'DHKEA'>)), 
                                  'g'^(~ea*h1(<~ey, ~x>)), 'I', $A, $B, 'g'^h1(<~ex, ~ea>), 
                                  'g'^h1(<~ey, ~x>), 'DHKEA'>)
                             >
                            ))
                          ⇒
                           ⊥)  ∥
                         (∃ #i4 sid. (Sid( ~ey, sid ) @ #i4) ∧ #vr.1 < #i4)  ∥
                         ((∀ #i5. (RevealSessk( ~ey ) @ #i5) ⇒ ⊥) ∧
                          (∀ #i5 #i6. (RevealLtk( $B ) @ #i5) ∧ (RevealEphk( ~ey ) @ #i6) ⇒ ⊥)) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    solve( (#i3.1 = #i4.1)  ∥ (#i4.1 < #i3.1) )
                      case case_1
                      solve( Sid( ~ey, sid ) @ #i3.1 )
                        case Resp_DHKEA_2
                        solve( !KU( second(h(<'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~x>)), $A, $B, 
                                              'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~x>), 'DHKEA'>))
                               ) @ #vk )
                          case Sessk_reveal_case_1
                          by contradiction /* from formulas */
                        next
                          case Sessk_reveal_case_2
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~x>)), $A, $B, 
                                         'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~x>), 'DHKEA'>)
                                 ) @ #vk.10 )
                            case c_h
                            solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~x>)) ) @ #vk.16 )
                              case Init_DHKEA_1
                              solve( !KU( h1(<~ey, ~x>) ) @ #vk.18 )
                                case c_h1
                                solve( !KU( ~ey ) @ #vk.20 )
                                  case Ephk_reveal
                                  solve( !KU( ~x ) @ #vk.21 )
                                    case Ltk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case Resp_DHKEA_1
                              solve( !KU( h1(<~ex, ~ea>) ) @ #vk.18 )
                                case c_h1
                                solve( !KU( ~ex ) @ #vk.20 )
                                  case Ephk_reveal
                                  solve( !KU( ~ea ) @ #vk.21 )
                                    case Ltk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( h1(<~ex, ~ea>) ) @ #vk.20 )
                                case c_h1
                                solve( !KU( ~ex ) @ #vk.23 )
                                  case Ephk_reveal
                                  solve( !KU( ~ea ) @ #vk.24 )
                                    case Ltk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Sid( ~ey, sid ) @ #i4.1 )
                        case Init_DHKEA_2
                        by solve( Init_DHKEA_1( ~ey, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
                      next
                        case Init_NAXOS_2
                        by solve( Init_1( ~ey, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
                      next
                        case Resp_DHKEA_1
                        by contradiction /* cyclic */
                      next
                        case Resp_DHKEA_2
                        solve( Resp_DHKEA_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                          case Resp_DHKEA_1
                          by contradiction /* cyclic */
                        qed
                      next
                        case Resp_NAXOS_2
                        by solve( Resp_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      qed
                    qed
                  next
                    case case_3
                    solve( !KU( second(h(<'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~x>)), $A, $B, 
                                          'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~x>), 'DHKEA'>))
                           ) @ #vk )
                      case Sessk_reveal_case_1
                      by contradiction /* from formulas */
                    next
                      case Sessk_reveal_case_2
                      by contradiction /* from formulas */
                    next
                      case c_second
                      solve( !KU( h(<'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~x>)), $A, $B, 
                                     'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~x>), 'DHKEA'>)
                             ) @ #vk.10 )
                        case c_h
                        solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~x>)) ) @ #vk.16 )
                          case Init_DHKEA_1
                          solve( !KU( h1(<~ey, ~x>) ) @ #vk.18 )
                            case c_h1
                            solve( !KU( ~ey ) @ #vk.20 )
                              case Ephk_reveal
                              solve( !KU( ~x ) @ #vk.21 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        next
                          case Resp_DHKEA_1
                          solve( !KU( h1(<~ex, ~ea>) ) @ #vk.18 )
                            case c_h1
                            solve( !KU( ~ex ) @ #vk.20 )
                              case Ephk_reveal
                              solve( !KU( ~ea ) @ #vk.21 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        next
                          case c_exp
                          solve( !KU( h1(<~ex, ~ea>) ) @ #vk.20 )
                            case c_h1
                            solve( !KU( ~ex ) @ #vk.23 )
                              case Ephk_reveal
                              solve( !KU( ~ea ) @ #vk.24 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case generate_ltk_dishonest
            by solve( Sid( ~ex, <$A.1, $A.2, com, role, proto> ) @ #i1 )
          qed
        qed
      next
        case Init_NAXOS_2
        solve( Init_1( ~ex, $A, $B, ~ea, X ) ▶₀ #i1 )
          case Init_NAXOS_1
          solve( !Pk( $B, KB ) ▶₁ #i1 )
            case generate_ltk
            solve( Sid( ~ex, <$A.1, $A.2, com, role, proto> ) @ #i1 )
              case Init_NAXOS_2
              solve( Sid( matchingSession,
                          <$B, $A, 
                           (<'1', 'g'^h1(<~ex, ~ea>)>+<'2', Y>+
                            <'3', $A, 
                             h2(<
                                 first(h(<z, 'g'^(~ea.1*h1(<~ex, ~ea>)), z.1, $A, $B, 'g'^h1(<~ex, ~ea>), 
                                          Y, 'NAXOS_C'>)), 
                                 'I', $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'NAXOS_C'>)
                            >
                           ), 
                           matchingRole, 'NAXOS_C'>
                     ) @ #i3.1 )
                case Init_NAXOS_2
                by contradiction /* from formulas */
              next
                case Resp_NAXOS_2
                solve( Resp_1( ~ey, $B, $A, Y, 'g'^h1(<~ex, ~ea>),
                               h2(<
                                   first(h(<z, 'g'^(~ea.1*h1(<~ex, ~ea>)), z.1, $A, $B, 'g'^h1(<~ex, ~ea>), 
                                            Y, 'NAXOS_C'>)), 
                                   'I', $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'NAXOS_C'>),
                               key
                       ) ▶₀ #i3.1 )
                  case Resp_NAXOS_1
                  solve( (∀ rest.
                           ((rest+<'1', 'g'^h1(<~ex, ~ea>)>+<'2', 'g'^h1(<~ey, ~ea.1>)>) =
                            (<'1', 'g'^h1(<~ex, ~ea>)>+<'2', 'g'^h1(<~ey, ~ea.1>)>+
                             <'3', $A, 
                              h2(<
                                  first(h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 'g'^(~ea.1*h1(<~ex, ~ea>)), 
                                           'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                           'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)), 
                                  'I', $A, $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)
                             >
                            ))
                          ⇒
                           ⊥)  ∥
                         (∃ #i4 sid. (Sid( ~ey, sid ) @ #i4) ∧ #vr.1 < #i4)  ∥
                         ((∀ #i5. (RevealSessk( ~ey ) @ #i5) ⇒ ⊥) ∧
                          (∀ #i5 #i6. (RevealLtk( $B ) @ #i5) ∧ (RevealEphk( ~ey ) @ #i6) ⇒ ⊥)) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    solve( (#i3.1 = #i4.1)  ∥ (#i4.1 < #i3.1) )
                      case case_1
                      solve( Sid( ~ey, sid ) @ #i3.1 )
                        case Resp_NAXOS_2
                        solve( !KU( second(h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 
                                              'g'^(~ea.1*h1(<~ex, ~ea>)), 
                                              'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), $A, $B, 
                                              'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>))
                               ) @ #vk )
                          case Sessk_reveal_case_1
                          by contradiction /* from formulas */
                        next
                          case Sessk_reveal_case_2
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 'g'^(~ea.1*h1(<~ex, ~ea>)), 
                                         'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                         'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)
                                 ) @ #vk.10 )
                            case c_h
                            solve( !KU( 'g'^(~ea*h1(<~ey, ~ea.1>)) ) @ #vk.16 )
                              case Resp_NAXOS_1
                              solve( !KU( ~ea ) @ #vk.22 )
                                case Ltk_reveal
                                solve( !KU( 'g'^(~ea.1*h1(<~ex, ~ea>)) ) @ #vk.20 )
                                  case Init_NAXOS_1
                                  solve( !KU( ~ea.1 ) @ #vk.23 )
                                    case Ltk_reveal
                                    solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)) ) @ #vk.22 )
                                      case Init_NAXOS_1
                                      solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.24 )
                                        case c_h1
                                        solve( !KU( ~ey ) @ #vk.26 )
                                          case Ephk_reveal
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    next
                                      case Resp_NAXOS_1
                                      solve( !KU( h1(<~ex, ~ea>) ) @ #vk.24 )
                                        case c_h1
                                        solve( !KU( ~ex ) @ #vk.26 )
                                          case Ephk_reveal
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    next
                                      case c_exp
                                      solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                        case c_h1
                                        solve( !KU( ~ex ) @ #vk.29 )
                                          case Ephk_reveal
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_exp
                                  solve( !KU( ~ea.1 ) @ #vk.25 )
                                    case Ltk_reveal
                                    solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                      case c_h1
                                      solve( !KU( ~ex ) @ #vk.28 )
                                        case Ephk_reveal
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  qed
                                next
                                  case generate_ltk
                                  solve( !KU( h1(<~ex, ~ea>) ) @ #vk.23 )
                                    case c_h1
                                    solve( !KU( ~ex ) @ #vk.25 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~ea ) @ #vk.24 )
                                case Ltk_reveal
                                solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.25 )
                                  case c_h1
                                  solve( !KU( ~ey ) @ #vk.27 )
                                    case Ephk_reveal
                                    solve( !KU( ~ea.1 ) @ #vk.28 )
                                      case Ltk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case generate_ltk
                              solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.22 )
                                case c_h1
                                solve( !KU( ~ey ) @ #vk.24 )
                                  case Ephk_reveal
                                  solve( !KU( ~ea.1 ) @ #vk.25 )
                                    case Ltk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Sid( ~ey, sid ) @ #i4.1 )
                        case Init_DHKEA_2
                        by solve( Init_DHKEA_1( ~ey, $A.1, $B.1, ~ea.2, X ) ▶₀ #i4.1 )
                      next
                        case Init_NAXOS_2
                        by solve( Init_1( ~ey, $A.1, $B.1, ~ea.2, X ) ▶₀ #i4.1 )
                      next
                        case Resp_DHKEA_2
                        by solve( Resp_DHKEA_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      next
                        case Resp_NAXOS_1
                        by contradiction /* cyclic */
                      next
                        case Resp_NAXOS_2
                        solve( Resp_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                          case Resp_NAXOS_1
                          by contradiction /* cyclic */
                        qed
                      qed
                    qed
                  next
                    case case_3
                    solve( !KU( second(h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 
                                          'g'^(~ea.1*h1(<~ex, ~ea>)), 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), 
                                          $A, $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>))
                           ) @ #vk )
                      case Sessk_reveal_case_1
                      by contradiction /* from formulas */
                    next
                      case Sessk_reveal_case_2
                      by contradiction /* from formulas */
                    next
                      case c_second
                      solve( !KU( h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 'g'^(~ea.1*h1(<~ex, ~ea>)), 
                                     'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                     'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)
                             ) @ #vk.10 )
                        case c_h
                        solve( !KU( 'g'^(~ea*h1(<~ey, ~ea.1>)) ) @ #vk.16 )
                          case Resp_NAXOS_1
                          solve( !KU( ~ea ) @ #vk.22 )
                            case Ltk_reveal
                            solve( !KU( 'g'^(~ea.1*h1(<~ex, ~ea>)) ) @ #vk.20 )
                              case Init_NAXOS_1
                              solve( !KU( ~ea.1 ) @ #vk.23 )
                                case Ltk_reveal
                                solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)) ) @ #vk.22 )
                                  case Init_NAXOS_1
                                  solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.24 )
                                    case c_h1
                                    solve( !KU( ~ey ) @ #vk.26 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case Resp_NAXOS_1
                                  solve( !KU( h1(<~ex, ~ea>) ) @ #vk.24 )
                                    case c_h1
                                    solve( !KU( ~ex ) @ #vk.26 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case c_exp
                                  solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                    case c_h1
                                    solve( !KU( ~ex ) @ #vk.29 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~ea.1 ) @ #vk.25 )
                                case Ltk_reveal
                                solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                  case c_h1
                                  solve( !KU( ~ex ) @ #vk.28 )
                                    case Ephk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case generate_ltk
                              solve( !KU( h1(<~ex, ~ea>) ) @ #vk.23 )
                                case c_h1
                                solve( !KU( ~ex ) @ #vk.25 )
                                  case Ephk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_exp
                          solve( !KU( ~ea ) @ #vk.24 )
                            case Ltk_reveal
                            solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.25 )
                              case c_h1
                              solve( !KU( ~ey ) @ #vk.27 )
                                case Ephk_reveal
                                solve( !KU( ~ea.1 ) @ #vk.28 )
                                  case Ltk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case generate_ltk
                          solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.22 )
                            case c_h1
                            solve( !KU( ~ey ) @ #vk.24 )
                              case Ephk_reveal
                              solve( !KU( ~ea.1 ) @ #vk.25 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case generate_ltk_dishonest
            by solve( Sid( ~ex, <$A.1, $A.2, com, role, proto> ) @ #i1 )
          qed
        qed
      next
        case Resp_DHKEA_2
        solve( Resp_DHKEA_1( ~ey, $B, $A, Y, X, confA, k ) ▶₀ #i1 )
          case Resp_DHKEA_1_case_1
          solve( Sid( ~ey, <$A.1, $A.2, com, role, proto> ) @ #i1 )
            case Resp_DHKEA_2
            solve( Sid( matchingSession,
                        <$A, $B, 
                         (<'1', X>+<'2', 'g'^h1(<~ey, ~ea>)>+
                          <'3', $A, 
                           h2(<first(h(<z, $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>)), 
                               'g'^(~x*h1(<~ey, ~ea>)), 'I', $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>)
                          >
                         ), 
                         matchingRole, 'DHKEA'>
                   ) @ #i3.1 )
              case Init_DHKEA_2
              solve( Init_DHKEA_1( ~ex, $A, $B, ~ea.1, 'g'^h1(<~ex, ~ea.1>)
                     ) ▶₀ #i3.1 )
                case Init_DHKEA_1
                solve( (∀ rest.
                         ((rest+<'1', 'g'^h1(<~ex, ~ea.1>)>) =
                          (<'1', 'g'^h1(<~ex, ~ea.1>)>+<'2', 'g'^h1(<~ey, ~ea>)>+
                           <'3', $A, 
                            h2(<
                                first(h(<'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)), $A, $B, 
                                         'g'^h1(<~ex, ~ea.1>), 'g'^h1(<~ey, ~ea>), 'DHKEA'>)), 
                                'g'^(~ea.1*h1(<~ey, ~ea>)), 'I', $A, $B, 'g'^h1(<~ex, ~ea.1>), 
                                'g'^h1(<~ey, ~ea>), 'DHKEA'>)
                           >
                          ))
                        ⇒
                         ⊥)  ∥
                       (∃ #i4 sid. (Sid( ~ex, sid ) @ #i4) ∧ #vr.1 < #i4)  ∥
                       ((∀ #i5. (RevealSessk( ~ex ) @ #i5) ⇒ ⊥) ∧
                        (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~ex ) @ #i6) ⇒ ⊥)) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  solve( (#i3.1 = #i4.1)  ∥ (#i4.1 < #i3.1) )
                    case case_1
                    solve( !Pk( $B, 'g'^~x ) ▶₁ #i3.1 )
                      case generate_ltk
                      solve( Sid( ~ex, sid ) @ #i3.1 )
                        case Init_DHKEA_2
                        solve( !KU( second(h(<'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)), $A, $B, 
                                              'g'^h1(<~ex, ~ea.1>), 'g'^h1(<~ey, ~ea>), 'DHKEA'>))
                               ) @ #vk )
                          case Sessk_reveal_case_1
                          by contradiction /* from formulas */
                        next
                          case Sessk_reveal_case_2
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)), $A, $B, 
                                         'g'^h1(<~ex, ~ea.1>), 'g'^h1(<~ey, ~ea>), 'DHKEA'>)
                                 ) @ #vk.10 )
                            case c_h
                            solve( !KU( 'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)) ) @ #vk.16 )
                              case Init_DHKEA_1
                              solve( !KU( h1(<~ey, ~ea>) ) @ #vk.18 )
                                case c_h1
                                solve( !KU( ~ey ) @ #vk.20 )
                                  case Ephk_reveal
                                  solve( !KU( ~ea ) @ #vk.21 )
                                    case Ltk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case Resp_DHKEA_1
                              solve( !KU( h1(<~ex, ~ea.1>) ) @ #vk.18 )
                                case c_h1
                                solve( !KU( ~ex ) @ #vk.20 )
                                  case Ephk_reveal
                                  solve( !KU( ~ea.1 ) @ #vk.21 )
                                    case Ltk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( h1(<~ex, ~ea.1>) ) @ #vk.20 )
                                case c_h1
                                solve( !KU( ~ex ) @ #vk.23 )
                                  case Ephk_reveal
                                  solve( !KU( ~ea.1 ) @ #vk.24 )
                                    case Ltk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case case_2
                    solve( !Pk( $B, 'g'^~x ) ▶₁ #i3.1 )
                      case generate_ltk
                      solve( Sid( ~ex, sid ) @ #i4.1 )
                        case Init_DHKEA_1
                        by contradiction /* cyclic */
                      next
                        case Init_DHKEA_2
                        solve( Init_DHKEA_1( ~ex, $A.1, $B.1, ~ea.2, X ) ▶₀ #i4.1 )
                          case Init_DHKEA_1
                          by contradiction /* cyclic */
                        qed
                      next
                        case Init_NAXOS_2
                        by solve( Init_1( ~ex, $A.1, $B.1, ~ea.2, X ) ▶₀ #i4.1 )
                      next
                        case Resp_DHKEA_2
                        by solve( Resp_DHKEA_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      next
                        case Resp_NAXOS_2
                        by solve( Resp_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      qed
                    qed
                  qed
                next
                  case case_3
                  solve( !Pk( $B, 'g'^~x ) ▶₁ #i3.1 )
                    case generate_ltk
                    solve( !KU( second(h(<'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)), $A, $B, 
                                          'g'^h1(<~ex, ~ea.1>), 'g'^h1(<~ey, ~ea>), 'DHKEA'>))
                           ) @ #vk )
                      case Sessk_reveal_case_1
                      by contradiction /* from formulas */
                    next
                      case Sessk_reveal_case_2
                      by contradiction /* from formulas */
                    next
                      case c_second
                      solve( !KU( h(<'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)), $A, $B, 
                                     'g'^h1(<~ex, ~ea.1>), 'g'^h1(<~ey, ~ea>), 'DHKEA'>)
                             ) @ #vk.10 )
                        case c_h
                        solve( !KU( 'g'^(h1(<~ex, ~ea.1>)*h1(<~ey, ~ea>)) ) @ #vk.16 )
                          case Init_DHKEA_1
                          solve( !KU( h1(<~ey, ~ea>) ) @ #vk.18 )
                            case c_h1
                            solve( !KU( ~ey ) @ #vk.20 )
                              case Ephk_reveal
                              solve( !KU( ~ea ) @ #vk.21 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        next
                          case Resp_DHKEA_1
                          solve( !KU( h1(<~ex, ~ea.1>) ) @ #vk.18 )
                            case c_h1
                            solve( !KU( ~ex ) @ #vk.20 )
                              case Ephk_reveal
                              solve( !KU( ~ea.1 ) @ #vk.21 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        next
                          case c_exp
                          solve( !KU( h1(<~ex, ~ea.1>) ) @ #vk.20 )
                            case c_h1
                            solve( !KU( ~ex ) @ #vk.23 )
                              case Ephk_reveal
                              solve( !KU( ~ea.1 ) @ #vk.24 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case Resp_DHKEA_2
              by contradiction /* from formulas */
            qed
          qed
        next
          case Resp_DHKEA_1_case_2
          by solve( Sid( ~ey, <$A.1, $A.2, com, role, proto> ) @ #i1 )
        qed
      next
        case Resp_NAXOS_2
        solve( Resp_1( ~ey, $B, $A, Y, X, confA, k ) ▶₀ #i1 )
          case Resp_NAXOS_1_case_1
          solve( Sid( ~ey, <$A.1, $A.2, com, role, proto> ) @ #i1 )
            case Resp_NAXOS_2
            solve( Sid( matchingSession,
                        <$A, $B, 
                         (<'1', X>+<'2', 'g'^h1(<~ey, ~eb>)>+
                          <'3', $A, 
                           h2(<
                               first(h(<'g'^(~ea*h1(<~ey, ~eb>)), z, z.1, $A, $B, X, 
                                        'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)), 
                               'I', $A, $B, X, 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)
                          >
                         ), 
                         matchingRole, 'NAXOS_C'>
                   ) @ #i3.1 )
              case Init_NAXOS_2
              solve( Init_1( ~ex, $A, $B, ~ea, 'g'^h1(<~ex, ~ea>) ) ▶₀ #i3.1 )
                case Init_NAXOS_1
                solve( (∀ rest.
                         ((rest+<'1', 'g'^h1(<~ex, ~ea>)>) =
                          (<'1', 'g'^h1(<~ex, ~ea>)>+<'2', 'g'^h1(<~ey, ~eb>)>+
                           <'3', $A, 
                            h2(<
                                first(h(<'g'^(~ea*h1(<~ey, ~eb>)), 'g'^(~eb*h1(<~ex, ~ea>)), 
                                         'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                         'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)), 
                                'I', $A, $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)
                           >
                          ))
                        ⇒
                         ⊥)  ∥
                       (∃ #i4 sid. (Sid( ~ex, sid ) @ #i4) ∧ #vr.1 < #i4)  ∥
                       ((∀ #i5. (RevealSessk( ~ex ) @ #i5) ⇒ ⊥) ∧
                        (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~ex ) @ #i6) ⇒ ⊥)) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  solve( (#i3.1 = #i4.1)  ∥ (#i4.1 < #i3.1) )
                    case case_1
                    solve( !Pk( $B, 'g'^~eb ) ▶₁ #i3.1 )
                      case generate_ltk
                      solve( Sid( ~ex, sid ) @ #i3.1 )
                        case Init_NAXOS_2
                        solve( !KU( second(h(<'g'^(~ea*h1(<~ey, ~eb>)), 
                                              'g'^(~eb*h1(<~ex, ~ea>)), 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)), 
                                              $A, $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>))
                               ) @ #vk )
                          case Sessk_reveal_case_1
                          by contradiction /* from formulas */
                        next
                          case Sessk_reveal_case_2
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ea*h1(<~ey, ~eb>)), 'g'^(~eb*h1(<~ex, ~ea>)), 
                                         'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                         'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)
                                 ) @ #vk.10 )
                            case c_h
                            solve( !KU( 'g'^(~ea*h1(<~ey, ~eb>)) ) @ #vk.16 )
                              case Resp_NAXOS_1
                              solve( !KU( ~ea ) @ #vk.22 )
                                case Ltk_reveal
                                solve( !KU( 'g'^(~eb*h1(<~ex, ~ea>)) ) @ #vk.20 )
                                  case Init_NAXOS_1
                                  solve( !KU( ~eb ) @ #vk.23 )
                                    case Ltk_reveal
                                    solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)) ) @ #vk.22 )
                                      case Init_NAXOS_1
                                      solve( !KU( h1(<~ey, ~eb>) ) @ #vk.24 )
                                        case c_h1
                                        solve( !KU( ~ey ) @ #vk.26 )
                                          case Ephk_reveal
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    next
                                      case Resp_NAXOS_1
                                      solve( !KU( h1(<~ex, ~ea>) ) @ #vk.24 )
                                        case c_h1
                                        solve( !KU( ~ex ) @ #vk.26 )
                                          case Ephk_reveal
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    next
                                      case c_exp
                                      solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                        case c_h1
                                        solve( !KU( ~ex ) @ #vk.29 )
                                          case Ephk_reveal
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_exp
                                  solve( !KU( ~eb ) @ #vk.25 )
                                    case Ltk_reveal
                                    solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                      case c_h1
                                      solve( !KU( ~ex ) @ #vk.28 )
                                        case Ephk_reveal
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  qed
                                next
                                  case generate_ltk
                                  solve( !KU( h1(<~ex, ~ea>) ) @ #vk.23 )
                                    case c_h1
                                    solve( !KU( ~ex ) @ #vk.25 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~ea ) @ #vk.24 )
                                case Ltk_reveal
                                solve( !KU( h1(<~ey, ~eb>) ) @ #vk.25 )
                                  case c_h1
                                  solve( !KU( ~ey ) @ #vk.27 )
                                    case Ephk_reveal
                                    solve( !KU( ~eb ) @ #vk.28 )
                                      case Ltk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case generate_ltk
                              solve( !KU( h1(<~ey, ~eb>) ) @ #vk.22 )
                                case c_h1
                                solve( !KU( ~ey ) @ #vk.24 )
                                  case Ephk_reveal
                                  solve( !KU( ~eb ) @ #vk.25 )
                                    case Ltk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case case_2
                    solve( !Pk( $B, 'g'^~eb ) ▶₁ #i3.1 )
                      case generate_ltk
                      solve( Sid( ~ex, sid ) @ #i4.1 )
                        case Init_DHKEA_2
                        by solve( Init_DHKEA_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
                      next
                        case Init_NAXOS_1
                        by contradiction /* cyclic */
                      next
                        case Init_NAXOS_2
                        solve( Init_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
                          case Init_NAXOS_1
                          by contradiction /* cyclic */
                        qed
                      next
                        case Resp_DHKEA_2
                        by solve( Resp_DHKEA_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      next
                        case Resp_NAXOS_2
                        by solve( Resp_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      qed
                    qed
                  qed
                next
                  case case_3
                  solve( !Pk( $B, 'g'^~eb ) ▶₁ #i3.1 )
                    case generate_ltk
                    solve( !KU( second(h(<'g'^(~ea*h1(<~ey, ~eb>)), 
                                          'g'^(~eb*h1(<~ex, ~ea>)), 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)), $A, 
                                          $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>))
                           ) @ #vk )
                      case Sessk_reveal_case_1
                      by contradiction /* from formulas */
                    next
                      case Sessk_reveal_case_2
                      by contradiction /* from formulas */
                    next
                      case c_second
                      solve( !KU( h(<'g'^(~ea*h1(<~ey, ~eb>)), 'g'^(~eb*h1(<~ex, ~ea>)), 
                                     'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                     'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)
                             ) @ #vk.10 )
                        case c_h
                        solve( !KU( 'g'^(~ea*h1(<~ey, ~eb>)) ) @ #vk.16 )
                          case Resp_NAXOS_1
                          solve( !KU( ~ea ) @ #vk.22 )
                            case Ltk_reveal
                            solve( !KU( 'g'^(~eb*h1(<~ex, ~ea>)) ) @ #vk.20 )
                              case Init_NAXOS_1
                              solve( !KU( ~eb ) @ #vk.23 )
                                case Ltk_reveal
                                solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)) ) @ #vk.22 )
                                  case Init_NAXOS_1
                                  solve( !KU( h1(<~ey, ~eb>) ) @ #vk.24 )
                                    case c_h1
                                    solve( !KU( ~ey ) @ #vk.26 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case Resp_NAXOS_1
                                  solve( !KU( h1(<~ex, ~ea>) ) @ #vk.24 )
                                    case c_h1
                                    solve( !KU( ~ex ) @ #vk.26 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case c_exp
                                  solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                    case c_h1
                                    solve( !KU( ~ex ) @ #vk.29 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~eb ) @ #vk.25 )
                                case Ltk_reveal
                                solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                  case c_h1
                                  solve( !KU( ~ex ) @ #vk.28 )
                                    case Ephk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case generate_ltk
                              solve( !KU( h1(<~ex, ~ea>) ) @ #vk.23 )
                                case c_h1
                                solve( !KU( ~ex ) @ #vk.25 )
                                  case Ephk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_exp
                          solve( !KU( ~ea ) @ #vk.24 )
                            case Ltk_reveal
                            solve( !KU( h1(<~ey, ~eb>) ) @ #vk.25 )
                              case c_h1
                              solve( !KU( ~ey ) @ #vk.27 )
                                case Ephk_reveal
                                solve( !KU( ~eb ) @ #vk.28 )
                                  case Ltk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case generate_ltk
                          solve( !KU( h1(<~ey, ~eb>) ) @ #vk.22 )
                            case c_h1
                            solve( !KU( ~ey ) @ #vk.24 )
                              case Ephk_reveal
                              solve( !KU( ~eb ) @ #vk.25 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case Resp_NAXOS_2
              by contradiction /* from formulas */
            qed
          qed
        next
          case Resp_NAXOS_1_case_2
          by solve( Sid( ~ey, <$A.1, $A.2, com, role, proto> ) @ #i1 )
        qed
      qed
    qed
  qed
next
  case case_2
  solve( Accept( test, k ) @ #i1 )
    case Init_DHKEA_2
    solve( Init_DHKEA_1( ~ex, $A, $B, ~ea, X ) ▶₀ #i1 )
      case Init_DHKEA_1
      solve( !Pk( $B, 'g'^~x ) ▶₁ #i1 )
        case generate_ltk
        solve( Sid( ~ex, <$A.1, $A.2, com, role, proto> ) @ #i1 )
          case Init_DHKEA_2
          solve( !KU( h2(<first(h(<z, $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>)), 
                          'g'^(~x*h1(<~ex, ~ea>)), 'R', $B, $A, Y, 'g'^h1(<~ex, ~ea>), 'DHKEA'>)
                 ) @ #vk.5 )
            case Resp_DHKEA_1
            solve( (∀ rest.
                     ((rest+<'1', 'g'^h1(<~ex, ~x>)>+<'2', 'g'^h1(<~ey, ~x.1>)>) =
                      (<'1', 'g'^h1(<~ex, ~x>)>+<'2', 'g'^h1(<~ey, ~x.1>)>+
                       <'3', $A, 
                        h2(<
                            first(h(<'g'^(h1(<~ex, ~x>)*h1(<~ey, ~x.1>)), $A, $B, 'g'^h1(<~ex, ~x>), 
                                     'g'^h1(<~ey, ~x.1>), 'DHKEA'>)), 
                            'g'^(~x*h1(<~ey, ~x.1>)), 'I', $A, $B, 'g'^h1(<~ex, ~x>), 
                            'g'^h1(<~ey, ~x.1>), 'DHKEA'>)
                       >
                      ))
                    ⇒
                     ⊥)  ∥
                   (∃ #i4 sid. (Sid( ~ey, sid ) @ #i4) ∧ #vr.1 < #i4)  ∥
                   ((∀ #i5. (RevealSessk( ~ey ) @ #i5) ⇒ ⊥) ∧
                    (∀ #i5 #i6. (RevealLtk( $B ) @ #i5) ∧ (RevealEphk( ~ey ) @ #i6) ⇒ ⊥)) )
              case case_1
              by contradiction /* from formulas */
            next
              case case_2
              solve( Sid( ~ey, sid ) @ #i4.1 )
                case Init_DHKEA_2
                by solve( Init_DHKEA_1( ~ey, $A.1, $B.1, ~ea, X ) ▶₀ #i4.1 )
              next
                case Init_NAXOS_2
                by solve( Init_1( ~ey, $A.1, $B.1, ~ea, X ) ▶₀ #i4.1 )
              next
                case Resp_DHKEA_1
                by contradiction /* cyclic */
              next
                case Resp_DHKEA_2
                solve( Resp_DHKEA_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                  case Resp_DHKEA_1
                  solve( (∃ #i4.2 sid. (Sid( ~ey, sid ) @ #i4.2) ∧ #i4.1 < #i4.2)  ∥
                         ((∀ #i5. (RevealSessk( ~ey ) @ #i5) ⇒ ⊥) ∧
                          (∀ #i5 #i6. (RevealLtk( $B ) @ #i5) ∧ (RevealEphk( ~ey ) @ #i6) ⇒ ⊥)) )
                    case case_1
                    solve( Sid( ~ey, sid ) @ #i4.2 )
                      case Init_DHKEA_2
                      by solve( Init_DHKEA_1( ~ey, $A.1, $B.1, ~ea, X ) ▶₀ #i4.2 )
                    next
                      case Init_NAXOS_2
                      by solve( Init_1( ~ey, $A.1, $B.1, ~ea, X ) ▶₀ #i4.2 )
                    next
                      case Resp_DHKEA_1
                      by contradiction /* cyclic */
                    next
                      case Resp_DHKEA_2
                      solve( Resp_DHKEA_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                        case Resp_DHKEA_1
                        by contradiction /* cyclic */
                      qed
                    next
                      case Resp_NAXOS_2
                      by solve( Resp_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                    qed
                  next
                    case case_2
                    solve( !KU( second(h(<'g'^(h1(<~ex, ~x>)*h1(<~ey, ~x.1>)), $A, $B, 
                                          'g'^h1(<~ex, ~x>), 'g'^h1(<~ey, ~x.1>), 'DHKEA'>))
                           ) @ #vk.3 )
                      case Sessk_reveal_case_1
                      by contradiction /* from formulas */
                    next
                      case Sessk_reveal_case_2
                      by contradiction /* from formulas */
                    next
                      case c_second
                      solve( !KU( h(<'g'^(h1(<~ex, ~x>)*h1(<~ey, ~x.1>)), $A, $B, 
                                     'g'^h1(<~ex, ~x>), 'g'^h1(<~ey, ~x.1>), 'DHKEA'>)
                             ) @ #vk.10 )
                        case c_h
                        solve( !KU( 'g'^(h1(<~ex, ~x>)*h1(<~ey, ~x.1>)) ) @ #vk.16 )
                          case Init_DHKEA_1
                          solve( !KU( h1(<~ey, ~x.1>) ) @ #vk.18 )
                            case c_h1
                            solve( !KU( ~ey ) @ #vk.20 )
                              case Ephk_reveal
                              solve( !KU( ~x.1 ) @ #vk.21 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        next
                          case Resp_DHKEA_1
                          solve( !KU( h1(<~ex, ~x>) ) @ #vk.18 )
                            case c_h1
                            solve( !KU( ~ex ) @ #vk.20 )
                              case Ephk_reveal
                              solve( !KU( ~x ) @ #vk.21 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        next
                          case c_exp
                          solve( !KU( h1(<~ex, ~x>) ) @ #vk.20 )
                            case c_h1
                            solve( !KU( ~ex ) @ #vk.23 )
                              case Ephk_reveal
                              solve( !KU( ~x ) @ #vk.24 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case Resp_NAXOS_2
                by solve( Resp_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
              qed
            next
              case case_3
              solve( !KU( second(h(<'g'^(h1(<~ex, ~x>)*h1(<~ey, ~x.1>)), $A, $B, 
                                    'g'^h1(<~ex, ~x>), 'g'^h1(<~ey, ~x.1>), 'DHKEA'>))
                     ) @ #vk.3 )
                case Sessk_reveal_case_1
                by contradiction /* from formulas */
              next
                case Sessk_reveal_case_2
                by contradiction /* from formulas */
              next
                case c_second
                solve( !KU( h(<'g'^(h1(<~ex, ~x>)*h1(<~ey, ~x.1>)), $A, $B, 
                               'g'^h1(<~ex, ~x>), 'g'^h1(<~ey, ~x.1>), 'DHKEA'>)
                       ) @ #vk.7 )
                  case c_h
                  solve( !KU( 'g'^(h1(<~ex, ~x>)*h1(<~ey, ~x.1>)) ) @ #vk.12 )
                    case Init_DHKEA_1
                    solve( !KU( h1(<~ey, ~x.1>) ) @ #vk.16 )
                      case c_h1
                      solve( !KU( ~ey ) @ #vk.18 )
                        case Ephk_reveal
                        solve( !KU( ~x.1 ) @ #vk.19 )
                          case Ltk_reveal
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case Resp_DHKEA_1
                    solve( !KU( h1(<~ex, ~x>) ) @ #vk.16 )
                      case c_h1
                      solve( !KU( ~ex ) @ #vk.18 )
                        case Ephk_reveal
                        solve( !KU( ~x ) @ #vk.19 )
                          case Ltk_reveal
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case c_exp
                    solve( !KU( h1(<~ex, ~x>) ) @ #vk.18 )
                      case c_h1
                      solve( !KU( ~ex ) @ #vk.21 )
                        case Ephk_reveal
                        solve( !KU( ~x ) @ #vk.22 )
                          case Ltk_reveal
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case c_h2
            solve( !KU( first(h(<z, $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>))
                   ) @ #vk.9 )
              case c_first
              solve( !KU( h(<z, $A, $B, 'g'^h1(<~ex, ~ea>), Y, 'DHKEA'>) ) @ #vk.19 )
                case c_h
                solve( !KU( 'g'^(~x*h1(<~ex, ~ea>)) ) @ #vk.16 )
                  case Init_DHKEA_1
                  solve( !KU( ~x ) @ #vk.26 )
                    case Ltk_reveal
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  solve( !KU( ~x ) @ #vk.28 )
                    case Ltk_reveal
                    by contradiction /* from formulas */
                  qed
                next
                  case generate_ltk
                  solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                    case c_h1
                    solve( !KU( ~ex ) @ #vk.28 )
                      case Ephk_reveal
                      solve( !KU( ~ea ) @ #vk.29 )
                        case Ltk_reveal
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case generate_ltk_dishonest
        by solve( Sid( ~ex, <$A.1, $A.2, com, role, proto> ) @ #i1 )
      qed
    qed
  next
    case Init_NAXOS_2
    solve( Init_1( ~ex, $A, $B, ~ea, X ) ▶₀ #i1 )
      case Init_NAXOS_1
      solve( !Pk( $B, KB ) ▶₁ #i1 )
        case generate_ltk
        solve( Sid( ~ex, <$A.1, $A.2, com, role, proto> ) @ #i1 )
          case Init_NAXOS_2
          solve( !KU( h2(<
                          first(h(<z, 'g'^(~ea.1*h1(<~ex, ~ea>)), z.1, $A, $B, 'g'^h1(<~ex, ~ea>), 
                                   Y, 'NAXOS_C'>)), 
                          'R', $B, $A, Y, 'g'^h1(<~ex, ~ea>), 'NAXOS_C'>)
                 ) @ #vk.5 )
            case Resp_NAXOS_1
            solve( (∀ rest.
                     ((rest+<'1', 'g'^h1(<~ex, ~ea>)>+<'2', 'g'^h1(<~ey, ~ea.1>)>) =
                      (<'1', 'g'^h1(<~ex, ~ea>)>+<'2', 'g'^h1(<~ey, ~ea.1>)>+
                       <'3', $A, 
                        h2(<
                            first(h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 'g'^(~ea.1*h1(<~ex, ~ea>)), 
                                     'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                     'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)), 
                            'I', $A, $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)
                       >
                      ))
                    ⇒
                     ⊥)  ∥
                   (∃ #i4 sid. (Sid( ~ey, sid ) @ #i4) ∧ #vr.1 < #i4)  ∥
                   ((∀ #i5. (RevealSessk( ~ey ) @ #i5) ⇒ ⊥) ∧
                    (∀ #i5 #i6. (RevealLtk( $B ) @ #i5) ∧ (RevealEphk( ~ey ) @ #i6) ⇒ ⊥)) )
              case case_1
              by contradiction /* from formulas */
            next
              case case_2
              solve( Sid( ~ey, sid ) @ #i4.1 )
                case Init_DHKEA_2
                by solve( Init_DHKEA_1( ~ey, $A.1, $B.1, ~ea.2, X ) ▶₀ #i4.1 )
              next
                case Init_NAXOS_2
                by solve( Init_1( ~ey, $A.1, $B.1, ~ea.2, X ) ▶₀ #i4.1 )
              next
                case Resp_DHKEA_2
                by solve( Resp_DHKEA_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
              next
                case Resp_NAXOS_1
                by contradiction /* cyclic */
              next
                case Resp_NAXOS_2
                solve( Resp_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                  case Resp_NAXOS_1
                  solve( (∃ #i4.2 sid. (Sid( ~ey, sid ) @ #i4.2) ∧ #i4.1 < #i4.2)  ∥
                         ((∀ #i5. (RevealSessk( ~ey ) @ #i5) ⇒ ⊥) ∧
                          (∀ #i5 #i6. (RevealLtk( $B ) @ #i5) ∧ (RevealEphk( ~ey ) @ #i6) ⇒ ⊥)) )
                    case case_1
                    solve( Sid( ~ey, sid ) @ #i4.2 )
                      case Init_DHKEA_2
                      by solve( Init_DHKEA_1( ~ey, $A.1, $B.1, ~ea.2, X ) ▶₀ #i4.2 )
                    next
                      case Init_NAXOS_2
                      by solve( Init_1( ~ey, $A.1, $B.1, ~ea.2, X ) ▶₀ #i4.2 )
                    next
                      case Resp_DHKEA_2
                      by solve( Resp_DHKEA_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                    next
                      case Resp_NAXOS_1
                      by contradiction /* cyclic */
                    next
                      case Resp_NAXOS_2
                      solve( Resp_1( ~ey, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                        case Resp_NAXOS_1
                        by contradiction /* cyclic */
                      qed
                    qed
                  next
                    case case_2
                    solve( !KU( second(h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 
                                          'g'^(~ea.1*h1(<~ex, ~ea>)), 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), 
                                          $A, $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>))
                           ) @ #vk.3 )
                      case Sessk_reveal_case_1
                      by contradiction /* from formulas */
                    next
                      case Sessk_reveal_case_2
                      by contradiction /* from formulas */
                    next
                      case c_second
                      solve( !KU( h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 'g'^(~ea.1*h1(<~ex, ~ea>)), 
                                     'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                     'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)
                             ) @ #vk.10 )
                        case c_h
                        solve( !KU( 'g'^(~ea*h1(<~ey, ~ea.1>)) ) @ #vk.16 )
                          case Resp_NAXOS_1
                          solve( !KU( ~ea ) @ #vk.22 )
                            case Ltk_reveal
                            solve( !KU( 'g'^(~ea.1*h1(<~ex, ~ea>)) ) @ #vk.20 )
                              case Init_NAXOS_1
                              solve( !KU( ~ea.1 ) @ #vk.23 )
                                case Ltk_reveal
                                solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)) ) @ #vk.22 )
                                  case Init_NAXOS_1
                                  solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.24 )
                                    case c_h1
                                    solve( !KU( ~ey ) @ #vk.26 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case Resp_NAXOS_1
                                  solve( !KU( h1(<~ex, ~ea>) ) @ #vk.24 )
                                    case c_h1
                                    solve( !KU( ~ex ) @ #vk.26 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case c_exp
                                  solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                    case c_h1
                                    solve( !KU( ~ex ) @ #vk.29 )
                                      case Ephk_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_exp
                              solve( !KU( ~ea.1 ) @ #vk.25 )
                                case Ltk_reveal
                                solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                  case c_h1
                                  solve( !KU( ~ex ) @ #vk.28 )
                                    case Ephk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            next
                              case generate_ltk
                              solve( !KU( h1(<~ex, ~ea>) ) @ #vk.23 )
                                case c_h1
                                solve( !KU( ~ex ) @ #vk.25 )
                                  case Ephk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_exp
                          solve( !KU( ~ea ) @ #vk.24 )
                            case Ltk_reveal
                            solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.25 )
                              case c_h1
                              solve( !KU( ~ey ) @ #vk.27 )
                                case Ephk_reveal
                                solve( !KU( ~ea.1 ) @ #vk.28 )
                                  case Ltk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case generate_ltk
                          solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.22 )
                            case c_h1
                            solve( !KU( ~ey ) @ #vk.24 )
                              case Ephk_reveal
                              solve( !KU( ~ea.1 ) @ #vk.25 )
                                case Ltk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_3
              solve( !KU( second(h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 
                                    'g'^(~ea.1*h1(<~ex, ~ea>)), 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), $A, 
                                    $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>))
                     ) @ #vk.3 )
                case Sessk_reveal_case_1
                by contradiction /* from formulas */
              next
                case Sessk_reveal_case_2
                by contradiction /* from formulas */
              next
                case c_second
                solve( !KU( h(<'g'^(~ea*h1(<~ey, ~ea.1>)), 'g'^(~ea.1*h1(<~ex, ~ea>)), 
                               'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                               'g'^h1(<~ey, ~ea.1>), 'NAXOS_C'>)
                       ) @ #vk.7 )
                  case c_h
                  solve( !KU( 'g'^(~ea*h1(<~ey, ~ea.1>)) ) @ #vk.12 )
                    case Resp_NAXOS_1
                    solve( !KU( ~ea ) @ #vk.20 )
                      case Ltk_reveal
                      solve( !KU( 'g'^(~ea.1*h1(<~ex, ~ea>)) ) @ #vk.17 )
                        case Init_NAXOS_1
                        solve( !KU( ~ea.1 ) @ #vk.21 )
                          case Ltk_reveal
                          solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~ea.1>)) ) @ #vk.19 )
                            case Init_NAXOS_1
                            solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.22 )
                              case c_h1
                              solve( !KU( ~ey ) @ #vk.24 )
                                case Ephk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          next
                            case Resp_NAXOS_1
                            solve( !KU( h1(<~ex, ~ea>) ) @ #vk.22 )
                              case c_h1
                              solve( !KU( ~ex ) @ #vk.24 )
                                case Ephk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          next
                            case c_exp
                            solve( !KU( h1(<~ex, ~ea>) ) @ #vk.24 )
                              case c_h1
                              solve( !KU( ~ex ) @ #vk.27 )
                                case Ephk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      next
                        case c_exp
                        solve( !KU( ~ea.1 ) @ #vk.23 )
                          case Ltk_reveal
                          solve( !KU( h1(<~ex, ~ea>) ) @ #vk.24 )
                            case c_h1
                            solve( !KU( ~ex ) @ #vk.26 )
                              case Ephk_reveal
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      next
                        case generate_ltk
                        solve( !KU( h1(<~ex, ~ea>) ) @ #vk.21 )
                          case c_h1
                          solve( !KU( ~ex ) @ #vk.23 )
                            case Ephk_reveal
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_exp
                    solve( !KU( ~ea ) @ #vk.22 )
                      case Ltk_reveal
                      solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.23 )
                        case c_h1
                        solve( !KU( ~ey ) @ #vk.25 )
                          case Ephk_reveal
                          solve( !KU( ~ea.1 ) @ #vk.26 )
                            case Ltk_reveal
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  next
                    case generate_ltk
                    solve( !KU( h1(<~ey, ~ea.1>) ) @ #vk.20 )
                      case c_h1
                      solve( !KU( ~ey ) @ #vk.22 )
                        case Ephk_reveal
                        solve( !KU( ~ea.1 ) @ #vk.23 )
                          case Ltk_reveal
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case c_h2
            solve( !KU( first(h(<z, 'g'^(~ea.1*h1(<~ex, ~ea>)), z.1, $A, $B, 
                                 'g'^h1(<~ex, ~ea>), Y, 'NAXOS_C'>))
                   ) @ #vk.9 )
              case c_first
              solve( !KU( h(<z, 'g'^(~ea.1*h1(<~ex, ~ea>)), z.1, $A, $B, 
                             'g'^h1(<~ex, ~ea>), Y, 'NAXOS_C'>)
                     ) @ #vk.17 )
                case c_h
                solve( !KU( 'g'^(~ea.1*h1(<~ex, ~ea>)) ) @ #vk.25 )
                  case Init_NAXOS_1
                  solve( !KU( ~ea.1 ) @ #vk.28 )
                    case Ltk_reveal
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  solve( !KU( ~ea.1 ) @ #vk.30 )
                    case Ltk_reveal
                    by contradiction /* from formulas */
                  qed
                next
                  case generate_ltk
                  solve( !KU( h1(<~ex, ~ea>) ) @ #vk.28 )
                    case c_h1
                    solve( !KU( ~ex ) @ #vk.30 )
                      case Ephk_reveal
                      solve( !KU( ~ea ) @ #vk.31 )
                        case Ltk_reveal
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case generate_ltk_dishonest
        by solve( Sid( ~ex, <$A.1, $A.2, com, role, proto> ) @ #i1 )
      qed
    qed
  next
    case Resp_DHKEA_2
    solve( Resp_DHKEA_1( ~ey, $B, $A, Y, X, confA, k ) ▶₀ #i1 )
      case Resp_DHKEA_1_case_1
      solve( Sid( ~ey, <$A.1, $A.2, com, role, proto> ) @ #i1 )
        case Resp_DHKEA_2
        solve( !KU( second(h(<z, $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>))
               ) @ #vk )
          case Sessk_reveal_case_1
          solve( (∀ rest.
                   ((rest+<'1', 'g'^h1(<~s, ~x.1>)>) =
                    (<'1', 'g'^h1(<~s, ~x.1>)>+<'2', 'g'^h1(<~ey, ~x>)>+
                     <'3', $A, 
                      h2(<
                          first(h(<'g'^(h1(<~ey, ~x>)*h1(<~s, ~x.1>)), $A, $B, 'g'^h1(<~s, ~x.1>), 
                                   'g'^h1(<~ey, ~x>), 'DHKEA'>)), 
                          'g'^(~x.1*h1(<~ey, ~x>)), 'I', $A, $B, 'g'^h1(<~s, ~x.1>), 
                          'g'^h1(<~ey, ~x>), 'DHKEA'>)
                     >
                    ))
                  ⇒
                   ⊥)  ∥
                 (∃ #i4 sid. (Sid( ~s, sid ) @ #i4) ∧ #vr.3 < #i4)  ∥
                 ((∀ #i5. (RevealSessk( ~s ) @ #i5) ⇒ ⊥) ∧
                  (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~s ) @ #i6) ⇒ ⊥)) )
            case case_1
            by contradiction /* from formulas */
          next
            case case_2
            solve( (∃ #i4 sid. (Sid( ~s, sid ) @ #i4) ∧ #vr.2 < #i4)  ∥
                   ((∀ #i5. (RevealSessk( ~s ) @ #i5) ⇒ ⊥) ∧
                    (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~s ) @ #i6) ⇒ ⊥)) )
              case case_1
              solve( Sid( ~s, sid ) @ #i4.2 )
                case Init_DHKEA_1
                by contradiction /* cyclic */
              next
                case Init_DHKEA_2
                solve( Init_DHKEA_1( ~s, $A.1, $B.1, ~ea, X ) ▶₀ #i4.1 )
                  case Init_DHKEA_1
                  solve( Sid( ~s, sid ) @ #i4.2 )
                    case Init_DHKEA_1
                    by contradiction /* cyclic */
                  next
                    case Init_DHKEA_2
                    solve( Init_DHKEA_1( ~s, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.2 )
                      case Init_DHKEA_1
                      by contradiction /* cyclic */
                    qed
                  next
                    case Init_NAXOS_2
                    by solve( Init_1( ~s, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.2 )
                  next
                    case Resp_DHKEA_2
                    by solve( Resp_DHKEA_1( ~s, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                  next
                    case Resp_NAXOS_2
                    by solve( Resp_1( ~s, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                  qed
                qed
              next
                case Init_NAXOS_2
                by solve( Init_1( ~s, $A.1, $B.1, ~ea, X ) ▶₀ #i4.1 )
              next
                case Resp_DHKEA_2
                by solve( Resp_DHKEA_1( ~s, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
              next
                case Resp_NAXOS_2
                by solve( Resp_1( ~s, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_3
            by contradiction /* from formulas */
          qed
        next
          case Sessk_reveal_case_2
          by contradiction /* from formulas */
        next
          case c_second
          solve( !KU( h(<z, $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>) ) @ #vk.5 )
            case c_h
            solve( !KU( h2(<first(h(<z, $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>)), 
                            'g'^(~x*h1(<~ey, ~ea>)), 'I', $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>)
                   ) @ #vk.5 )
              case Init_DHKEA_2
              solve( (∀ rest.
                       ((rest+<'1', 'g'^h1(<~ex, ~x.1>)>) =
                        (<'1', 'g'^h1(<~ex, ~x.1>)>+<'2', 'g'^h1(<~ey, ~x>)>+
                         <'3', $A, 
                          h2(<
                              first(h(<'g'^(h1(<~ex, ~x.1>)*h1(<~ey, ~x>)), $A, $B, 
                                       'g'^h1(<~ex, ~x.1>), 'g'^h1(<~ey, ~x>), 'DHKEA'>)), 
                              'g'^(~x.1*h1(<~ey, ~x>)), 'I', $A, $B, 'g'^h1(<~ex, ~x.1>), 
                              'g'^h1(<~ey, ~x>), 'DHKEA'>)
                         >
                        ))
                      ⇒
                       ⊥)  ∥
                     (∃ #i4 sid. (Sid( ~ex, sid ) @ #i4) ∧ #vr.3 < #i4)  ∥
                     ((∀ #i5. (RevealSessk( ~ex ) @ #i5) ⇒ ⊥) ∧
                      (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~ex ) @ #i6) ⇒ ⊥)) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                solve( (∃ #i4 sid. (Sid( ~ex, sid ) @ #i4) ∧ #vr.1 < #i4)  ∥
                       ((∀ #i5. (RevealSessk( ~ex ) @ #i5) ⇒ ⊥) ∧
                        (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~ex ) @ #i6) ⇒ ⊥)) )
                  case case_1
                  solve( Sid( ~ex, sid ) @ #i4.2 )
                    case Init_DHKEA_1
                    by contradiction /* cyclic */
                  next
                    case Init_DHKEA_2
                    solve( Init_DHKEA_1( ~ex, $A.1, $B.1, ~ea, X ) ▶₀ #i4.1 )
                      case Init_DHKEA_1
                      solve( Sid( ~ex, sid ) @ #i4.2 )
                        case Init_DHKEA_1
                        by contradiction /* cyclic */
                      next
                        case Init_DHKEA_2
                        solve( Init_DHKEA_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.2 )
                          case Init_DHKEA_1
                          by contradiction /* cyclic */
                        qed
                      next
                        case Init_NAXOS_2
                        by solve( Init_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.2 )
                      next
                        case Resp_DHKEA_2
                        by solve( Resp_DHKEA_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                      next
                        case Resp_NAXOS_2
                        by solve( Resp_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                      qed
                    qed
                  next
                    case Init_NAXOS_2
                    by solve( Init_1( ~ex, $A.1, $B.1, ~ea, X ) ▶₀ #i4.1 )
                  next
                    case Resp_DHKEA_2
                    by solve( Resp_DHKEA_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                  next
                    case Resp_NAXOS_2
                    by solve( Resp_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                  qed
                next
                  case case_2
                  solve( Sid( ~ex, sid ) @ #i4.1 )
                    case Init_DHKEA_1
                    by contradiction /* cyclic */
                  next
                    case Init_DHKEA_2
                    solve( Init_DHKEA_1( ~ex, $A.1, $B.1, ~ea, X ) ▶₀ #i4.1 )
                      case Init_DHKEA_1
                      solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~x>)) ) @ #vk.10 )
                        case Init_DHKEA_1
                        solve( !KU( h1(<~ey, ~x>) ) @ #vk.18 )
                          case c_h1
                          solve( !KU( ~ey ) @ #vk.20 )
                            case Ephk_reveal
                            solve( !KU( ~x ) @ #vk.21 )
                              case Ltk_reveal
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      next
                        case Resp_DHKEA_1
                        solve( !KU( h1(<~ex, ~ea>) ) @ #vk.18 )
                          case c_h1
                          solve( !KU( ~ex ) @ #vk.20 )
                            case Ephk_reveal
                            solve( !KU( ~ea ) @ #vk.21 )
                              case Ltk_reveal
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      next
                        case c_exp
                        solve( !KU( h1(<~ex, ~ea>) ) @ #vk.20 )
                          case c_h1
                          solve( !KU( ~ex ) @ #vk.23 )
                            case Ephk_reveal
                            solve( !KU( ~ea ) @ #vk.24 )
                              case Ltk_reveal
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case Init_NAXOS_2
                    by solve( Init_1( ~ex, $A.1, $B.1, ~ea, X ) ▶₀ #i4.1 )
                  next
                    case Resp_DHKEA_2
                    by solve( Resp_DHKEA_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                  next
                    case Resp_NAXOS_2
                    by solve( Resp_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                  qed
                qed
              next
                case case_3
                solve( (∃ #i4 sid. (Sid( ~ex, sid ) @ #i4) ∧ #vr.1 < #i4)  ∥
                       ((∀ #i5. (RevealSessk( ~ex ) @ #i5) ⇒ ⊥) ∧
                        (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~ex ) @ #i6) ⇒ ⊥)) )
                  case case_1
                  solve( Sid( ~ex, sid ) @ #i4.1 )
                    case Init_DHKEA_1
                    by contradiction /* cyclic */
                  next
                    case Init_DHKEA_2
                    solve( Init_DHKEA_1( ~ex, $A.1, $B.1, ~ea, X ) ▶₀ #i4.1 )
                      case Init_DHKEA_1
                      by contradiction /* cyclic */
                    qed
                  next
                    case Init_NAXOS_2
                    by solve( Init_1( ~ex, $A.1, $B.1, ~ea, X ) ▶₀ #i4.1 )
                  next
                    case Resp_DHKEA_2
                    by solve( Resp_DHKEA_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                  next
                    case Resp_NAXOS_2
                    by solve( Resp_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                  qed
                next
                  case case_2
                  solve( !KU( 'g'^(h1(<~ex, ~x.1>)*h1(<~ey, ~x>)) ) @ #vk.10 )
                    case Init_DHKEA_1
                    solve( !KU( h1(<~ey, ~x>) ) @ #vk.18 )
                      case c_h1
                      solve( !KU( ~ey ) @ #vk.20 )
                        case Ephk_reveal
                        solve( !KU( ~x ) @ #vk.21 )
                          case Ltk_reveal
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case Resp_DHKEA_1
                    solve( !KU( h1(<~ex, ~x.1>) ) @ #vk.18 )
                      case c_h1
                      solve( !KU( ~ex ) @ #vk.20 )
                        case Ephk_reveal
                        solve( !KU( ~x.1 ) @ #vk.21 )
                          case Ltk_reveal
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case c_exp
                    solve( !KU( h1(<~ex, ~x.1>) ) @ #vk.20 )
                      case c_h1
                      solve( !KU( ~ex ) @ #vk.23 )
                        case Ephk_reveal
                        solve( !KU( ~x.1 ) @ #vk.24 )
                          case Ltk_reveal
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case c_h2
              solve( !KU( first(h(<z, $A, $B, X, 'g'^h1(<~ey, ~ea>), 'DHKEA'>))
                     ) @ #vk.17 )
                case c_first
                solve( !KU( 'g'^(~x*h1(<~ey, ~ea>)) ) @ #vk.19 )
                  case Resp_DHKEA_1
                  solve( !KU( ~x ) @ #vk.21 )
                    case Ltk_reveal
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  solve( !KU( ~x ) @ #vk.23 )
                    case Ltk_reveal
                    by contradiction /* from formulas */
                  qed
                next
                  case generate_ltk
                  solve( !KU( h1(<~ey, ~ea>) ) @ #vk.21 )
                    case c_h1
                    solve( !KU( ~ey ) @ #vk.23 )
                      case Ephk_reveal
                      solve( !KU( ~ea ) @ #vk.24 )
                        case Ltk_reveal
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Resp_DHKEA_1_case_2
      by solve( Sid( ~ey, <$A.1, $A.2, com, role, proto> ) @ #i1 )
    qed
  next
    case Resp_NAXOS_2
    solve( Resp_1( ~ey, $B, $A, Y, X, confA, k ) ▶₀ #i1 )
      case Resp_NAXOS_1_case_1
      solve( Sid( ~ey, <$A.1, $A.2, com, role, proto> ) @ #i1 )
        case Resp_NAXOS_2
        solve( !KU( second(h(<'g'^(~ea*h1(<~ey, ~eb>)), z, z.1, $A, $B, X, 
                              'g'^h1(<~ey, ~eb>), 'NAXOS_C'>))
               ) @ #vk )
          case Sessk_reveal_case_1
          solve( (∀ rest.
                   ((rest+<'1', 'g'^h1(<~s, ~ea>)>) =
                    (<'1', 'g'^h1(<~s, ~ea>)>+<'2', 'g'^h1(<~ey, ~eb>)>+
                     <'3', $A, 
                      h2(<
                          first(h(<'g'^(~ea*h1(<~ey, ~eb>)), 'g'^(~eb*h1(<~s, ~ea>)), 
                                   'g'^(h1(<~ey, ~eb>)*h1(<~s, ~ea>)), $A, $B, 'g'^h1(<~s, ~ea>), 
                                   'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)), 
                          'I', $A, $B, 'g'^h1(<~s, ~ea>), 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)
                     >
                    ))
                  ⇒
                   ⊥)  ∥
                 (∃ #i4 sid. (Sid( ~s, sid ) @ #i4) ∧ #vr.3 < #i4)  ∥
                 ((∀ #i5. (RevealSessk( ~s ) @ #i5) ⇒ ⊥) ∧
                  (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~s ) @ #i6) ⇒ ⊥)) )
            case case_1
            by contradiction /* from formulas */
          next
            case case_2
            solve( (∃ #i4 sid. (Sid( ~s, sid ) @ #i4) ∧ #vr.2 < #i4)  ∥
                   ((∀ #i5. (RevealSessk( ~s ) @ #i5) ⇒ ⊥) ∧
                    (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~s ) @ #i6) ⇒ ⊥)) )
              case case_1
              solve( Sid( ~s, sid ) @ #i4.2 )
                case Init_DHKEA_2
                by solve( Init_DHKEA_1( ~s, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
              next
                case Init_NAXOS_1
                by contradiction /* cyclic */
              next
                case Init_NAXOS_2
                solve( Init_1( ~s, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
                  case Init_NAXOS_1
                  solve( Sid( ~s, sid ) @ #i4.2 )
                    case Init_DHKEA_2
                    by solve( Init_DHKEA_1( ~s, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.2 )
                  next
                    case Init_NAXOS_1
                    by contradiction /* cyclic */
                  next
                    case Init_NAXOS_2
                    solve( Init_1( ~s, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.2 )
                      case Init_NAXOS_1
                      by contradiction /* cyclic */
                    qed
                  next
                    case Resp_DHKEA_2
                    by solve( Resp_DHKEA_1( ~s, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                  next
                    case Resp_NAXOS_2
                    by solve( Resp_1( ~s, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                  qed
                qed
              next
                case Resp_DHKEA_2
                by solve( Resp_DHKEA_1( ~s, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
              next
                case Resp_NAXOS_2
                by solve( Resp_1( ~s, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_3
            by contradiction /* from formulas */
          qed
        next
          case Sessk_reveal_case_2
          by contradiction /* from formulas */
        next
          case c_second
          solve( !KU( h(<'g'^(~ea*h1(<~ey, ~eb>)), z, z.1, $A, $B, X, 
                         'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)
                 ) @ #vk.5 )
            case c_h
            solve( !KU( 'g'^(~ea*h1(<~ey, ~eb>)) ) @ #vk.9 )
              case Resp_NAXOS_1
              solve( !KU( ~ea ) @ #vk.19 )
                case Ltk_reveal
                solve( !KU( h2(<
                                first(h(<'g'^(~ea*h1(<~ey, ~eb>)), z, z.1, $A, $B, X, 
                                         'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)), 
                                'I', $A, $B, X, 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)
                       ) @ #vk.11 )
                  case Init_NAXOS_2
                  solve( (∀ rest.
                           ((rest+<'1', 'g'^h1(<~ex, ~ea>)>) =
                            (<'1', 'g'^h1(<~ex, ~ea>)>+<'2', 'g'^h1(<~ey, ~eb>)>+
                             <'3', $A, 
                              h2(<
                                  first(h(<'g'^(~ea*h1(<~ey, ~eb>)), 'g'^(~eb*h1(<~ex, ~ea>)), 
                                           'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)), $A, $B, 'g'^h1(<~ex, ~ea>), 
                                           'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)), 
                                  'I', $A, $B, 'g'^h1(<~ex, ~ea>), 'g'^h1(<~ey, ~eb>), 'NAXOS_C'>)
                             >
                            ))
                          ⇒
                           ⊥)  ∥
                         (∃ #i4 sid. (Sid( ~ex, sid ) @ #i4) ∧ #vr.7 < #i4)  ∥
                         ((∀ #i5. (RevealSessk( ~ex ) @ #i5) ⇒ ⊥) ∧
                          (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~ex ) @ #i6) ⇒ ⊥)) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    solve( (∃ #i4 sid. (Sid( ~ex, sid ) @ #i4) ∧ #vr.5 < #i4)  ∥
                           ((∀ #i5. (RevealSessk( ~ex ) @ #i5) ⇒ ⊥) ∧
                            (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~ex ) @ #i6) ⇒ ⊥)) )
                      case case_1
                      solve( Sid( ~ex, sid ) @ #i4.2 )
                        case Init_DHKEA_2
                        by solve( Init_DHKEA_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
                      next
                        case Init_NAXOS_1
                        by contradiction /* cyclic */
                      next
                        case Init_NAXOS_2
                        solve( Init_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
                          case Init_NAXOS_1
                          solve( Sid( ~ex, sid ) @ #i4.2 )
                            case Init_DHKEA_2
                            by solve( Init_DHKEA_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.2 )
                          next
                            case Init_NAXOS_1
                            by contradiction /* cyclic */
                          next
                            case Init_NAXOS_2
                            solve( Init_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.2 )
                              case Init_NAXOS_1
                              by contradiction /* cyclic */
                            qed
                          next
                            case Resp_DHKEA_2
                            by solve( Resp_DHKEA_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                          next
                            case Resp_NAXOS_2
                            by solve( Resp_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.2 )
                          qed
                        qed
                      next
                        case Resp_DHKEA_2
                        by solve( Resp_DHKEA_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      next
                        case Resp_NAXOS_2
                        by solve( Resp_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      qed
                    next
                      case case_2
                      solve( Sid( ~ex, sid ) @ #i4.1 )
                        case Init_DHKEA_2
                        by solve( Init_DHKEA_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
                      next
                        case Init_NAXOS_1
                        by contradiction /* cyclic */
                      next
                        case Init_NAXOS_2
                        solve( Init_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
                          case Init_NAXOS_1
                          solve( !KU( 'g'^(~eb*h1(<~ex, ~ea>)) ) @ #vk.18 )
                            case Init_NAXOS_1
                            solve( !KU( ~eb ) @ #vk.23 )
                              case Ltk_reveal
                              solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)) ) @ #vk.20 )
                                case Init_NAXOS_1
                                solve( !KU( h1(<~ey, ~eb>) ) @ #vk.24 )
                                  case c_h1
                                  solve( !KU( ~ey ) @ #vk.26 )
                                    case Ephk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case Resp_NAXOS_1
                                solve( !KU( h1(<~ex, ~ea>) ) @ #vk.24 )
                                  case c_h1
                                  solve( !KU( ~ex ) @ #vk.26 )
                                    case Ephk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case c_exp
                                solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                  case c_h1
                                  solve( !KU( ~ex ) @ #vk.29 )
                                    case Ephk_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            qed
                          next
                            case c_exp
                            solve( !KU( ~eb ) @ #vk.25 )
                              case Ltk_reveal
                              solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                                case c_h1
                                solve( !KU( ~ex ) @ #vk.28 )
                                  case Ephk_reveal
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case generate_ltk
                            solve( !KU( h1(<~ex, ~ea>) ) @ #vk.23 )
                              case c_h1
                              solve( !KU( ~ex ) @ #vk.25 )
                                case Ephk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      next
                        case Resp_DHKEA_2
                        by solve( Resp_DHKEA_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      next
                        case Resp_NAXOS_2
                        by solve( Resp_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      qed
                    qed
                  next
                    case case_3
                    solve( (∃ #i4 sid. (Sid( ~ex, sid ) @ #i4) ∧ #vr.5 < #i4)  ∥
                           ((∀ #i5. (RevealSessk( ~ex ) @ #i5) ⇒ ⊥) ∧
                            (∀ #i5 #i6. (RevealLtk( $A ) @ #i5) ∧ (RevealEphk( ~ex ) @ #i6) ⇒ ⊥)) )
                      case case_1
                      solve( Sid( ~ex, sid ) @ #i4.1 )
                        case Init_DHKEA_2
                        by solve( Init_DHKEA_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
                      next
                        case Init_NAXOS_1
                        by contradiction /* cyclic */
                      next
                        case Init_NAXOS_2
                        solve( Init_1( ~ex, $A.1, $B.1, ~ea.1, X ) ▶₀ #i4.1 )
                          case Init_NAXOS_1
                          by contradiction /* cyclic */
                        qed
                      next
                        case Resp_DHKEA_2
                        by solve( Resp_DHKEA_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      next
                        case Resp_NAXOS_2
                        by solve( Resp_1( ~ex, $B.1, $A.1, Y, X, confA, key ) ▶₀ #i4.1 )
                      qed
                    next
                      case case_2
                      solve( !KU( 'g'^(~eb*h1(<~ex, ~ea>)) ) @ #vk.18 )
                        case Init_NAXOS_1
                        solve( !KU( ~eb ) @ #vk.23 )
                          case Ltk_reveal
                          solve( !KU( 'g'^(h1(<~ex, ~ea>)*h1(<~ey, ~eb>)) ) @ #vk.20 )
                            case Init_NAXOS_1
                            solve( !KU( h1(<~ey, ~eb>) ) @ #vk.24 )
                              case c_h1
                              solve( !KU( ~ey ) @ #vk.26 )
                                case Ephk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          next
                            case Resp_NAXOS_1
                            solve( !KU( h1(<~ex, ~ea>) ) @ #vk.24 )
                              case c_h1
                              solve( !KU( ~ex ) @ #vk.26 )
                                case Ephk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          next
                            case c_exp
                            solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                              case c_h1
                              solve( !KU( ~ex ) @ #vk.29 )
                                case Ephk_reveal
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      next
                        case c_exp
                        solve( !KU( ~eb ) @ #vk.25 )
                          case Ltk_reveal
                          solve( !KU( h1(<~ex, ~ea>) ) @ #vk.26 )
                            case c_h1
                            solve( !KU( ~ex ) @ #vk.28 )
                              case Ephk_reveal
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      next
                        case generate_ltk
                        solve( !KU( h1(<~ex, ~ea>) ) @ #vk.23 )
                          case c_h1
                          solve( !KU( ~ex ) @ #vk.25 )
                            case Ephk_reveal
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_h2
                  solve( !KU( first(h(<'g'^(~ea*h1(<~ey, ~eb>)), z, z.1, $A, $B, X, 
                                       'g'^h1(<~ey, ~eb>), 'NAXOS_C'>))
                         ) @ #vk.22 )
                    case c_first
                    by contradiction /* cyclic */
                  qed
                qed
              qed
            next
              case c_exp
              solve( !KU( ~ea ) @ #vk.21 )
                case Ltk_reveal
                solve( !KU( h1(<~ey, ~eb>) ) @ #vk.22 )
                  case c_h1
                  solve( !KU( ~ey ) @ #vk.24 )
                    case Ephk_reveal
                    solve( !KU( ~eb ) @ #vk.25 )
                      case Ltk_reveal
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case generate_ltk
              solve( !KU( h1(<~ey, ~eb>) ) @ #vk.19 )
                case c_h1
                solve( !KU( ~ey ) @ #vk.21 )
                  case Ephk_reveal
                  solve( !KU( ~eb ) @ #vk.22 )
                    case Ltk_reveal
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Resp_NAXOS_1_case_2
      by solve( Sid( ~ey, <$A.1, $A.2, com, role, proto> ) @ #i1 )
    qed
  qed
qed

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.


analyzing: examples/ake/dh/DHKEA_NAXOS_C_eCK_PFS_keyreg_partially_matching.spthy

------------------------------------------------------------------------------
analyzed: examples/ake/dh/DHKEA_NAXOS_C_eCK_PFS_keyreg_partially_matching.spthy

  output:          examples/ake/dh/DHKEA_NAXOS_C_eCK_PFS_keyreg_partially_matching.spthy.tmp
  processing time: 107.506741458s
  execution_match_same_key_NAXOS (exists-trace): verified (13 steps)
  eCK_key_secrecy (all-traces): verified (809 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: examples/ake/dh/DHKEA_NAXOS_C_eCK_PFS_keyreg_partially_matching.spthy

  output:          examples/ake/dh/DHKEA_NAXOS_C_eCK_PFS_keyreg_partially_matching.spthy.tmp
  processing time: 107.506741458s
  execution_match_same_key_NAXOS (exists-trace): verified (13 steps)
  eCK_key_secrecy (all-traces): verified (809 steps)

==============================================================================
*/
