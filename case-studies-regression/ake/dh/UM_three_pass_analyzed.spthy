theory UM_three_pass begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, multiset
functions: MAC/2, concat/2, first/1, fst/1, h/1, pair/2, second/1, snd/1
equations:
    concat(first(x), second(x)) = x,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2



rule (modulo E) Register_key_honest:
   [ Fr( ~ea ) ]
  --[ KeyReg( $A ) ]->
   [ !Ltk( $A, ~ea ), !Pk( $A, 'g'^~ea ), Out( 'g'^~ea ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) I_Activate:
   [ Fr( ~ex ) ]
  --[
  Activate( <'UM3', $A, $B, 'g'^~ex> ), Sid( <'UM3', $A, $B, 'g'^~ex> ),
  Agents( $A, $B )
  ]->
   [
   I_Act( ~ex, $A, $B ), !SessionState( <'UM3', $A, $B, 'g'^~ex>, $A, ~ex ),
   Out( 'g'^~ex )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) I_Complete:
   [
   I_Act( ~ex, $A, $B ),
   In( <Y, 
        MAC(first(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>)),
            <'I', $A, $B, 'g'^~ex, Y>)
       >
   ),
   !Ltk( $A, ~ea ), !Pk( $B, 'g'^~eb )
   ]
  --[
  Complete( <'UM3', $A, $B, 
             (<'1', 'g'^~ex>+
              <'2', Y, 
               MAC(first(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>)),
                   <'I', $A, $B, 'g'^~ex, Y>)
              >+
              <'3', 
               MAC(first(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>)),
                   <'R', $B, $A, Y, 'g'^~ex>)
              >
             )
            >,
            'I', second(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>))
  ),
  SidUpdated( <'UM3', $A, $B, '1', 'g'^~ex> ),
  Sid( <'UM3', $A, $B, 
        (<'1', 'g'^~ex>+
         <'2', Y, 
          MAC(first(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>)),
              <'I', $A, $B, 'g'^~ex, Y>)
         >+
         <'3', 
          MAC(first(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>)),
              <'R', $B, $A, Y, 'g'^~ex>)
         >
        )
       >
  )
  ]->
   [
   I_Comp( <'UM3', $A, $B, 
            (<'1', 'g'^~ex>+
             <'2', Y, 
              MAC(first(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>)),
                  <'I', $A, $B, 'g'^~ex, Y>)
             >+
             <'3', 
              MAC(first(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>)),
                  <'R', $B, $A, Y, 'g'^~ex>)
             >
            )
           >
   ),
   Out( MAC(first(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>)),
            <'R', $B, $A, Y, 'g'^~ex>)
   ),
   !SessionKey( <'UM3', $A, $B, 
                 (<'1', 'g'^~ex>+
                  <'2', Y, 
                   MAC(first(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>)),
                       <'I', $A, $B, 'g'^~ex, Y>)
                  >+
                  <'3', 
                   MAC(first(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>)),
                       <'R', $B, $A, Y, 'g'^~ex>)
                  >
                 )
                >,
                $A, second(h(<Y^~ex, 'g'^~eb^~ea, $A, $B, 'g'^~ex, Y>))
   )
   ]

  /*
  rule (modulo AC) I_Complete:
     [
     I_Act( ~ex, $A, $B ),
     In( <Y, 
          MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
              <'I', $A, $B, 'g'^~ex, Y>)
         >
     ),
     !Ltk( $A, ~ea ), !Pk( $B, 'g'^~x )
     ]
    --[
    Complete( <'UM3', $A, $B, 
               (<'1', 'g'^~ex>+
                <'2', Y, 
                 MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                     <'I', $A, $B, 'g'^~ex, Y>)
                >+
                <'3', 
                 MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                     <'R', $B, $A, Y, 'g'^~ex>)
                >
               )
              >,
              'I', second(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>))
    ),
    SidUpdated( <'UM3', $A, $B, '1', 'g'^~ex> ),
    Sid( <'UM3', $A, $B, 
          (<'1', 'g'^~ex>+
           <'2', Y, 
            MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                <'I', $A, $B, 'g'^~ex, Y>)
           >+
           <'3', 
            MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                <'R', $B, $A, Y, 'g'^~ex>)
           >
          )
         >
    )
    ]->
     [
     I_Comp( <'UM3', $A, $B, 
              (<'1', 'g'^~ex>+
               <'2', Y, 
                MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                    <'I', $A, $B, 'g'^~ex, Y>)
               >+
               <'3', 
                MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                    <'R', $B, $A, Y, 'g'^~ex>)
               >
              )
             >
     ),
     Out( MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
              <'R', $B, $A, Y, 'g'^~ex>)
     ),
     !SessionKey( <'UM3', $A, $B, 
                   (<'1', 'g'^~ex>+
                    <'2', Y, 
                     MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                         <'I', $A, $B, 'g'^~ex, Y>)
                    >+
                    <'3', 
                     MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                         <'R', $B, $A, Y, 'g'^~ex>)
                    >
                   )
                  >,
                  $A, second(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>))
     )
     ]
    variants (modulo AC)
    1. ~ex   = ~ex.45
       Y     = Y.46
       z     = Y.46^~ex.45
    
    2. ~ex   = ~ex.45
       Y     = z.47^inv(~ex.45)
       z     = z.47
    
    3. ~ex   = ~ex.435
       Y     = x.863^x.864
       z     = x.863^(~ex.435*x.864)
    
    4. ~ex   = ~ex.436
       Y     = x.865^inv((~ex.436*x.866))
       z     = x.865^inv(x.866)
    
    5. ~ex   = ~ex.436
       Y     = x.865^(x.866*inv(~ex.436))
       z     = x.865^x.866
    
    6. ~ex   = ~ex.437
       Y     = x.866^(x.867*inv((~ex.437*x.868)))
       z     = x.866^(x.867*inv(x.868))
  */

rule (modulo E) I_Expire:
   [ I_Comp( sid ) ] --[ Expire( sid ) ]-> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) R_Activate:
   [ Fr( ~ey ), In( X ), !Ltk( $B, ~eb ), !Pk( $A, 'g'^~ea ) ]
  --[
  Activate( <'UM3', $B, $A, 
             (<'1', X>+
              <'2', 'g'^~ey, 
               MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
                   <'I', $A, $B, X, 'g'^~ey>)
              >
             )
            >
  ),
  Sid( <'UM3', $B, $A, 
        (<'1', X>+
         <'2', 'g'^~ey, 
          MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
              <'I', $A, $B, X, 'g'^~ey>)
         >
        )
       >
  ),
  Agents( $A, $B )
  ]->
   [
   Out( <'g'^~ey, 
         MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
             <'I', $A, $B, X, 'g'^~ey>)
        >
   ),
   R_Act( ~ey, $B, $A, X ),
   !SessionState( <'UM3', $B, $A, 
                   (<'1', X>+
                    <'2', 'g'^~ey, 
                     MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
                         <'I', $A, $B, X, 'g'^~ey>)
                    >
                   )
                  >,
                  $A, ~ey
   )
   ]

  /*
  rule (modulo AC) R_Activate:
     [ Fr( ~ey ), In( X ), !Ltk( $B, ~eb ), !Pk( $A, 'g'^~x ) ]
    --[
    Activate( <'UM3', $B, $A, 
               (<'1', X>+
                <'2', 'g'^~ey, 
                 MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                     <'I', $A, $B, X, 'g'^~ey>)
                >
               )
              >
    ),
    Sid( <'UM3', $B, $A, 
          (<'1', X>+
           <'2', 'g'^~ey, 
            MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                <'I', $A, $B, X, 'g'^~ey>)
           >
          )
         >
    ),
    Agents( $A, $B )
    ]->
     [
     Out( <'g'^~ey, 
           MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
               <'I', $A, $B, X, 'g'^~ey>)
          >
     ),
     R_Act( ~ey, $B, $A, X ),
     !SessionState( <'UM3', $B, $A, 
                     (<'1', X>+
                      <'2', 'g'^~ey, 
                       MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                           <'I', $A, $B, X, 'g'^~ey>)
                      >
                     )
                    >,
                    $A, ~ey
     )
     ]
    variants (modulo AC)
    1. ~ey   = ~ey.31
       X     = X.32
       z     = X.32^~ey.31
    
    2. ~ey   = ~ey.31
       X     = z.35^inv(~ey.31)
       z     = z.35
    
    3. ~ey   = ~ey.333
       X     = x.659^x.660
       z     = x.659^(~ey.333*x.660)
    
    4. ~ey   = ~ey.334
       X     = x.661^inv((~ey.334*x.662))
       z     = x.661^inv(x.662)
    
    5. ~ey   = ~ey.334
       X     = x.661^(x.662*inv(~ey.334))
       z     = x.661^x.662
    
    6. ~ey   = ~ey.335
       X     = x.662^(x.663*inv((~ey.335*x.664)))
       z     = x.662^(x.663*inv(x.664))
  */

rule (modulo E) R_Complete:
   [
   R_Act( ~ey, $B, $A, X ),
   In( MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
           <'R', $B, $A, 'g'^~ey, X>)
   ),
   !Ltk( $B, ~eb ), !Pk( $A, 'g'^~ea )
   ]
  --[
  Complete( <'UM3', $B, $A, 
             (<'1', X>+
              <'2', 'g'^~ey, 
               MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
                   <'I', $A, $B, X, 'g'^~ey>)
              >+
              <'3', 
               MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
                   <'R', $B, $A, 'g'^~ey, X>)
              >
             )
            >,
            'R', second(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>))
  ),
  SidUpdated( <'UM3', $B, $A, 
               (<'1', X>+
                <'2', 'g'^~ey, 
                 MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
                     <'I', $A, $B, X, 'g'^~ey>)
                >
               )
              >
  ),
  Sid( <'UM3', $B, $A, 
        (<'1', X>+
         <'2', 'g'^~ey, 
          MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
              <'I', $A, $B, X, 'g'^~ey>)
         >+
         <'3', 
          MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
              <'R', $B, $A, 'g'^~ey, X>)
         >
        )
       >
  )
  ]->
   [
   R_Comp( <'UM3', $B, $A, 
            (<'1', X>+
             <'2', 'g'^~ey, 
              MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
                  <'I', $A, $B, X, 'g'^~ey>)
             >+
             <'3', 
              MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
                  <'R', $B, $A, 'g'^~ey, X>)
             >
            )
           >
   ),
   !SessionKey( <'UM3', $B, $A, 
                 (<'1', X>+
                  <'2', 'g'^~ey, 
                   MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
                       <'I', $A, $B, X, 'g'^~ey>)
                  >+
                  <'3', 
                   MAC(first(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>)),
                       <'R', $B, $A, 'g'^~ey, X>)
                  >
                 )
                >,
                $B, second(h(<X^~ey, 'g'^~ea^~eb, $A, $B, X, 'g'^~ey>))
   )
   ]

  /*
  rule (modulo AC) R_Complete:
     [
     R_Act( ~ey, $B, $A, X ),
     In( MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
             <'R', $B, $A, 'g'^~ey, X>)
     ),
     !Ltk( $B, ~eb ), !Pk( $A, 'g'^~x )
     ]
    --[
    Complete( <'UM3', $B, $A, 
               (<'1', X>+
                <'2', 'g'^~ey, 
                 MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                     <'I', $A, $B, X, 'g'^~ey>)
                >+
                <'3', 
                 MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                     <'R', $B, $A, 'g'^~ey, X>)
                >
               )
              >,
              'R', second(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>))
    ),
    SidUpdated( <'UM3', $B, $A, 
                 (<'1', X>+
                  <'2', 'g'^~ey, 
                   MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                       <'I', $A, $B, X, 'g'^~ey>)
                  >
                 )
                >
    ),
    Sid( <'UM3', $B, $A, 
          (<'1', X>+
           <'2', 'g'^~ey, 
            MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                <'I', $A, $B, X, 'g'^~ey>)
           >+
           <'3', 
            MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                <'R', $B, $A, 'g'^~ey, X>)
           >
          )
         >
    )
    ]->
     [
     R_Comp( <'UM3', $B, $A, 
              (<'1', X>+
               <'2', 'g'^~ey, 
                MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                    <'I', $A, $B, X, 'g'^~ey>)
               >+
               <'3', 
                MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                    <'R', $B, $A, 'g'^~ey, X>)
               >
              )
             >
     ),
     !SessionKey( <'UM3', $B, $A, 
                   (<'1', X>+
                    <'2', 'g'^~ey, 
                     MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                         <'I', $A, $B, X, 'g'^~ey>)
                    >+
                    <'3', 
                     MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                         <'R', $B, $A, 'g'^~ey, X>)
                    >
                   )
                  >,
                  $B, second(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>))
     )
     ]
    variants (modulo AC)
    1. ~ey   = ~ey.45
       X     = X.46
       z     = X.46^~ey.45
    
    2. ~ey   = ~ey.45
       X     = z.47^inv(~ey.45)
       z     = z.47
    
    3. ~ey   = ~ey.421
       X     = x.835^x.836
       z     = x.835^(~ey.421*x.836)
    
    4. ~ey   = ~ey.422
       X     = x.837^inv((~ey.422*x.838))
       z     = x.837^inv(x.838)
    
    5. ~ey   = ~ey.422
       X     = x.837^(x.838*inv(~ey.422))
       z     = x.837^x.838
    
    6. ~ey   = ~ey.423
       X     = x.838^(x.839*inv((~ey.423*x.840)))
       z     = x.838^(x.839*inv(x.840))
  */

rule (modulo E) R_Expire:
   [ R_Comp( sid ) ] --[ Expire( sid ) ]-> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) Corrupt_Ltk:
   [ !Ltk( $A, ~ea ) ] --[ Corrupt( $A ) ]-> [ Out( ~ea ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Corrupt_SessionState:
   [ !SessionState( sid, ~x, $A ) ]
  --[ Corrupt( $A ), BeforeComplete( sid ) ]->
   [ Out( ~x ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Corrupt_SessionKey:
   [ !SessionKey( sid, $A, k ) ]
  --[ Corrupt( $A ), BeforeExpire( sid ) ]->
   [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_SessionState:
   [ !SessionState( sid, ~x, $A ) ]
  --[ SessionStateReveal( sid ), BeforeComplete( sid ) ]->
   [ Out( ~x ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_SessionKey:
   [ !SessionKey( sid, $A, k ) ]
  --[ SessionKeyReveal( sid ), BeforeExpire( sid ) ]->
   [ Out( k ) ]

  /* has exactly the trivial AC variant */

restriction sid_unique:
  "∀ #i #j sid.
    ((Activate( sid ) @ #i) ∧ (Activate( sid ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction keyreg_unique:
  "∀ #i #j A. ((KeyReg( A ) @ #i) ∧ (KeyReg( A ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction corrupt_and_reveal_not_too_early:
  "(∀ #i #j s role_ k_.
     ((BeforeComplete( s ) @ #i) ∧ (Complete( s, role_, k_ ) @ #j)) ⇒
     (#i < #j)) ∧
   (∀ #i #j s. ((BeforeExpire( s ) @ #i) ∧ (Expire( s ) @ #j)) ⇒ (#i < #j))"
  // safety formula

lemma key_agreement_reachable:
  exists-trace
  "∃ #i #j sid sidm k.
    ((((Complete( sid, 'I', k ) @ #i) ∧ (Complete( sidm, 'R', k ) @ #j)) ∧
      (¬(∃ #j.1 C. Corrupt( C ) @ #j.1))) ∧
     (¬(∃ #j.1 s. SessionKeyReveal( s ) @ #j.1))) ∧
    (¬(∃ #j.1 s. SessionStateReveal( s ) @ #j.1))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i #j sid sidm k.
  (Complete( sid, 'I', k ) @ #i) ∧ (Complete( sidm, 'R', k ) @ #j)
 ∧
  (∀ #j.1 C. (Corrupt( C ) @ #j.1) ⇒ ⊥) ∧
  (∀ #j.1 s. (SessionKeyReveal( s ) @ #j.1) ⇒ ⊥) ∧
  (∀ #j.1 s. (SessionStateReveal( s ) @ #j.1) ⇒ ⊥)"
*/
simplify
solve( Complete( sid, 'I', k ) @ #i )
  case I_Complete
  solve( I_Act( ~ex, $A, $B ) ▶₀ #i )
    case I_Activate
    solve( !Ltk( $A, ~ea ) ▶₂ #i )
      case Register_key_honest
      solve( !Pk( $B, 'g'^~x ) ▶₃ #i )
        case Register_key_honest
        solve( Complete( sidm, 'R',
                         second(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>))
               ) @ #j )
          case R_Complete_case_1
          solve( R_Act( ~ey, $B, $A, 'g'^~ex ) ▶₀ #j )
            case R_Activate
            solve( !Ltk( $B, ~ea ) ▶₂ #j )
              case Register_key_honest
              solve( !Pk( $A, 'g'^~ea ) ▶₃ #j )
                case Register_key_honest
                solve( !KU( MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                         'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                       ) @ #vk.2 )
                  case R_Activate
                  solve( !KU( MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                           'g'^~ey>)),
                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                         ) @ #vk.3 )
                    case I_Complete
                    solve( !KU( 'g'^~ey ) @ #vk.3 )
                      case R_Activate
                      solve( !KU( 'g'^~ex ) @ #vk.4 )
                        case I_Activate
                        SOLVED // trace found
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma CK_secure_UM3:
  all-traces
  "∀ #i #j role A B k s comm.
    (((Complete( <'UM3', A, B, comm>, role, k ) @ #i) ∧ (K( k ) @ #j)) ∧
     (s = <'UM3', A, B, comm>)) ⇒
    (((((∃ #k.1. SessionKeyReveal( s ) @ #k.1) ∨
        (∃ #k.1.
          (Corrupt( A ) @ #k.1) ∧ (¬(∃ #l. (Expire( s ) @ #l) ∧ (#l < #k.1))))) ∨
       (∃ #k.1.
         (SessionStateReveal( s ) @ #k.1) ∧
         ((∃ #l. Corrupt( A ) @ #l) ∨ (∃ #l. Corrupt( B ) @ #l)))) ∨
      (∃ #l ms matchingComm.
        ((((Sid( <'UM3', B, A, matchingComm> ) @ #l) ∧
           (ms = <'UM3', B, A, matchingComm>)) ∧
          ((∃ rest. (matchingComm+rest) = comm) ∨ (matchingComm = comm))) ∧
         (¬(∃ #v. SidUpdated( ms ) @ #v))) ∧
        (((∃ #k.1. SessionKeyReveal( ms ) @ #k.1) ∨
          (∃ #k.1.
            (Corrupt( B ) @ #k.1) ∧
            (¬(∃ #l.1. (Expire( ms ) @ #l.1) ∧ (#l.1 < #k.1))))) ∨
         (∃ #k.1.
           (SessionStateReveal( ms ) @ #k.1) ∧
           ((∃ #l.1. Corrupt( A ) @ #l.1) ∨ (∃ #l.1. Corrupt( B ) @ #l.1)))))) ∨
     ((¬(∃ #l matchingComm.
          ((Sid( <'UM3', B, A, matchingComm> ) @ #l) ∧
           ((∃ rest. (matchingComm+rest) = comm) ∨ (matchingComm = comm))) ∧
          (¬(∃ #v. SidUpdated( <'UM3', B, A, matchingComm> ) @ #v)))) ∧
      (∃ #k.1.
        (Corrupt( B ) @ #k.1) ∧ (¬(∃ #l. (Expire( s ) @ #l) ∧ (#l < #k.1))))))"
/*
guarded formula characterizing all counter-examples:
"∃ #i #j role A B k s comm.
  (Complete( <'UM3', A, B, comm>, role, k ) @ #i) ∧
  (K( k ) @ #j) ∧
  (s = <'UM3', A, B, comm>)
 ∧
  (∀ #k.1. (SessionKeyReveal( s ) @ #k.1) ⇒ ⊥) ∧
  (∀ #k.1. (Corrupt( A ) @ #k.1) ⇒ ∃ #l. (Expire( s ) @ #l) ∧ #l < #k.1) ∧
  (∀ #k.1.
    (SessionStateReveal( s ) @ #k.1)
   ⇒
    (∀ #l. (Corrupt( A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( B ) @ #l) ⇒ ⊥)) ∧
  (∀ #l ms matchingComm.
    (Sid( <'UM3', B, A, matchingComm> ) @ #l) ∧
    (ms = <'UM3', B, A, matchingComm>)
   ⇒
    (((∀ rest. ((matchingComm+rest) = comm) ⇒ ⊥) ∧
      (¬(matchingComm = comm))) ∨
     (∃ #v. (SidUpdated( ms ) @ #v)) ∨
     ((∀ #k.1. (SessionKeyReveal( ms ) @ #k.1) ⇒ ⊥) ∧
      (∀ #k.1.
        (Corrupt( B ) @ #k.1) ⇒ ∃ #l.1. (Expire( ms ) @ #l.1) ∧ #l.1 < #k.1) ∧
      (∀ #k.1.
        (SessionStateReveal( ms ) @ #k.1)
       ⇒
        (∀ #l.1. (Corrupt( A ) @ #l.1) ⇒ ⊥) ∧
        (∀ #l.1. (Corrupt( B ) @ #l.1) ⇒ ⊥))))) ∧
  (((∃ #l matchingComm.
      (Sid( <'UM3', B, A, matchingComm> ) @ #l)
     ∧
      (((∃ rest. ((matchingComm+rest) = comm)) ∨ (matchingComm = comm))) ∧
      (∀ #v. (SidUpdated( <'UM3', B, A, matchingComm> ) @ #v) ⇒ ⊥)) ∨
    (∀ #k.1. (Corrupt( B ) @ #k.1) ⇒ ∃ #l. (Expire( s ) @ #l) ∧ #l < #k.1)))"
*/
simplify
solve( (∃ #l matchingComm.
         (Sid( <'UM3', B, A, matchingComm> ) @ #l)
        ∧
         (((∃ rest. ((matchingComm+rest) = comm)) ∨ (matchingComm = comm))) ∧
         (∀ #v. (SidUpdated( <'UM3', B, A, matchingComm> ) @ #v) ⇒ ⊥))  ∥
       (∀ #k.
         (Corrupt( B ) @ #k)
        ⇒
         ∃ #l. (Expire( <'UM3', A, B, comm> ) @ #l) ∧ #l < #k) )
  case case_1
  solve( (∃ rest. ((matchingComm+rest) = comm))  ∥ (matchingComm = comm) )
    case case_1
    solve( (∀ rest.1. ((matchingComm+rest.1) = (matchingComm+rest)) ⇒ ⊥)  ∥
           (∃ #v. (SidUpdated( <'UM3', B, A, matchingComm> ) @ #v))  ∥
           ((∀ #k. (SessionKeyReveal( <'UM3', B, A, matchingComm> ) @ #k) ⇒ ⊥) ∧
            (∀ #k.
              (Corrupt( B ) @ #k)
             ⇒
              ∃ #l. (Expire( <'UM3', B, A, matchingComm> ) @ #l) ∧ #l < #k) ∧
            (∀ #k.
              (SessionStateReveal( <'UM3', B, A, matchingComm> ) @ #k)
             ⇒
              (∀ #l. (Corrupt( A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( B ) @ #l) ⇒ ⊥))) )
      case case_1
      by contradiction /* from formulas */
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      solve( Complete( <'UM3', A, B, (matchingComm+rest)>, role, k ) @ #i )
        case I_Complete_case_1
        solve( I_Act( ~ex, $A, $B ) ▶₀ #i )
          case I_Activate
          solve( !Ltk( $A, ~ea ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $B, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              by solve( Sid( <'UM3', $B, $A, '1', 'g'^~ex> ) @ #l )
            qed
          qed
        qed
      next
        case I_Complete_case_2
        solve( I_Act( ~ex, $A, $B ) ▶₀ #i )
          case I_Activate
          solve( !Ltk( $A, ~ea ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $B, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              by solve( Sid( <'UM3', $B, $A, '2', Y, 
                              MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                  <'I', $A, $B, 'g'^~ex, Y>)
                             >
                        ) @ #l )
            qed
          qed
        qed
      next
        case I_Complete_case_3
        solve( I_Act( ~ex, $A, $B ) ▶₀ #i )
          case I_Activate
          solve( !Ltk( $A, ~ea ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $B, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              by solve( Sid( <'UM3', $B, $A, '3', 
                              MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                  <'R', $B, $A, Y, 'g'^~ex>)
                             >
                        ) @ #l )
            qed
          qed
        qed
      next
        case I_Complete_case_4
        solve( I_Act( ~ex, $A, $B ) ▶₀ #i )
          case I_Activate
          solve( !Ltk( $A, ~ea ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $B, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              solve( Sid( <'UM3', $B, $A, 
                           (<'1', 'g'^~ex>+
                            <'2', Y, 
                             MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                 <'I', $A, $B, 'g'^~ex, Y>)
                            >
                           )
                          >
                     ) @ #l )
                case R_Activate_case_1
                solve( !Ltk( $B, ~ea ) ▶₂ #l )
                  case Register_key_honest
                  solve( (∀ rest.
                           ((rest+'g'^~ex) =
                            (<'1', 'g'^~ex>+
                             <'2', 'g'^~ey, 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                             >+
                             <'3', 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                             >
                            ))
                          ⇒
                           ⊥)  ∥
                         (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                         ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                          (∀ #k.
                            (Corrupt( $A ) @ #k)
                           ⇒
                            ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                          (∀ #k.
                            (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                           ⇒
                            (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                    case case_1
                    solve( (∃ #v.
                             (SidUpdated( <'UM3', $A, $A, 
                                           (<'1', 'g'^~ex>+
                                            <'2', 'g'^~ey, 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                            >+
                                            <'3', 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                            >
                                           )
                                          >
                              ) @ #v))  ∥
                           ((∀ #k.
                              (SessionKeyReveal( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >+
                                                   <'3', 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                   >
                                                  )
                                                 >
                               ) @ #k)
                             ⇒
                              ⊥) ∧
                            (∀ #k.
                              (Corrupt( $A ) @ #k)
                             ⇒
                              ∃ #l.
                               (Expire( <'UM3', $A, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                          >+
                                          <'3', 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                          >
                                         )
                                        >
                                ) @ #l)
                              ∧
                               #l < #k) ∧
                            (∀ #k.
                              (SessionStateReveal( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >+
                                                     <'3', 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                     >
                                                    )
                                                   >
                               ) @ #k)
                             ⇒
                              (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                      case case_1
                      solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                        case Register_key_honest
                        by solve( SidUpdated( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >+
                                                <'3', 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                >
                                               )
                                              >
                                  ) @ #v )
                      qed
                    next
                      case case_2
                      solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                        case Register_key_honest
                        solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                              'g'^~ey>))
                               ) @ #vk )
                          case Corrupt_SessionKey_case_1
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_2
                          by contradiction /* cyclic */
                        next
                          case Reveal_SessionKey_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_2
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                 ) @ #vk.5 )
                            case c_h
                            solve( !KU( 'g'^(~ex*~ey) ) @ #vk.8 )
                              case I_Activate
                              by solve( !KU( ~ey ) @ #vk.14 )
                            next
                              case R_Activate
                              by solve( !KU( ~ex ) @ #vk.14 )
                            next
                              case c_exp
                              by solve( !KU( ~ex ) @ #vk.16 )
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #v.
                             (SidUpdated( <'UM3', $A, $A, 
                                           (<'1', 'g'^~ex>+
                                            <'2', 'g'^~ey, 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                            >+
                                            <'3', 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                            >
                                           )
                                          >
                              ) @ #v))  ∥
                           ((∀ #k.
                              (SessionKeyReveal( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >+
                                                   <'3', 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                   >
                                                  )
                                                 >
                               ) @ #k)
                             ⇒
                              ⊥) ∧
                            (∀ #k.
                              (Corrupt( $A ) @ #k)
                             ⇒
                              ∃ #l.
                               (Expire( <'UM3', $A, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                          >+
                                          <'3', 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                          >
                                         )
                                        >
                                ) @ #l)
                              ∧
                               #l < #k) ∧
                            (∀ #k.
                              (SessionStateReveal( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >+
                                                     <'3', 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                     >
                                                    )
                                                   >
                               ) @ #k)
                             ⇒
                              (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                      case case_1
                      solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                        case Register_key_honest
                        by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                      qed
                    next
                      case case_2
                      solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                        case Register_key_honest
                        by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                      qed
                    qed
                  next
                    case case_3
                    solve( (∃ #v.
                             (SidUpdated( <'UM3', $A, $A, 
                                           (<'1', 'g'^~ex>+
                                            <'2', 'g'^~ey, 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                            >+
                                            <'3', 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                            >
                                           )
                                          >
                              ) @ #v))  ∥
                           ((∀ #k.
                              (SessionKeyReveal( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >+
                                                   <'3', 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                   >
                                                  )
                                                 >
                               ) @ #k)
                             ⇒
                              ⊥) ∧
                            (∀ #k.
                              (Corrupt( $A ) @ #k)
                             ⇒
                              ∃ #l.
                               (Expire( <'UM3', $A, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                          >+
                                          <'3', 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                          >
                                         )
                                        >
                                ) @ #l)
                              ∧
                               #l < #k) ∧
                            (∀ #k.
                              (SessionStateReveal( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >+
                                                     <'3', 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                     >
                                                    )
                                                   >
                               ) @ #k)
                             ⇒
                              (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                      case case_1
                      solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                        case Register_key_honest
                        by solve( SidUpdated( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >+
                                                <'3', 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                >
                                               )
                                              >
                                  ) @ #v )
                      qed
                    next
                      case case_2
                      solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                        case Register_key_honest
                        solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                              'g'^~ey>))
                               ) @ #vk )
                          case Corrupt_SessionKey_case_1
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_2
                          by contradiction /* cyclic */
                        next
                          case Reveal_SessionKey_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_2
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                 ) @ #vk.5 )
                            case c_h
                            solve( !KU( 'g'^(~ex*~ey) ) @ #vk.8 )
                              case I_Activate
                              by solve( !KU( ~ey ) @ #vk.14 )
                            next
                              case R_Activate
                              by solve( !KU( ~ex ) @ #vk.14 )
                            next
                              case c_exp
                              by solve( !KU( ~ex ) @ #vk.16 )
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case R_Activate_case_2
                solve( !Ltk( $B, ~x ) ▶₂ #l )
                  case Register_key_honest
                  solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                    case Register_key_honest
                    solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                          'g'^~ey>))
                           ) @ #vk )
                      case Corrupt_SessionKey_case_1
                      by contradiction /* cyclic */
                    next
                      case Corrupt_SessionKey_case_2
                      by contradiction /* cyclic */
                    next
                      case Corrupt_SessionKey_case_3
                      by contradiction /* cyclic */
                    next
                      case Corrupt_SessionKey_case_4
                      by contradiction /* from formulas */
                    next
                      case Reveal_SessionKey_case_1
                      by contradiction /* from formulas */
                    next
                      case Reveal_SessionKey_case_2
                      by contradiction /* from formulas */
                    next
                      case Reveal_SessionKey_case_3
                      by contradiction /* from formulas */
                    next
                      case Reveal_SessionKey_case_4
                      by contradiction /* from formulas */
                    next
                      case c_second
                      solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)
                             ) @ #vk.5 )
                        case c_h
                        solve( !KU( 'g'^(~ex*~ey) ) @ #vk.8 )
                          case I_Activate
                          by solve( !KU( ~ey ) @ #vk.15 )
                        next
                          case R_Activate
                          by solve( !KU( ~ex ) @ #vk.15 )
                        next
                          case c_exp
                          by solve( !KU( ~ex ) @ #vk.17 )
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case I_Complete_case_5
        solve( I_Act( ~ex, $A, $B ) ▶₀ #i )
          case I_Activate
          solve( !Ltk( $A, ~ea ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $B, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              by solve( Sid( <'UM3', $B, $A, 
                              (<'1', 'g'^~ex>+
                               <'3', 
                                MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                    <'R', $B, $A, Y, 'g'^~ex>)
                               >
                              )
                             >
                        ) @ #l )
            qed
          qed
        qed
      next
        case I_Complete_case_6
        solve( I_Act( ~ex, $A, $B ) ▶₀ #i )
          case I_Activate
          solve( !Ltk( $A, ~ea ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $B, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              by solve( Sid( <'UM3', $B, $A, 
                              (
                               <'2', Y, 
                                MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                    <'I', $A, $B, 'g'^~ex, Y>)
                               >+
                               <'3', 
                                MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                    <'R', $B, $A, Y, 'g'^~ex>)
                               >
                              )
                             >
                        ) @ #l )
            qed
          qed
        qed
      next
        case R_Complete_case_1
        solve( R_Act( ~ey, $B, $A, X ) ▶₀ #i )
          case R_Activate
          solve( !Ltk( $B, ~eb ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $A, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              by solve( Sid( <'UM3', $A, $B, '1', X> ) @ #l )
            qed
          qed
        qed
      next
        case R_Complete_case_2
        solve( R_Act( ~ey, $B, $A, X ) ▶₀ #i )
          case R_Activate
          solve( !Ltk( $B, ~eb ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $A, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              by solve( Sid( <'UM3', $A, $B, '2', 'g'^~ey, 
                              MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                  <'I', $A, $B, X, 'g'^~ey>)
                             >
                        ) @ #l )
            qed
          qed
        qed
      next
        case R_Complete_case_3
        solve( R_Act( ~ey, $B, $A, X ) ▶₀ #i )
          case R_Activate
          solve( !Ltk( $B, ~eb ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $A, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              by solve( Sid( <'UM3', $A, $B, '3', 
                              MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                  <'R', $B, $A, 'g'^~ey, X>)
                             >
                        ) @ #l )
            qed
          qed
        qed
      next
        case R_Complete_case_4
        solve( R_Act( ~ey, $B, $A, X ) ▶₀ #i )
          case R_Activate
          solve( !Ltk( $B, ~eb ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $A, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              solve( Sid( <'UM3', $A, $B, 
                           (<'1', X>+
                            <'2', 'g'^~ey, 
                             MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                 <'I', $A, $B, X, 'g'^~ey>)
                            >
                           )
                          >
                     ) @ #l )
                case R_Activate
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case R_Complete_case_5
        solve( R_Act( ~ey, $B, $A, X ) ▶₀ #i )
          case R_Activate
          solve( !Ltk( $B, ~eb ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $A, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              by solve( Sid( <'UM3', $A, $B, 
                              (<'1', X>+
                               <'3', 
                                MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                    <'R', $B, $A, 'g'^~ey, X>)
                               >
                              )
                             >
                        ) @ #l )
            qed
          qed
        qed
      next
        case R_Complete_case_6
        solve( R_Act( ~ey, $B, $A, X ) ▶₀ #i )
          case R_Activate
          solve( !Ltk( $B, ~eb ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $A, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              by solve( Sid( <'UM3', $A, $B, 
                              (
                               <'2', 'g'^~ey, 
                                MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                    <'I', $A, $B, X, 'g'^~ey>)
                               >+
                               <'3', 
                                MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                    <'R', $B, $A, 'g'^~ey, X>)
                               >
                              )
                             >
                        ) @ #l )
            qed
          qed
        qed
      qed
    qed
  next
    case case_2
    solve( (∃ #v. (SidUpdated( <'UM3', B, A, comm> ) @ #v))  ∥
           ((∀ #k. (SessionKeyReveal( <'UM3', B, A, comm> ) @ #k) ⇒ ⊥) ∧
            (∀ #k.
              (Corrupt( B ) @ #k)
             ⇒
              ∃ #l. (Expire( <'UM3', B, A, comm> ) @ #l) ∧ #l < #k) ∧
            (∀ #k.
              (SessionStateReveal( <'UM3', B, A, comm> ) @ #k)
             ⇒
              (∀ #l. (Corrupt( A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( B ) @ #l) ⇒ ⊥))) )
      case case_1
      by contradiction /* from formulas */
    next
      case case_2
      solve( Complete( <'UM3', A, B, comm>, role, k ) @ #i )
        case I_Complete
        solve( I_Act( ~ex, $A, $B ) ▶₀ #i )
          case I_Activate
          solve( !Ltk( $A, ~ea ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $B, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              solve( Sid( <'UM3', $B, $A, 
                           (<'1', 'g'^~ex>+
                            <'2', Y, 
                             MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                 <'I', $A, $B, 'g'^~ex, Y>)
                            >+
                            <'3', 
                             MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                 <'R', $B, $A, Y, 'g'^~ex>)
                            >
                           )
                          >
                     ) @ #l )
                case I_Complete
                solve( (∀ rest.
                         ((rest+'g'^~ex) =
                          (<'1', 'g'^~ex>+
                           <'2', Y, 
                            MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                <'I', $A, $A, 'g'^~ex, Y>)
                           >+
                           <'3', 
                            MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                <'R', $A, $A, Y, 'g'^~ex>)
                           >
                          ))
                        ⇒
                         ⊥)  ∥
                       (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                       ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  solve( I_Act( ~ex, $A, $A ) ▶₀ #l )
                    case I_Activate
                    solve( !KU( MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                    <'I', $A, $A, 'g'^~ex, Y>)
                           ) @ #vk.3 )
                      case R_Activate
                      solve( (∀ rest.
                               ((rest+<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >
                                ) =
                                (<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >+
                                 <'3', 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                 >
                                ))
                              ⇒
                               ⊥)  ∥
                             (∃ #v.
                               (SidUpdated( <'UM3', $A, $A, 
                                             (<'1', 'g'^~ex>+
                                              <'2', 'g'^~ey, 
                                               MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                            'g'^~ey>)),
                                                   <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                              >
                                             )
                                            >
                                ) @ #v))  ∥
                             ((∀ #k.
                                (SessionKeyReveal( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                 ) @ #k)
                               ⇒
                                ⊥) ∧
                              (∀ #k.
                                (Corrupt( $A ) @ #k)
                               ⇒
                                ∃ #l.
                                 (Expire( <'UM3', $A, $A, 
                                           (<'1', 'g'^~ex>+
                                            <'2', 'g'^~ey, 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                            >
                                           )
                                          >
                                  ) @ #l)
                                ∧
                                 #l < #k) ∧
                              (∀ #k.
                                (SessionStateReveal( <'UM3', $A, $A, 
                                                      (<'1', 'g'^~ex>+
                                                       <'2', 'g'^~ey, 
                                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                     'g'^~ex, 'g'^~ey>)),
                                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                       >
                                                      )
                                                     >
                                 ) @ #k)
                               ⇒
                                (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( SidUpdated( <'UM3', $A, $A, 
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >
                                            )
                                           >
                               ) @ #v )
                          case R_Complete
                          solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                            case R_Activate
                            solve( !Ltk( $A, ~ea ) ▶₂ #v )
                              case Register_key_honest
                              solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                                case Register_key_honest
                                solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                      'g'^~ey>))
                                       ) @ #vk.2 )
                                  case Corrupt_SessionKey_case_1
                                  by contradiction /* cyclic */
                                next
                                  case Corrupt_SessionKey_case_2
                                  by contradiction /* cyclic */
                                next
                                  case Reveal_SessionKey_case_1
                                  by contradiction /* from formulas */
                                next
                                  case Reveal_SessionKey_case_2
                                  by contradiction /* from formulas */
                                next
                                  case c_second
                                  solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                         ) @ #vk.6 )
                                    case c_h
                                    solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                      case I_Activate
                                      by solve( !KU( ~ey ) @ #vk.15 )
                                    next
                                      case R_Activate
                                      by solve( !KU( ~ex ) @ #vk.15 )
                                    next
                                      case c_exp
                                      by solve( !KU( ~ex ) @ #vk.17 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                              'g'^~ey>))
                               ) @ #vk.2 )
                          case Corrupt_SessionKey_case_1
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_2
                          by contradiction /* cyclic */
                        next
                          case Reveal_SessionKey_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_2
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                 ) @ #vk.5 )
                            case c_h
                            solve( !KU( 'g'^(~ex*~ey) ) @ #vk.8 )
                              case I_Activate
                              by solve( !KU( ~ey ) @ #vk.14 )
                            next
                              case R_Activate
                              by solve( !KU( ~ex ) @ #vk.14 )
                            next
                              case c_exp
                              by solve( !KU( ~ex ) @ #vk.16 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_MAC
                      solve( !KU( first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)) ) @ #vk.5 )
                        case c_first
                        solve( !KU( h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>) ) @ #vk.12 )
                          case c_h
                          solve( !KU( 'g'^(~ea*~ea) ) @ #vk.16 )
                            case Register_key_honest
                            solve( !KU( ~ea ) @ #vk.17 )
                              case Corrupt_Ltk
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', Y, 
                                                MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                    <'I', $A, $A, 'g'^~ex, Y>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                    <'R', $A, $A, Y, 'g'^~ex>)
                                               >
                                              )
                                             >
                                     ) @ #l )
                                case I_Expire
                                solve( I_Comp( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', Y, 
                                                  MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                      <'I', $A, $A, 'g'^~ex, Y>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                      <'R', $A, $A, Y, 'g'^~ex>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case I_Complete
                                  by contradiction /* cyclic */
                                qed
                              next
                                case R_Expire
                                solve( R_Comp( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', Y, 
                                                  MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                      <'I', $A, $A, 'g'^~ex, Y>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                      <'R', $A, $A, Y, 'g'^~ex>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case R_Complete
                                  solve( (∀ rest.
                                           ((rest+<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >
                                            ) =
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >+
                                             <'3', 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                             >
                                            ))
                                          ⇒
                                           ⊥)  ∥
                                         (∃ #v.
                                           (SidUpdated( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                            ) @ #v))  ∥
                                         ((∀ #k.
                                            (SessionKeyReveal( <'UM3', $A, $A, 
                                                                (<'1', 'g'^~ex>+
                                                                 <'2', 'g'^~ey, 
                                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), 
                                                                               $A, $A, 'g'^~ex, 'g'^~ey>)),
                                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                                 >
                                                                )
                                                               >
                                             ) @ #k)
                                           ⇒
                                            ⊥) ∧
                                          (∀ #k.
                                            (Corrupt( $A ) @ #k)
                                           ⇒
                                            ∃ #l.
                                             (Expire( <'UM3', $A, $A, 
                                                       (<'1', 'g'^~ex>+
                                                        <'2', 'g'^~ey, 
                                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                      'g'^~ex, 'g'^~ey>)),
                                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                        >
                                                       )
                                                      >
                                              ) @ #l)
                                            ∧
                                             #l < #k) ∧
                                          (∀ #k.
                                            (SessionStateReveal( <'UM3', $A, $A, 
                                                                  (<'1', 'g'^~ex>+
                                                                   <'2', 'g'^~ey, 
                                                                    MAC(first(h(<'g'^(~ex*~ey), 
                                                                                 'g'^(~ea*~ea), $A, $A, 
                                                                                 'g'^~ex, 'g'^~ey>)),
                                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                                   >
                                                                  )
                                                                 >
                                             ) @ #k)
                                           ⇒
                                            (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧
                                            (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                                    case case_1
                                    by contradiction /* from formulas */
                                  next
                                    case case_2
                                    solve( SidUpdated( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                           ) @ #v )
                                      case R_Complete
                                      solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                        case R_Activate
                                        solve( !KU( 'g'^(~ex*~ey) ) @ #vk.17 )
                                          case I_Activate
                                          by solve( !KU( ~ey ) @ #vk.19 )
                                        next
                                          case R_Activate
                                          by solve( !KU( ~ex ) @ #vk.19 )
                                        next
                                          case c_exp
                                          by solve( !KU( ~ex ) @ #vk.21 )
                                        qed
                                      qed
                                    qed
                                  next
                                    case case_3
                                    solve( Expire( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                           ) @ #l.1 )
                                      case I_Expire
                                      by solve( I_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    next
                                      case R_Expire
                                      by solve( R_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case c_exp
                            solve( !KU( ~ea ) @ #vk.19 )
                              case Corrupt_Ltk
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', Y, 
                                                MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                    <'I', $A, $A, 'g'^~ex, Y>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                    <'R', $A, $A, Y, 'g'^~ex>)
                                               >
                                              )
                                             >
                                     ) @ #l )
                                case I_Expire
                                solve( I_Comp( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', Y, 
                                                  MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                      <'I', $A, $A, 'g'^~ex, Y>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                      <'R', $A, $A, Y, 'g'^~ex>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case I_Complete
                                  by contradiction /* cyclic */
                                qed
                              next
                                case R_Expire
                                solve( R_Comp( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', Y, 
                                                  MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                      <'I', $A, $A, 'g'^~ex, Y>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                                      <'R', $A, $A, Y, 'g'^~ex>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case R_Complete
                                  solve( (∀ rest.
                                           ((rest+<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >
                                            ) =
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >+
                                             <'3', 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                             >
                                            ))
                                          ⇒
                                           ⊥)  ∥
                                         (∃ #v.
                                           (SidUpdated( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                            ) @ #v))  ∥
                                         ((∀ #k.
                                            (SessionKeyReveal( <'UM3', $A, $A, 
                                                                (<'1', 'g'^~ex>+
                                                                 <'2', 'g'^~ey, 
                                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), 
                                                                               $A, $A, 'g'^~ex, 'g'^~ey>)),
                                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                                 >
                                                                )
                                                               >
                                             ) @ #k)
                                           ⇒
                                            ⊥) ∧
                                          (∀ #k.
                                            (Corrupt( $A ) @ #k)
                                           ⇒
                                            ∃ #l.
                                             (Expire( <'UM3', $A, $A, 
                                                       (<'1', 'g'^~ex>+
                                                        <'2', 'g'^~ey, 
                                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                      'g'^~ex, 'g'^~ey>)),
                                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                        >
                                                       )
                                                      >
                                              ) @ #l)
                                            ∧
                                             #l < #k) ∧
                                          (∀ #k.
                                            (SessionStateReveal( <'UM3', $A, $A, 
                                                                  (<'1', 'g'^~ex>+
                                                                   <'2', 'g'^~ey, 
                                                                    MAC(first(h(<'g'^(~ex*~ey), 
                                                                                 'g'^(~ea*~ea), $A, $A, 
                                                                                 'g'^~ex, 'g'^~ey>)),
                                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                                   >
                                                                  )
                                                                 >
                                             ) @ #k)
                                           ⇒
                                            (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧
                                            (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                                    case case_1
                                    by contradiction /* from formulas */
                                  next
                                    case case_2
                                    solve( SidUpdated( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                           ) @ #v )
                                      case R_Complete
                                      solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                        case R_Activate
                                        solve( !KU( 'g'^(~ex*~ey) ) @ #vk.18 )
                                          case I_Activate
                                          by solve( !KU( ~ey ) @ #vk.21 )
                                        next
                                          case R_Activate
                                          by solve( !KU( ~ex ) @ #vk.21 )
                                        next
                                          case c_exp
                                          by solve( !KU( ~ex ) @ #vk.22 )
                                        qed
                                      qed
                                    qed
                                  next
                                    case case_3
                                    solve( Expire( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                           ) @ #l.1 )
                                      case I_Expire
                                      by solve( I_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    next
                                      case R_Expire
                                      by solve( R_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( I_Act( ~ex, $A, $A ) ▶₀ #l )
                    case I_Activate
                    by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                  qed
                next
                  case case_3
                  solve( I_Act( ~ex, $A, $A ) ▶₀ #l )
                    case I_Activate
                    solve( !KU( MAC(first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)),
                                    <'I', $A, $A, 'g'^~ex, Y>)
                           ) @ #vk.3 )
                      case R_Activate
                      solve( (∀ rest.
                               ((rest+<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >
                                ) =
                                (<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >+
                                 <'3', 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                 >
                                ))
                              ⇒
                               ⊥)  ∥
                             (∃ #v.
                               (SidUpdated( <'UM3', $A, $A, 
                                             (<'1', 'g'^~ex>+
                                              <'2', 'g'^~ey, 
                                               MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                            'g'^~ey>)),
                                                   <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                              >
                                             )
                                            >
                                ) @ #v))  ∥
                             ((∀ #k.
                                (SessionKeyReveal( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                 ) @ #k)
                               ⇒
                                ⊥) ∧
                              (∀ #k.
                                (Corrupt( $A ) @ #k)
                               ⇒
                                ∃ #l.
                                 (Expire( <'UM3', $A, $A, 
                                           (<'1', 'g'^~ex>+
                                            <'2', 'g'^~ey, 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                            >
                                           )
                                          >
                                  ) @ #l)
                                ∧
                                 #l < #k) ∧
                              (∀ #k.
                                (SessionStateReveal( <'UM3', $A, $A, 
                                                      (<'1', 'g'^~ex>+
                                                       <'2', 'g'^~ey, 
                                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                     'g'^~ex, 'g'^~ey>)),
                                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                       >
                                                      )
                                                     >
                                 ) @ #k)
                               ⇒
                                (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( SidUpdated( <'UM3', $A, $A, 
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >
                                            )
                                           >
                               ) @ #v )
                          case R_Complete
                          solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                            case R_Activate
                            solve( !Ltk( $A, ~ea ) ▶₂ #v )
                              case Register_key_honest
                              solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                                case Register_key_honest
                                solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                      'g'^~ey>))
                                       ) @ #vk.2 )
                                  case Corrupt_SessionKey_case_1
                                  by contradiction /* cyclic */
                                next
                                  case Corrupt_SessionKey_case_2
                                  by contradiction /* cyclic */
                                next
                                  case Reveal_SessionKey_case_1
                                  by contradiction /* from formulas */
                                next
                                  case Reveal_SessionKey_case_2
                                  by contradiction /* from formulas */
                                next
                                  case c_second
                                  solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                         ) @ #vk.6 )
                                    case c_h
                                    solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                      case I_Activate
                                      by solve( !KU( ~ey ) @ #vk.15 )
                                    next
                                      case R_Activate
                                      by solve( !KU( ~ex ) @ #vk.15 )
                                    next
                                      case c_exp
                                      by solve( !KU( ~ex ) @ #vk.17 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                              'g'^~ey>))
                               ) @ #vk.2 )
                          case Corrupt_SessionKey_case_1
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_2
                          by contradiction /* cyclic */
                        next
                          case Reveal_SessionKey_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_2
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                 ) @ #vk.5 )
                            case c_h
                            solve( !KU( 'g'^(~ex*~ey) ) @ #vk.8 )
                              case I_Activate
                              by solve( !KU( ~ey ) @ #vk.14 )
                            next
                              case R_Activate
                              by solve( !KU( ~ex ) @ #vk.14 )
                            next
                              case c_exp
                              by solve( !KU( ~ex ) @ #vk.16 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_MAC
                      solve( !KU( first(h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>)) ) @ #vk.5 )
                        case c_first
                        solve( !KU( h(<z, 'g'^(~ea*~ea), $A, $A, 'g'^~ex, Y>) ) @ #vk.12 )
                          case c_h
                          solve( !KU( 'g'^(~ea*~ea) ) @ #vk.16 )
                            case Register_key_honest
                            solve( !KU( ~ea ) @ #vk.17 )
                              case Corrupt_Ltk
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l )
                              qed
                            qed
                          next
                            case c_exp
                            solve( !KU( ~ea ) @ #vk.19 )
                              case Corrupt_Ltk
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case R_Complete_case_1
                solve( R_Act( ~ey, $B, $A, 'g'^~ex ) ▶₀ #l )
                  case R_Activate
                  solve( (∀ rest.
                           ((rest+<'1', 'g'^~ex>+
                             <'2', 'g'^~ey, 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                  <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                             >
                            ) =
                            (<'1', 'g'^~ex>+
                             <'2', 'g'^~ey, 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                  <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                             >+
                             <'3', 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                  <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                             >
                            ))
                          ⇒
                           ⊥)  ∥
                         (∃ #v.
                           (SidUpdated( <'UM3', $B, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                          >
                                         )
                                        >
                            ) @ #v))  ∥
                         ((∀ #k.
                            (SessionKeyReveal( <'UM3', $B, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                                 >
                                                )
                                               >
                             ) @ #k)
                           ⇒
                            ⊥) ∧
                          (∀ #k.
                            (Corrupt( $B ) @ #k)
                           ⇒
                            ∃ #l.
                             (Expire( <'UM3', $B, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                        >
                                       )
                                      >
                              ) @ #l)
                            ∧
                             #l < #k) ∧
                          (∀ #k.
                            (SessionStateReveal( <'UM3', $B, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                             ) @ #k)
                           ⇒
                            (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    solve( !Ltk( $B, ~ea ) ▶₂ #l )
                      case Register_key_honest
                      solve( (∀ rest.
                               ((rest+'g'^~ex) =
                                (<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >+
                                 <'3', 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                 >
                                ))
                              ⇒
                               ⊥)  ∥
                             (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                             ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                              (∀ #k.
                                (Corrupt( $A ) @ #k)
                               ⇒
                                ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                              (∀ #k.
                                (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                               ⇒
                                (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                        case case_1
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                          case Register_key_honest
                          solve( SidUpdated( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                 ) @ #v )
                            case R_Complete
                            solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                              case R_Activate
                              solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                    'g'^~ey>))
                                     ) @ #vk )
                                case Corrupt_SessionKey_case_1
                                by contradiction /* cyclic */
                              next
                                case Corrupt_SessionKey_case_2
                                by contradiction /* cyclic */
                              next
                                case Reveal_SessionKey_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_SessionKey_case_2
                                by contradiction /* from formulas */
                              next
                                case c_second
                                solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                       ) @ #vk.6 )
                                  case c_h
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.15 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.15 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.17 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                          case Register_key_honest
                          solve( SidUpdated( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                 ) @ #v )
                            case R_Complete
                            solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                              case R_Activate
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                          case Register_key_honest
                          solve( SidUpdated( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                 ) @ #v )
                            case R_Complete
                            solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                              case R_Activate
                              solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                    'g'^~ey>))
                                     ) @ #vk )
                                case Corrupt_SessionKey_case_1
                                by contradiction /* cyclic */
                              next
                                case Corrupt_SessionKey_case_2
                                by contradiction /* cyclic */
                              next
                                case Reveal_SessionKey_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_SessionKey_case_2
                                by contradiction /* from formulas */
                              next
                                case c_second
                                solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                       ) @ #vk.6 )
                                  case c_h
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.15 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.15 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.17 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case case_3
                    solve( !Ltk( $B, ~ea ) ▶₂ #l )
                      case Register_key_honest
                      solve( (∀ rest.
                               ((rest+'g'^~ex) =
                                (<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >+
                                 <'3', 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                 >
                                ))
                              ⇒
                               ⊥)  ∥
                             (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                             ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                              (∀ #k.
                                (Corrupt( $A ) @ #k)
                               ⇒
                                ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                              (∀ #k.
                                (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                               ⇒
                                (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                        case case_1
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                          case Register_key_honest
                          solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                'g'^~ey>))
                                 ) @ #vk )
                            case Corrupt_SessionKey_case_1
                            by contradiction /* cyclic */
                          next
                            case Corrupt_SessionKey_case_2
                            by contradiction /* cyclic */
                          next
                            case Reveal_SessionKey_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_SessionKey_case_2
                            by contradiction /* from formulas */
                          next
                            case c_second
                            solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                   ) @ #vk.6 )
                              case c_h
                              solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                case I_Activate
                                by solve( !KU( ~ey ) @ #vk.15 )
                              next
                                case R_Activate
                                by solve( !KU( ~ex ) @ #vk.15 )
                              next
                                case c_exp
                                by solve( !KU( ~ex ) @ #vk.17 )
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                          case Register_key_honest
                          by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                        qed
                      next
                        case case_3
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                          case Register_key_honest
                          solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                'g'^~ey>))
                                 ) @ #vk )
                            case Corrupt_SessionKey_case_1
                            by contradiction /* cyclic */
                          next
                            case Corrupt_SessionKey_case_2
                            by contradiction /* cyclic */
                          next
                            case Reveal_SessionKey_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_SessionKey_case_2
                            by contradiction /* from formulas */
                          next
                            case c_second
                            solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                   ) @ #vk.6 )
                              case c_h
                              solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                case I_Activate
                                by solve( !KU( ~ey ) @ #vk.15 )
                              next
                                case R_Activate
                                by solve( !KU( ~ex ) @ #vk.15 )
                              next
                                case c_exp
                                by solve( !KU( ~ex ) @ #vk.17 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case R_Complete_case_2
                solve( R_Act( ~ey, $B, $A, 'g'^~ex ) ▶₀ #l )
                  case R_Activate
                  solve( (∀ rest.
                           ((rest+<'1', 'g'^~ex>+
                             <'2', 'g'^~ey, 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                  <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                             >
                            ) =
                            (<'1', 'g'^~ex>+
                             <'2', 'g'^~ey, 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                  <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                             >+
                             <'3', 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                  <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                             >
                            ))
                          ⇒
                           ⊥)  ∥
                         (∃ #v.
                           (SidUpdated( <'UM3', $B, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                          >
                                         )
                                        >
                            ) @ #v))  ∥
                         ((∀ #k.
                            (SessionKeyReveal( <'UM3', $B, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                                 >
                                                )
                                               >
                             ) @ #k)
                           ⇒
                            ⊥) ∧
                          (∀ #k.
                            (Corrupt( $B ) @ #k)
                           ⇒
                            ∃ #l.
                             (Expire( <'UM3', $B, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                        >
                                       )
                                      >
                              ) @ #l)
                            ∧
                             #l < #k) ∧
                          (∀ #k.
                            (SessionStateReveal( <'UM3', $B, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                             ) @ #k)
                           ⇒
                            (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    solve( !Ltk( $B, ~x ) ▶₂ #l )
                      case Register_key_honest
                      solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                        case Register_key_honest
                        solve( SidUpdated( <'UM3', $B, $A, 
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                             >
                                            )
                                           >
                               ) @ #v )
                          case R_Complete_case_1
                          solve( R_Act( ~ey, $B, $A, 'g'^~ex ) ▶₀ #v )
                            case R_Activate
                            solve( (∀ rest.
                                     ((rest+'g'^~ex) =
                                      (<'1', 'g'^~ex>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                       >
                                      ))
                                    ⇒
                                     ⊥)  ∥
                                   (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                                   ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                    'g'^~ey>))
                                     ) @ #vk )
                                case Corrupt_SessionKey_case_1
                                by contradiction /* cyclic */
                              next
                                case Corrupt_SessionKey_case_2
                                by contradiction /* cyclic */
                              next
                                case Reveal_SessionKey_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_SessionKey_case_2
                                by contradiction /* from formulas */
                              next
                                case c_second
                                solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                       ) @ #vk.6 )
                                  case c_h
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.15 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.15 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.17 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_3
                              solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                    'g'^~ey>))
                                     ) @ #vk )
                                case Corrupt_SessionKey_case_1
                                by contradiction /* cyclic */
                              next
                                case Corrupt_SessionKey_case_2
                                by contradiction /* cyclic */
                              next
                                case Reveal_SessionKey_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_SessionKey_case_2
                                by contradiction /* from formulas */
                              next
                                case c_second
                                solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                       ) @ #vk.6 )
                                  case c_h
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.15 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.15 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.17 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case R_Complete_case_2
                          solve( R_Act( ~ey, $B, $A, 'g'^~ex ) ▶₀ #v )
                            case R_Activate
                            solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                  'g'^~ey>))
                                   ) @ #vk )
                              case Corrupt_SessionKey_case_1
                              by contradiction /* cyclic */
                            next
                              case Corrupt_SessionKey_case_2
                              by contradiction /* cyclic */
                            next
                              case Corrupt_SessionKey_case_3
                              by contradiction /* cyclic */
                            next
                              case Corrupt_SessionKey_case_4
                              by contradiction /* cyclic */
                            next
                              case Reveal_SessionKey_case_1
                              by contradiction /* from formulas */
                            next
                              case Reveal_SessionKey_case_2
                              by contradiction /* from formulas */
                            next
                              case Reveal_SessionKey_case_3
                              by contradiction /* from formulas */
                            next
                              case Reveal_SessionKey_case_4
                              by contradiction /* from formulas */
                            next
                              case c_second
                              solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)
                                     ) @ #vk.6 )
                                case c_h
                                solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                  case I_Activate
                                  by solve( !KU( ~ey ) @ #vk.16 )
                                next
                                  case R_Activate
                                  by solve( !KU( ~ex ) @ #vk.16 )
                                next
                                  case c_exp
                                  by solve( !KU( ~ex ) @ #vk.18 )
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case case_3
                    solve( !Ltk( $B, ~x ) ▶₂ #l )
                      case Register_key_honest
                      solve( !Pk( $A, 'g'^~ea ) ▶₃ #l )
                        case Register_key_honest
                        solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                              'g'^~ey>))
                               ) @ #vk )
                          case Corrupt_SessionKey_case_1
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_2
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_3
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_4
                          by contradiction /* cyclic */
                        next
                          case Reveal_SessionKey_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_2
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_3
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_4
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)
                                 ) @ #vk.6 )
                            case c_h
                            solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                              case I_Activate
                              by solve( !KU( ~ey ) @ #vk.16 )
                            next
                              case R_Activate
                              by solve( !KU( ~ex ) @ #vk.16 )
                            next
                              case c_exp
                              by solve( !KU( ~ex ) @ #vk.18 )
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case R_Complete
        solve( R_Act( ~ey, $B, $A, X ) ▶₀ #i )
          case R_Activate
          solve( !Ltk( $B, ~eb ) ▶₂ #i )
            case Register_key_honest
            solve( !Pk( $A, 'g'^~x ) ▶₃ #i )
              case Register_key_honest
              solve( Sid( <'UM3', $A, $B, 
                           (<'1', X>+
                            <'2', 'g'^~ey, 
                             MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                 <'I', $A, $B, X, 'g'^~ey>)
                            >+
                            <'3', 
                             MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                 <'R', $B, $A, 'g'^~ey, X>)
                            >
                           )
                          >
                     ) @ #l )
                case I_Complete_case_1
                solve( I_Act( ~ex, $A, $B ) ▶₀ #l )
                  case I_Activate
                  solve( (∀ rest.
                           ((rest+'g'^~ex) =
                            (<'1', 'g'^~ex>+
                             <'2', 'g'^~ey, 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                  <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                             >+
                             <'3', 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                  <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                             >
                            ))
                          ⇒
                           ⊥)  ∥
                         (∃ #v. (SidUpdated( <'UM3', $A, $B, 'g'^~ex> ) @ #v))  ∥
                         ((∀ #k. (SessionKeyReveal( <'UM3', $A, $B, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                          (∀ #k.
                            (Corrupt( $A ) @ #k)
                           ⇒
                            ∃ #l. (Expire( <'UM3', $A, $B, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                          (∀ #k.
                            (SessionStateReveal( <'UM3', $A, $B, 'g'^~ex> ) @ #k)
                           ⇒
                            (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                    case case_1
                    solve( !Ltk( $A, ~eb ) ▶₂ #l )
                      case Register_key_honest
                      solve( (∀ rest.
                               ((rest+<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >
                                ) =
                                (<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >+
                                 <'3', 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                 >
                                ))
                              ⇒
                               ⊥)  ∥
                             (∃ #v.
                               (SidUpdated( <'UM3', $A, $A, 
                                             (<'1', 'g'^~ex>+
                                              <'2', 'g'^~ey, 
                                               MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                            'g'^~ey>)),
                                                   <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                              >
                                             )
                                            >
                                ) @ #v))  ∥
                             ((∀ #k.
                                (SessionKeyReveal( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                 ) @ #k)
                               ⇒
                                ⊥) ∧
                              (∀ #k.
                                (Corrupt( $A ) @ #k)
                               ⇒
                                ∃ #l.
                                 (Expire( <'UM3', $A, $A, 
                                           (<'1', 'g'^~ex>+
                                            <'2', 'g'^~ey, 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                            >
                                           )
                                          >
                                  ) @ #l)
                                ∧
                                 #l < #k) ∧
                              (∀ #k.
                                (SessionStateReveal( <'UM3', $A, $A, 
                                                      (<'1', 'g'^~ex>+
                                                       <'2', 'g'^~ey, 
                                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                     'g'^~ex, 'g'^~ey>)),
                                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                       >
                                                      )
                                                     >
                                 ) @ #k)
                               ⇒
                                (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( !Pk( $A, 'g'^~eb ) ▶₃ #l )
                          case Register_key_honest
                          solve( SidUpdated( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                 ) @ #v )
                            case R_Complete
                            solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                              case R_Activate
                              solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                    'g'^~ey>))
                                     ) @ #vk )
                                case Corrupt_SessionKey_case_1
                                by contradiction /* cyclic */
                              next
                                case Corrupt_SessionKey_case_2
                                by contradiction /* cyclic */
                              next
                                case Reveal_SessionKey_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_SessionKey_case_2
                                by contradiction /* from formulas */
                              next
                                case c_second
                                solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                                       ) @ #vk.6 )
                                  case c_h
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.15 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.15 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.17 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( !Pk( $A, 'g'^~eb ) ▶₃ #l )
                          case Register_key_honest
                          solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                'g'^~ey>))
                                 ) @ #vk )
                            case Corrupt_SessionKey_case_1
                            by contradiction /* cyclic */
                          next
                            case Corrupt_SessionKey_case_2
                            by contradiction /* cyclic */
                          next
                            case Reveal_SessionKey_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_SessionKey_case_2
                            by contradiction /* from formulas */
                          next
                            case c_second
                            solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                                   ) @ #vk.6 )
                              case c_h
                              solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                case I_Activate
                                by solve( !KU( ~ey ) @ #vk.15 )
                              next
                                case R_Activate
                                by solve( !KU( ~ex ) @ #vk.15 )
                              next
                                case c_exp
                                by solve( !KU( ~ex ) @ #vk.17 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case case_2
                    solve( !Ltk( $A, ~eb ) ▶₂ #l )
                      case Register_key_honest
                      solve( (∀ rest.
                               ((rest+<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >
                                ) =
                                (<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >+
                                 <'3', 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                 >
                                ))
                              ⇒
                               ⊥)  ∥
                             (∃ #v.
                               (SidUpdated( <'UM3', $A, $A, 
                                             (<'1', 'g'^~ex>+
                                              <'2', 'g'^~ey, 
                                               MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                            'g'^~ey>)),
                                                   <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                              >
                                             )
                                            >
                                ) @ #v))  ∥
                             ((∀ #k.
                                (SessionKeyReveal( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                 ) @ #k)
                               ⇒
                                ⊥) ∧
                              (∀ #k.
                                (Corrupt( $A ) @ #k)
                               ⇒
                                ∃ #l.
                                 (Expire( <'UM3', $A, $A, 
                                           (<'1', 'g'^~ex>+
                                            <'2', 'g'^~ey, 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                            >
                                           )
                                          >
                                  ) @ #l)
                                ∧
                                 #l < #k) ∧
                              (∀ #k.
                                (SessionStateReveal( <'UM3', $A, $A, 
                                                      (<'1', 'g'^~ex>+
                                                       <'2', 'g'^~ey, 
                                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                     'g'^~ex, 'g'^~ey>)),
                                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                       >
                                                      )
                                                     >
                                 ) @ #k)
                               ⇒
                                (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( !Pk( $A, 'g'^~eb ) ▶₃ #l )
                          case Register_key_honest
                          by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                        qed
                      next
                        case case_3
                        solve( !Pk( $A, 'g'^~eb ) ▶₃ #l )
                          case Register_key_honest
                          by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                        qed
                      qed
                    qed
                  next
                    case case_3
                    solve( !Ltk( $A, ~eb ) ▶₂ #l )
                      case Register_key_honest
                      solve( (∀ rest.
                               ((rest+<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >
                                ) =
                                (<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >+
                                 <'3', 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                 >
                                ))
                              ⇒
                               ⊥)  ∥
                             (∃ #v.
                               (SidUpdated( <'UM3', $A, $A, 
                                             (<'1', 'g'^~ex>+
                                              <'2', 'g'^~ey, 
                                               MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                            'g'^~ey>)),
                                                   <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                              >
                                             )
                                            >
                                ) @ #v))  ∥
                             ((∀ #k.
                                (SessionKeyReveal( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                 ) @ #k)
                               ⇒
                                ⊥) ∧
                              (∀ #k.
                                (Corrupt( $A ) @ #k)
                               ⇒
                                ∃ #l.
                                 (Expire( <'UM3', $A, $A, 
                                           (<'1', 'g'^~ex>+
                                            <'2', 'g'^~ey, 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                            >
                                           )
                                          >
                                  ) @ #l)
                                ∧
                                 #l < #k) ∧
                              (∀ #k.
                                (SessionStateReveal( <'UM3', $A, $A, 
                                                      (<'1', 'g'^~ex>+
                                                       <'2', 'g'^~ey, 
                                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                     'g'^~ex, 'g'^~ey>)),
                                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                       >
                                                      )
                                                     >
                                 ) @ #k)
                               ⇒
                                (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( !Pk( $A, 'g'^~eb ) ▶₃ #l )
                          case Register_key_honest
                          solve( SidUpdated( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                 ) @ #v )
                            case R_Complete
                            solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                              case R_Activate
                              solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                    'g'^~ey>))
                                     ) @ #vk )
                                case Corrupt_SessionKey_case_1
                                by contradiction /* cyclic */
                              next
                                case Corrupt_SessionKey_case_2
                                by contradiction /* cyclic */
                              next
                                case Reveal_SessionKey_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_SessionKey_case_2
                                by contradiction /* from formulas */
                              next
                                case c_second
                                solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                                       ) @ #vk.6 )
                                  case c_h
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.15 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.15 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.17 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( !Pk( $A, 'g'^~eb ) ▶₃ #l )
                          case Register_key_honest
                          solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                'g'^~ey>))
                                 ) @ #vk )
                            case Corrupt_SessionKey_case_1
                            by contradiction /* cyclic */
                          next
                            case Corrupt_SessionKey_case_2
                            by contradiction /* cyclic */
                          next
                            case Reveal_SessionKey_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_SessionKey_case_2
                            by contradiction /* from formulas */
                          next
                            case c_second
                            solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                                   ) @ #vk.6 )
                              case c_h
                              solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                case I_Activate
                                by solve( !KU( ~ey ) @ #vk.15 )
                              next
                                case R_Activate
                                by solve( !KU( ~ex ) @ #vk.15 )
                              next
                                case c_exp
                                by solve( !KU( ~ex ) @ #vk.17 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case I_Complete_case_2
                solve( I_Act( ~ex, $A, $B ) ▶₀ #l )
                  case I_Activate
                  solve( (∀ rest.
                           ((rest+'g'^~ex) =
                            (<'1', 'g'^~ex>+
                             <'2', 'g'^~ey, 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                  <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                             >+
                             <'3', 
                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                  <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                             >
                            ))
                          ⇒
                           ⊥)  ∥
                         (∃ #v. (SidUpdated( <'UM3', $A, $B, 'g'^~ex> ) @ #v))  ∥
                         ((∀ #k. (SessionKeyReveal( <'UM3', $A, $B, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                          (∀ #k.
                            (Corrupt( $A ) @ #k)
                           ⇒
                            ∃ #l. (Expire( <'UM3', $A, $B, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                          (∀ #k.
                            (SessionStateReveal( <'UM3', $A, $B, 'g'^~ex> ) @ #k)
                           ⇒
                            (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                    case case_1
                    solve( !Ltk( $A, ~x ) ▶₂ #l )
                      case Register_key_honest
                      solve( !Pk( $B, 'g'^~eb ) ▶₃ #l )
                        case Register_key_honest
                        solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                              'g'^~ey>))
                               ) @ #vk )
                          case Corrupt_SessionKey_case_1
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_2
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_3
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_4
                          by contradiction /* cyclic */
                        next
                          case Reveal_SessionKey_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_2
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_3
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_4
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)
                                 ) @ #vk.6 )
                            case c_h
                            solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                              case I_Activate
                              by solve( !KU( ~ey ) @ #vk.16 )
                            next
                              case R_Activate
                              by solve( !KU( ~ex ) @ #vk.16 )
                            next
                              case c_exp
                              by solve( !KU( ~ex ) @ #vk.18 )
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case case_2
                    solve( !Ltk( $A, ~x ) ▶₂ #l )
                      case Register_key_honest
                      solve( !Pk( $B, 'g'^~eb ) ▶₃ #l )
                        case Register_key_honest
                        by solve( SidUpdated( <'UM3', $A, $B, 'g'^~ex> ) @ #v )
                      qed
                    qed
                  next
                    case case_3
                    solve( !Ltk( $A, ~x ) ▶₂ #l )
                      case Register_key_honest
                      solve( !Pk( $B, 'g'^~eb ) ▶₃ #l )
                        case Register_key_honest
                        solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                              'g'^~ey>))
                               ) @ #vk )
                          case Corrupt_SessionKey_case_1
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_2
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_3
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_4
                          by contradiction /* cyclic */
                        next
                          case Reveal_SessionKey_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_2
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_3
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_4
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)
                                 ) @ #vk.6 )
                            case c_h
                            solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                              case I_Activate
                              by solve( !KU( ~ey ) @ #vk.16 )
                            next
                              case R_Activate
                              by solve( !KU( ~ex ) @ #vk.16 )
                            next
                              case c_exp
                              by solve( !KU( ~ex ) @ #vk.18 )
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case R_Complete
                solve( (∀ rest.
                         ((rest+<'1', X>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                <'I', $A, $A, X, 'g'^~ey>)
                           >
                          ) =
                          (<'1', X>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                <'I', $A, $A, X, 'g'^~ey>)
                           >+
                           <'3', 
                            MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                <'R', $A, $A, 'g'^~ey, X>)
                           >
                          ))
                        ⇒
                         ⊥)  ∥
                       (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', X>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                             <'I', $A, $A, X, 'g'^~ey>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', X>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                    <'I', $A, $A, X, 'g'^~ey>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', X>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                           <'I', $A, $A, X, 'g'^~ey>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', X>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'I', $A, $A, X, 'g'^~ey>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  solve( R_Act( ~ey, $A, $A, X ) ▶₀ #l )
                    case R_Activate
                    solve( !KU( MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                    <'R', $A, $A, 'g'^~ey, X>)
                           ) @ #vk.1 )
                      case I_Complete
                      by contradiction /* from formulas */
                    next
                      case c_MAC
                      solve( !KU( first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)) ) @ #vk.4 )
                        case c_first
                        solve( !KU( h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>) ) @ #vk.11 )
                          case c_h
                          solve( !KU( 'g'^(~eb*~eb) ) @ #vk.18 )
                            case Register_key_honest
                            solve( !KU( ~eb ) @ #vk.19 )
                              case Corrupt_Ltk
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', X>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                    <'I', $A, $A, X, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, X>)
                                               >
                                              )
                                             >
                                     ) @ #l )
                                case I_Expire
                                solve( I_Comp( <'UM3', $A, $A, 
                                                (<'1', X>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'I', $A, $A, X, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, X>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case I_Complete
                                  by contradiction /* from formulas */
                                qed
                              next
                                case R_Expire
                                solve( R_Comp( <'UM3', $A, $A, 
                                                (<'1', X>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'I', $A, $A, X, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, X>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case R_Complete
                                  by contradiction /* cyclic */
                                qed
                              qed
                            qed
                          next
                            case c_exp
                            solve( !KU( ~eb ) @ #vk.21 )
                              case Corrupt_Ltk
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', X>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                    <'I', $A, $A, X, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, X>)
                                               >
                                              )
                                             >
                                     ) @ #l )
                                case I_Expire
                                solve( I_Comp( <'UM3', $A, $A, 
                                                (<'1', X>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'I', $A, $A, X, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, X>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case I_Complete
                                  by contradiction /* from formulas */
                                qed
                              next
                                case R_Expire
                                solve( R_Comp( <'UM3', $A, $A, 
                                                (<'1', X>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'I', $A, $A, X, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, X>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case R_Complete
                                  by contradiction /* cyclic */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( R_Act( ~ey, $A, $A, X ) ▶₀ #l )
                    case R_Activate
                    solve( SidUpdated( <'UM3', $A, $A, 
                                        (<'1', X>+
                                         <'2', 'g'^~ey, 
                                          MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                              <'I', $A, $A, X, 'g'^~ey>)
                                         >
                                        )
                                       >
                           ) @ #v )
                      case R_Complete
                      solve( ((∀ rest.
                                ((rest+<'1', X>+
                                  <'2', 'g'^~ey, 
                                   MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                       <'I', $A, $A, X, 'g'^~ey>)
                                  >+
                                  <'3', 
                                   MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                       <'R', $A, $A, 'g'^~ey, X>)
                                  >
                                 ) =
                                 (<'1', X>+
                                  <'2', 'g'^~ey, 
                                   MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                       <'I', $A, $A, X, 'g'^~ey>)
                                  >+
                                  <'3', 
                                   MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                       <'R', $A, $A, 'g'^~ey, X>)
                                  >
                                 ))
                               ⇒
                                ⊥) ∧
                              (¬((<'1', X>+
                                  <'2', 'g'^~ey, 
                                   MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                       <'I', $A, $A, X, 'g'^~ey>)
                                  >+
                                  <'3', 
                                   MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                       <'R', $A, $A, 'g'^~ey, X>)
                                  >
                                 ) =
                                 (<'1', X>+
                                  <'2', 'g'^~ey, 
                                   MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                       <'I', $A, $A, X, 'g'^~ey>)
                                  >+
                                  <'3', 
                                   MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                       <'R', $A, $A, 'g'^~ey, X>)
                                  >
                                 ))))  ∥
                             (∃ #v.
                               (SidUpdated( <'UM3', $A, $A, 
                                             (<'1', X>+
                                              <'2', 'g'^~ey, 
                                               MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                   <'I', $A, $A, X, 'g'^~ey>)
                                              >+
                                              <'3', 
                                               MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                   <'R', $A, $A, 'g'^~ey, X>)
                                              >
                                             )
                                            >
                                ) @ #v))  ∥
                             ((∀ #k.
                                (SessionKeyReveal( <'UM3', $A, $A, 
                                                    (<'1', X>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                          <'I', $A, $A, X, 'g'^~ey>)
                                                     >+
                                                     <'3', 
                                                      MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                          <'R', $A, $A, 'g'^~ey, X>)
                                                     >
                                                    )
                                                   >
                                 ) @ #k)
                               ⇒
                                ⊥) ∧
                              (∀ #k.
                                (Corrupt( $A ) @ #k)
                               ⇒
                                ∃ #l.
                                 (Expire( <'UM3', $A, $A, 
                                           (<'1', X>+
                                            <'2', 'g'^~ey, 
                                             MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                 <'I', $A, $A, X, 'g'^~ey>)
                                            >+
                                            <'3', 
                                             MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                 <'R', $A, $A, 'g'^~ey, X>)
                                            >
                                           )
                                          >
                                  ) @ #l)
                                ∧
                                 #l < #k) ∧
                              (∀ #k.
                                (SessionStateReveal( <'UM3', $A, $A, 
                                                      (<'1', X>+
                                                       <'2', 'g'^~ey, 
                                                        MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey
                                                                    >)),
                                                            <'I', $A, $A, X, 'g'^~ey>)
                                                       >+
                                                       <'3', 
                                                        MAC(first(h(<z.1, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey
                                                                    >)),
                                                            <'R', $A, $A, 'g'^~ey, X>)
                                                       >
                                                      )
                                                     >
                                 ) @ #k)
                               ⇒
                                (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                        case case_1
                        solve( R_Act( ~ey, $A, $A, X ) ▶₀ #v )
                          case R_Activate
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( R_Act( ~ey, $A, $A, X ) ▶₀ #v )
                          case R_Activate
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_3
                        solve( R_Act( ~ey, $A, $A, X ) ▶₀ #v )
                          case R_Activate
                          solve( !KU( MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, X>)
                                 ) @ #vk.1 )
                            case I_Complete
                            solve( (∀ rest.
                                     ((rest+'g'^~ex) =
                                      (<'1', 'g'^~ex>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                       >
                                      ))
                                    ⇒
                                     ⊥)  ∥
                                   (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                                   ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                    'g'^~ey>))
                                     ) @ #vk.1 )
                                case Corrupt_SessionKey_case_1
                                by contradiction /* cyclic */
                              next
                                case Corrupt_SessionKey_case_2
                                by contradiction /* cyclic */
                              next
                                case Reveal_SessionKey_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_SessionKey_case_2
                                by contradiction /* from formulas */
                              next
                                case c_second
                                solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                                       ) @ #vk.6 )
                                  case c_h
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.15 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.15 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.17 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_3
                              solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                    'g'^~ey>))
                                     ) @ #vk.1 )
                                case Corrupt_SessionKey_case_1
                                by contradiction /* cyclic */
                              next
                                case Corrupt_SessionKey_case_2
                                by contradiction /* cyclic */
                              next
                                case Reveal_SessionKey_case_1
                                by contradiction /* from formulas */
                              next
                                case Reveal_SessionKey_case_2
                                by contradiction /* from formulas */
                              next
                                case c_second
                                solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                                       ) @ #vk.6 )
                                  case c_h
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.15 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.15 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.17 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case c_MAC
                            solve( !KU( first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)) ) @ #vk.4 )
                              case c_first
                              solve( !KU( h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>) ) @ #vk.11 )
                                case c_h
                                solve( !KU( 'g'^(~eb*~eb) ) @ #vk.18 )
                                  case Register_key_honest
                                  solve( !KU( ~eb ) @ #vk.19 )
                                    case Corrupt_Ltk
                                    solve( Expire( <'UM3', $A, $A, 
                                                    (<'1', X>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                          <'I', $A, $A, X, 'g'^~ey>)
                                                     >+
                                                     <'3', 
                                                      MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                          <'R', $A, $A, 'g'^~ey, X>)
                                                     >
                                                    )
                                                   >
                                           ) @ #l )
                                      case I_Expire
                                      solve( I_Comp( <'UM3', $A, $A, 
                                                      (<'1', X>+
                                                       <'2', 'g'^~ey, 
                                                        MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                            <'I', $A, $A, X, 'g'^~ey>)
                                                       >+
                                                       <'3', 
                                                        MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                            <'R', $A, $A, 'g'^~ey, X>)
                                                       >
                                                      )
                                                     >
                                             ) ▶₀ #l )
                                        case I_Complete
                                        solve( (∀ rest.
                                                 ((rest+'g'^~ex) =
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >+
                                                   <'3', 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                   >
                                                  ))
                                                ⇒
                                                 ⊥)  ∥
                                               (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                                               ((∀ #k.
                                                  (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                                (∀ #k.
                                                  (Corrupt( $A ) @ #k)
                                                 ⇒
                                                  ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                                (∀ #k.
                                                  (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                                 ⇒
                                                  (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧
                                                  (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                                          case case_1
                                          solve( !KU( 'g'^(~ex*~ey) ) @ #vk.20 )
                                            case I_Activate
                                            by solve( !KU( ~ey ) @ #vk.22 )
                                          next
                                            case R_Activate
                                            by solve( !KU( ~ex ) @ #vk.22 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~ex ) @ #vk.24 )
                                          qed
                                        next
                                          case case_2
                                          by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                                        next
                                          case case_3
                                          solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                            case I_Expire
                                            by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                                          next
                                            case R_Expire
                                            by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                                          qed
                                        qed
                                      qed
                                    next
                                      case R_Expire
                                      solve( R_Comp( <'UM3', $A, $A, 
                                                      (<'1', X>+
                                                       <'2', 'g'^~ey, 
                                                        MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                            <'I', $A, $A, X, 'g'^~ey>)
                                                       >+
                                                       <'3', 
                                                        MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                            <'R', $A, $A, 'g'^~ey, X>)
                                                       >
                                                      )
                                                     >
                                             ) ▶₀ #l )
                                        case R_Complete
                                        by contradiction /* cyclic */
                                      qed
                                    qed
                                  qed
                                next
                                  case c_exp
                                  solve( !KU( ~eb ) @ #vk.21 )
                                    case Corrupt_Ltk
                                    solve( Expire( <'UM3', $A, $A, 
                                                    (<'1', X>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                          <'I', $A, $A, X, 'g'^~ey>)
                                                     >+
                                                     <'3', 
                                                      MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                          <'R', $A, $A, 'g'^~ey, X>)
                                                     >
                                                    )
                                                   >
                                           ) @ #l )
                                      case I_Expire
                                      solve( I_Comp( <'UM3', $A, $A, 
                                                      (<'1', X>+
                                                       <'2', 'g'^~ey, 
                                                        MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                            <'I', $A, $A, X, 'g'^~ey>)
                                                       >+
                                                       <'3', 
                                                        MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                            <'R', $A, $A, 'g'^~ey, X>)
                                                       >
                                                      )
                                                     >
                                             ) ▶₀ #l )
                                        case I_Complete
                                        solve( (∀ rest.
                                                 ((rest+'g'^~ex) =
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >+
                                                   <'3', 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                   >
                                                  ))
                                                ⇒
                                                 ⊥)  ∥
                                               (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                                               ((∀ #k.
                                                  (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                                (∀ #k.
                                                  (Corrupt( $A ) @ #k)
                                                 ⇒
                                                  ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                                (∀ #k.
                                                  (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                                 ⇒
                                                  (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧
                                                  (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                                          case case_1
                                          solve( !KU( 'g'^(~ex*~ey) ) @ #vk.21 )
                                            case I_Activate
                                            by solve( !KU( ~ey ) @ #vk.24 )
                                          next
                                            case R_Activate
                                            by solve( !KU( ~ex ) @ #vk.24 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~ex ) @ #vk.25 )
                                          qed
                                        next
                                          case case_2
                                          by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                                        next
                                          case case_3
                                          solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                            case I_Expire
                                            by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                                          next
                                            case R_Expire
                                            by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                                          qed
                                        qed
                                      qed
                                    next
                                      case R_Expire
                                      solve( R_Comp( <'UM3', $A, $A, 
                                                      (<'1', X>+
                                                       <'2', 'g'^~ey, 
                                                        MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                            <'I', $A, $A, X, 'g'^~ey>)
                                                       >+
                                                       <'3', 
                                                        MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                            <'R', $A, $A, 'g'^~ey, X>)
                                                       >
                                                      )
                                                     >
                                             ) ▶₀ #l )
                                        case R_Complete
                                        by contradiction /* cyclic */
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_3
                  solve( R_Act( ~ey, $A, $A, X ) ▶₀ #l )
                    case R_Activate
                    solve( !KU( MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                    <'R', $A, $A, 'g'^~ey, X>)
                           ) @ #vk.1 )
                      case I_Complete
                      solve( (∀ rest.
                               ((rest+'g'^~ex) =
                                (<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >+
                                 <'3', 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                 >
                                ))
                              ⇒
                               ⊥)  ∥
                             (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                             ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                              (∀ #k.
                                (Corrupt( $A ) @ #k)
                               ⇒
                                ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                              (∀ #k.
                                (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                               ⇒
                                (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                        case case_1
                        solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                              'g'^~ey>))
                               ) @ #vk.1 )
                          case Corrupt_SessionKey_case_1
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_2
                          by contradiction /* cyclic */
                        next
                          case Reveal_SessionKey_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_2
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                                 ) @ #vk.6 )
                            case c_h
                            solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                              case I_Activate
                              by solve( !KU( ~ey ) @ #vk.15 )
                            next
                              case R_Activate
                              by solve( !KU( ~ex ) @ #vk.15 )
                            next
                              case c_exp
                              by solve( !KU( ~ex ) @ #vk.17 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                      next
                        case case_3
                        solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                              'g'^~ey>))
                               ) @ #vk.1 )
                          case Corrupt_SessionKey_case_1
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_2
                          by contradiction /* cyclic */
                        next
                          case Reveal_SessionKey_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_2
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                                 ) @ #vk.6 )
                            case c_h
                            solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                              case I_Activate
                              by solve( !KU( ~ey ) @ #vk.15 )
                            next
                              case R_Activate
                              by solve( !KU( ~ex ) @ #vk.15 )
                            next
                              case c_exp
                              by solve( !KU( ~ex ) @ #vk.17 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_MAC
                      solve( !KU( first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)) ) @ #vk.4 )
                        case c_first
                        solve( !KU( h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>) ) @ #vk.11 )
                          case c_h
                          solve( !KU( 'g'^(~eb*~eb) ) @ #vk.18 )
                            case Register_key_honest
                            solve( !KU( ~eb ) @ #vk.19 )
                              case Corrupt_Ltk
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', X>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                    <'I', $A, $A, X, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, X>)
                                               >
                                              )
                                             >
                                     ) @ #l )
                                case I_Expire
                                solve( I_Comp( <'UM3', $A, $A, 
                                                (<'1', X>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'I', $A, $A, X, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, X>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case I_Complete
                                  solve( (∀ rest.
                                           ((rest+'g'^~ex) =
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >+
                                             <'3', 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                             >
                                            ))
                                          ⇒
                                           ⊥)  ∥
                                         (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                                         ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                          (∀ #k.
                                            (Corrupt( $A ) @ #k)
                                           ⇒
                                            ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                          (∀ #k.
                                            (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                           ⇒
                                            (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧
                                            (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                                    case case_1
                                    solve( Expire( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                           ) @ #l.1 )
                                      case I_Expire
                                      by solve( I_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    next
                                      case R_Expire
                                      by solve( R_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    qed
                                  next
                                    case case_2
                                    solve( Expire( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                           ) @ #l.1 )
                                      case I_Expire
                                      by solve( I_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    next
                                      case R_Expire
                                      by solve( R_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    qed
                                  next
                                    case case_3
                                    solve( Expire( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                           ) @ #l.1 )
                                      case I_Expire
                                      by solve( I_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    next
                                      case R_Expire
                                      by solve( R_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    qed
                                  qed
                                qed
                              next
                                case R_Expire
                                solve( R_Comp( <'UM3', $A, $A, 
                                                (<'1', X>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'I', $A, $A, X, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, X>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case R_Complete
                                  by contradiction /* cyclic */
                                qed
                              qed
                            qed
                          next
                            case c_exp
                            solve( !KU( ~eb ) @ #vk.21 )
                              case Corrupt_Ltk
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', X>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                    <'I', $A, $A, X, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, X>)
                                               >
                                              )
                                             >
                                     ) @ #l )
                                case I_Expire
                                solve( I_Comp( <'UM3', $A, $A, 
                                                (<'1', X>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'I', $A, $A, X, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, X>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case I_Complete
                                  solve( (∀ rest.
                                           ((rest+'g'^~ex) =
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >+
                                             <'3', 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                             >
                                            ))
                                          ⇒
                                           ⊥)  ∥
                                         (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                                         ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                          (∀ #k.
                                            (Corrupt( $A ) @ #k)
                                           ⇒
                                            ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                          (∀ #k.
                                            (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                           ⇒
                                            (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧
                                            (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                                    case case_1
                                    solve( Expire( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                           ) @ #l.1 )
                                      case I_Expire
                                      by solve( I_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    next
                                      case R_Expire
                                      by solve( R_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    qed
                                  next
                                    case case_2
                                    solve( Expire( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                           ) @ #l.1 )
                                      case I_Expire
                                      by solve( I_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    next
                                      case R_Expire
                                      by solve( R_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    qed
                                  next
                                    case case_3
                                    solve( Expire( <'UM3', $A, $A, 
                                                    (<'1', 'g'^~ex>+
                                                     <'2', 'g'^~ey, 
                                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                   'g'^~ex, 'g'^~ey>)),
                                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                     >
                                                    )
                                                   >
                                           ) @ #l.1 )
                                      case I_Expire
                                      by solve( I_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    next
                                      case R_Expire
                                      by solve( R_Comp( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >
                                                         )
                                                        >
                                                ) ▶₀ #l.1 )
                                    qed
                                  qed
                                qed
                              next
                                case R_Expire
                                solve( R_Comp( <'UM3', $A, $A, 
                                                (<'1', X>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'I', $A, $A, X, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<z, 'g'^(~eb*~eb), $A, $A, X, 'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, X>)
                                                 >
                                                )
                                               >
                                       ) ▶₀ #l )
                                  case R_Complete
                                  by contradiction /* cyclic */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_2
  solve( Complete( <'UM3', A, B, comm>, role, k ) @ #i )
    case I_Complete
    solve( I_Act( ~ex, $A, $B ) ▶₀ #i )
      case I_Activate
      solve( !Ltk( $A, ~ea ) ▶₂ #i )
        case Register_key_honest
        solve( !Pk( $B, 'g'^~x ) ▶₃ #i )
          case Register_key_honest
          solve( !KU( MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                          <'I', $A, $B, 'g'^~ex, Y>)
                 ) @ #vk.3 )
            case R_Activate_case_1
            solve( (∀ rest.
                     ((rest+<'1', 'g'^~ex>+
                       <'2', 'g'^~ey, 
                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                       >
                      ) =
                      (<'1', 'g'^~ex>+
                       <'2', 'g'^~ey, 
                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                       >+
                       <'3', 
                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                            <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                       >
                      ))
                    ⇒
                     ⊥)  ∥
                   (∃ #v.
                     (SidUpdated( <'UM3', $A, $A, 
                                   (<'1', 'g'^~ex>+
                                    <'2', 'g'^~ey, 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                    >
                                   )
                                  >
                      ) @ #v))  ∥
                   ((∀ #k.
                      (SessionKeyReveal( <'UM3', $A, $A, 
                                          (<'1', 'g'^~ex>+
                                           <'2', 'g'^~ey, 
                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                         'g'^~ey>)),
                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                           >
                                          )
                                         >
                       ) @ #k)
                     ⇒
                      ⊥) ∧
                    (∀ #k.
                      (Corrupt( $A ) @ #k)
                     ⇒
                      ∃ #l.
                       (Expire( <'UM3', $A, $A, 
                                 (<'1', 'g'^~ex>+
                                  <'2', 'g'^~ey, 
                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                  >
                                 )
                                >
                        ) @ #l)
                      ∧
                       #l < #k) ∧
                    (∀ #k.
                      (SessionStateReveal( <'UM3', $A, $A, 
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >
                                            )
                                           >
                       ) @ #k)
                     ⇒
                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
              case case_1
              by contradiction /* from formulas */
            next
              case case_2
              solve( (∀ rest.
                       ((rest+'g'^~ex) =
                        (<'1', 'g'^~ex>+
                         <'2', 'g'^~ey, 
                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                         >+
                         <'3', 
                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                              <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                         >
                        ))
                      ⇒
                       ⊥)  ∥
                     (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                     ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                      (∀ #k.
                        (Corrupt( $A ) @ #k)
                       ⇒
                        ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                      (∀ #k.
                        (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                       ⇒
                        (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                case case_1
                solve( (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  solve( SidUpdated( <'UM3', $A, $A, 
                                      (<'1', 'g'^~ex>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                       >
                                      )
                                     >
                         ) @ #v )
                    case R_Complete
                    solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                      case R_Activate
                      solve( !Ltk( $A, ~ea ) ▶₂ #v )
                        case Register_key_honest
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          by solve( SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                    ) @ #v.1 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( SidUpdated( <'UM3', $A, $A, 
                                      (<'1', 'g'^~ex>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                       >
                                      )
                                     >
                         ) @ #v )
                    case R_Complete
                    solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                      case R_Activate
                      solve( !Ltk( $A, ~ea ) ▶₂ #v )
                        case Register_key_honest
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                'g'^~ey>))
                                 ) @ #vk.2 )
                            case Corrupt_SessionKey_case_1
                            by contradiction /* cyclic */
                          next
                            case Corrupt_SessionKey_case_2
                            by contradiction /* cyclic */
                          next
                            case Reveal_SessionKey_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_SessionKey_case_2
                            by contradiction /* from formulas */
                          next
                            case c_second
                            solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                   ) @ #vk.6 )
                              case c_h
                              solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                case I_Activate
                                by solve( !KU( ~ey ) @ #vk.15 )
                              next
                                case R_Activate
                                by solve( !KU( ~ex ) @ #vk.15 )
                              next
                                case c_exp
                                by solve( !KU( ~ex ) @ #vk.17 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  solve( SidUpdated( <'UM3', $A, $A, 
                                      (<'1', 'g'^~ex>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                       >
                                      )
                                     >
                         ) @ #v )
                    case R_Complete
                    solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                      case R_Activate
                      solve( !Ltk( $A, ~ea ) ▶₂ #v )
                        case Register_key_honest
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v.1 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( SidUpdated( <'UM3', $A, $A, 
                                      (<'1', 'g'^~ex>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                       >
                                      )
                                     >
                         ) @ #v )
                    case R_Complete
                    solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                      case R_Activate
                      solve( !Ltk( $A, ~ea ) ▶₂ #v )
                        case Register_key_honest
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v.1 )
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_3
                solve( (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  solve( SidUpdated( <'UM3', $A, $A, 
                                      (<'1', 'g'^~ex>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                       >
                                      )
                                     >
                         ) @ #v )
                    case R_Complete
                    solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                      case R_Activate
                      solve( !Ltk( $A, ~ea ) ▶₂ #v )
                        case Register_key_honest
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          by solve( SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                    ) @ #v.1 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( SidUpdated( <'UM3', $A, $A, 
                                      (<'1', 'g'^~ex>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                       >
                                      )
                                     >
                         ) @ #v )
                    case R_Complete
                    solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                      case R_Activate
                      solve( !Ltk( $A, ~ea ) ▶₂ #v )
                        case Register_key_honest
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                'g'^~ey>))
                                 ) @ #vk.2 )
                            case Corrupt_SessionKey_case_1
                            by contradiction /* cyclic */
                          next
                            case Corrupt_SessionKey_case_2
                            by contradiction /* cyclic */
                          next
                            case Reveal_SessionKey_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_SessionKey_case_2
                            by contradiction /* from formulas */
                          next
                            case c_second
                            solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                   ) @ #vk.6 )
                              case c_h
                              solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                case I_Activate
                                by solve( !KU( ~ey ) @ #vk.15 )
                              next
                                case R_Activate
                                by solve( !KU( ~ex ) @ #vk.15 )
                              next
                                case c_exp
                                by solve( !KU( ~ex ) @ #vk.17 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_3
              solve( (∀ rest.
                       ((rest+'g'^~ex) =
                        (<'1', 'g'^~ex>+
                         <'2', 'g'^~ey, 
                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                         >+
                         <'3', 
                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                              <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                         >
                        ))
                      ⇒
                       ⊥)  ∥
                     (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                     ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                      (∀ #k.
                        (Corrupt( $A ) @ #k)
                       ⇒
                        ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                      (∀ #k.
                        (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                       ⇒
                        (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                case case_1
                solve( (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  by solve( SidUpdated( <'UM3', $A, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                          >+
                                          <'3', 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                          >
                                         )
                                        >
                            ) @ #v )
                next
                  case case_2
                  solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                        'g'^~ey>))
                         ) @ #vk.2 )
                    case Corrupt_SessionKey_case_1
                    by contradiction /* cyclic */
                  next
                    case Corrupt_SessionKey_case_2
                    by contradiction /* cyclic */
                  next
                    case Reveal_SessionKey_case_1
                    by contradiction /* from formulas */
                  next
                    case Reveal_SessionKey_case_2
                    by contradiction /* from formulas */
                  next
                    case c_second
                    solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                           ) @ #vk.5 )
                      case c_h
                      solve( !KU( 'g'^(~ex*~ey) ) @ #vk.8 )
                        case I_Activate
                        by solve( !KU( ~ey ) @ #vk.14 )
                      next
                        case R_Activate
                        by solve( !KU( ~ex ) @ #vk.14 )
                      next
                        case c_exp
                        by solve( !KU( ~ex ) @ #vk.16 )
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                next
                  case case_2
                  by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                qed
              next
                case case_3
                solve( (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  by solve( SidUpdated( <'UM3', $A, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                          >+
                                          <'3', 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                          >
                                         )
                                        >
                            ) @ #v )
                next
                  case case_2
                  solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                        'g'^~ey>))
                         ) @ #vk.2 )
                    case Corrupt_SessionKey_case_1
                    by contradiction /* cyclic */
                  next
                    case Corrupt_SessionKey_case_2
                    by contradiction /* cyclic */
                  next
                    case Reveal_SessionKey_case_1
                    by contradiction /* from formulas */
                  next
                    case Reveal_SessionKey_case_2
                    by contradiction /* from formulas */
                  next
                    case c_second
                    solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                           ) @ #vk.5 )
                      case c_h
                      solve( !KU( 'g'^(~ex*~ey) ) @ #vk.8 )
                        case I_Activate
                        by solve( !KU( ~ey ) @ #vk.14 )
                      next
                        case R_Activate
                        by solve( !KU( ~ex ) @ #vk.14 )
                      next
                        case c_exp
                        by solve( !KU( ~ex ) @ #vk.16 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case R_Activate_case_2
            solve( (∀ rest.
                     ((rest+<'1', 'g'^~ex>+
                       <'2', 'g'^~ey, 
                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                            <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                       >
                      ) =
                      (<'1', 'g'^~ex>+
                       <'2', 'g'^~ey, 
                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                            <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                       >+
                       <'3', 
                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                            <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                       >
                      ))
                    ⇒
                     ⊥)  ∥
                   (∃ #v.
                     (SidUpdated( <'UM3', $B, $A, 
                                   (<'1', 'g'^~ex>+
                                    <'2', 'g'^~ey, 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                         <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                    >
                                   )
                                  >
                      ) @ #v))  ∥
                   ((∀ #k.
                      (SessionKeyReveal( <'UM3', $B, $A, 
                                          (<'1', 'g'^~ex>+
                                           <'2', 'g'^~ey, 
                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                        >)),
                                                <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                           >
                                          )
                                         >
                       ) @ #k)
                     ⇒
                      ⊥) ∧
                    (∀ #k.
                      (Corrupt( $B ) @ #k)
                     ⇒
                      ∃ #l.
                       (Expire( <'UM3', $B, $A, 
                                 (<'1', 'g'^~ex>+
                                  <'2', 'g'^~ey, 
                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                       <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                  >
                                 )
                                >
                        ) @ #l)
                      ∧
                       #l < #k) ∧
                    (∀ #k.
                      (SessionStateReveal( <'UM3', $B, $A, 
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                             >
                                            )
                                           >
                       ) @ #k)
                     ⇒
                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥))) )
              case case_1
              by contradiction /* from formulas */
            next
              case case_2
              solve( SidUpdated( <'UM3', $B, $A, 
                                  (<'1', 'g'^~ex>+
                                   <'2', 'g'^~ey, 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                        <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                   >
                                  )
                                 >
                     ) @ #v )
                case R_Complete_case_1
                solve( (∃ #v.
                         (SidUpdated( <'UM3', $B, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $B, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $B ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $B, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $B, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥))) )
                  case case_1
                  solve( R_Act( ~ey, $B, $A, 'g'^~ex ) ▶₀ #v )
                    case R_Activate
                    solve( !Ltk( $B, ~ea ) ▶₂ #v )
                      case Register_key_honest
                      solve( (∀ rest.
                               ((rest+'g'^~ex) =
                                (<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >+
                                 <'3', 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                 >
                                ))
                              ⇒
                               ⊥)  ∥
                             (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                             ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                              (∀ #k.
                                (Corrupt( $A ) @ #k)
                               ⇒
                                ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                              (∀ #k.
                                (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                               ⇒
                                (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                        case case_1
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          by solve( SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                    ) @ #v.1 )
                        qed
                      next
                        case case_2
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          by solve( SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                    ) @ #v.1 )
                        qed
                      next
                        case case_3
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          by solve( SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                    ) @ #v.1 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( R_Act( ~ey, $B, $A, 'g'^~ex ) ▶₀ #v )
                    case R_Activate
                    solve( !Ltk( $B, ~ea ) ▶₂ #v )
                      case Register_key_honest
                      solve( (∀ rest.
                               ((rest+'g'^~ex) =
                                (<'1', 'g'^~ex>+
                                 <'2', 'g'^~ey, 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                 >+
                                 <'3', 
                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                      <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                 >
                                ))
                              ⇒
                               ⊥)  ∥
                             (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                             ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                              (∀ #k.
                                (Corrupt( $A ) @ #k)
                               ⇒
                                ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                              (∀ #k.
                                (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                               ⇒
                                (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                        case case_1
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                'g'^~ey>))
                                 ) @ #vk.2 )
                            case Corrupt_SessionKey_case_1
                            by contradiction /* cyclic */
                          next
                            case Corrupt_SessionKey_case_2
                            by contradiction /* cyclic */
                          next
                            case Reveal_SessionKey_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_SessionKey_case_2
                            by contradiction /* from formulas */
                          next
                            case c_second
                            solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                   ) @ #vk.6 )
                              case c_h
                              solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                case I_Activate
                                by solve( !KU( ~ey ) @ #vk.15 )
                              next
                                case R_Activate
                                by solve( !KU( ~ex ) @ #vk.15 )
                              next
                                case c_exp
                                by solve( !KU( ~ex ) @ #vk.17 )
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v.1 )
                        qed
                      next
                        case case_3
                        solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                          case Register_key_honest
                          solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                'g'^~ey>))
                                 ) @ #vk.2 )
                            case Corrupt_SessionKey_case_1
                            by contradiction /* cyclic */
                          next
                            case Corrupt_SessionKey_case_2
                            by contradiction /* cyclic */
                          next
                            case Reveal_SessionKey_case_1
                            by contradiction /* from formulas */
                          next
                            case Reveal_SessionKey_case_2
                            by contradiction /* from formulas */
                          next
                            case c_second
                            solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)
                                   ) @ #vk.6 )
                              case c_h
                              solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                                case I_Activate
                                by solve( !KU( ~ey ) @ #vk.15 )
                              next
                                case R_Activate
                                by solve( !KU( ~ex ) @ #vk.15 )
                              next
                                case c_exp
                                by solve( !KU( ~ex ) @ #vk.17 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case R_Complete_case_2
                solve( (∃ #v.
                         (SidUpdated( <'UM3', $B, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $B, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $B ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $B, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $B, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥))) )
                  case case_1
                  solve( R_Act( ~ey, $B, $A, 'g'^~ex ) ▶₀ #v )
                    case R_Activate
                    solve( !Ltk( $B, ~x ) ▶₂ #v )
                      case Register_key_honest
                      solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                        case Register_key_honest
                        by solve( SidUpdated( <'UM3', $B, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                                >+
                                                <'3', 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                                >
                                               )
                                              >
                                  ) @ #v.1 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( R_Act( ~ey, $B, $A, 'g'^~ex ) ▶₀ #v )
                    case R_Activate
                    solve( !Ltk( $B, ~x ) ▶₂ #v )
                      case Register_key_honest
                      solve( !Pk( $A, 'g'^~ea ) ▶₃ #v )
                        case Register_key_honest
                        solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                              'g'^~ey>))
                               ) @ #vk.2 )
                          case Corrupt_SessionKey_case_1
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_2
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_3
                          by contradiction /* cyclic */
                        next
                          case Corrupt_SessionKey_case_4
                          by contradiction /* cyclic */
                        next
                          case Reveal_SessionKey_case_1
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_2
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_3
                          by contradiction /* from formulas */
                        next
                          case Reveal_SessionKey_case_4
                          by contradiction /* from formulas */
                        next
                          case c_second
                          solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)
                                 ) @ #vk.6 )
                            case c_h
                            solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                              case I_Activate
                              by solve( !KU( ~ey ) @ #vk.16 )
                            next
                              case R_Activate
                              by solve( !KU( ~ex ) @ #vk.16 )
                            next
                              case c_exp
                              by solve( !KU( ~ex ) @ #vk.18 )
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_3
              solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                    'g'^~ey>))
                     ) @ #vk.2 )
                case Corrupt_SessionKey_case_1
                by contradiction /* cyclic */
              next
                case Corrupt_SessionKey_case_2
                by contradiction /* cyclic */
              next
                case Corrupt_SessionKey_case_3
                by contradiction /* cyclic */
              next
                case Corrupt_SessionKey_case_4
                solve( (∃ #v.
                         (SidUpdated( <'UM3', $B, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $B, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $B ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $B, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $B, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥))) )
                  case case_1
                  solve( Expire( <'UM3', $A, $B, 
                                  (<'1', 'g'^~ex>+
                                   <'2', 'g'^~ey, 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                        <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                   >+
                                   <'3', 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                        <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                   >
                                  )
                                 >
                         ) @ #l )
                    case I_Expire
                    solve( I_Comp( <'UM3', $A, $B, 
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    )
                                   >
                           ) ▶₀ #l )
                      case I_Complete_case_1
                      solve( Expire( <'UM3', $B, $A, 
                                      (<'1', 'g'^~ex>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                            <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                       >
                                      )
                                     >
                             ) @ #l.1 )
                        case I_Expire
                        by solve( I_Comp( <'UM3', $B, $A, 
                                           (<'1', 'g'^~ex>+
                                            <'2', 'g'^~ey, 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                            >
                                           )
                                          >
                                  ) ▶₀ #l.1 )
                      next
                        case R_Expire
                        by solve( R_Comp( <'UM3', $B, $A, 
                                           (<'1', 'g'^~ex>+
                                            <'2', 'g'^~ey, 
                                             MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                          'g'^~ey>)),
                                                 <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                            >
                                           )
                                          >
                                  ) ▶₀ #l.1 )
                      qed
                    next
                      case I_Complete_case_2
                      by contradiction /* cyclic */
                    qed
                  next
                    case R_Expire
                    solve( R_Comp( <'UM3', $A, $B, 
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    )
                                   >
                           ) ▶₀ #l )
                      case R_Complete
                      by contradiction /* cyclic */
                    qed
                  qed
                next
                  case case_2
                  by contradiction /* cyclic */
                qed
              next
                case Reveal_SessionKey_case_1
                by contradiction /* from formulas */
              next
                case Reveal_SessionKey_case_2
                by contradiction /* from formulas */
              next
                case Reveal_SessionKey_case_3
                by contradiction /* from formulas */
              next
                case Reveal_SessionKey_case_4
                solve( (∃ #v.
                         (SidUpdated( <'UM3', $B, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $B, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $B ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $B, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $B, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                                 >+
                                                 <'3', 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥))) )
                  case case_1
                  by solve( SidUpdated( <'UM3', $B, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                          >+
                                          <'3', 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                          >
                                         )
                                        >
                            ) @ #v )
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case c_second
                solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~ea*~x), $A, $B, 'g'^~ex, 'g'^~ey>)
                       ) @ #vk.5 )
                  case c_h
                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.8 )
                    case I_Activate
                    by solve( !KU( ~ey ) @ #vk.15 )
                  next
                    case R_Activate
                    by solve( !KU( ~ex ) @ #vk.15 )
                  next
                    case c_exp
                    by solve( !KU( ~ex ) @ #vk.17 )
                  qed
                qed
              qed
            qed
          next
            case c_MAC
            solve( !KU( first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)) ) @ #vk.5 )
              case c_first
              solve( !KU( h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>) ) @ #vk.13 )
                case c_h
                solve( !KU( 'g'^(~ea*~x) ) @ #vk.17 )
                  case Register_key_honest_case_1
                  solve( !KU( ~ea ) @ #vk.18 )
                    case Corrupt_Ltk
                    solve( Expire( <'UM3', $A, $B, 
                                    (<'1', 'g'^~ex>+
                                     <'2', Y, 
                                      MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                          <'I', $A, $B, 'g'^~ex, Y>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                          <'R', $B, $A, Y, 'g'^~ex>)
                                     >
                                    )
                                   >
                           ) @ #l )
                      case I_Expire
                      solve( I_Comp( <'UM3', $A, $B, 
                                      (<'1', 'g'^~ex>+
                                       <'2', Y, 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'I', $A, $B, 'g'^~ex, Y>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'R', $B, $A, Y, 'g'^~ex>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case I_Complete_case_1
                        by contradiction /* cyclic */
                      next
                        case I_Complete_case_2
                        by contradiction /* cyclic */
                      qed
                    next
                      case R_Expire
                      solve( R_Comp( <'UM3', $A, $B, 
                                      (<'1', 'g'^~ex>+
                                       <'2', Y, 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'I', $A, $B, 'g'^~ex, Y>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'R', $B, $A, Y, 'g'^~ex>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case R_Complete
                        solve( (∀ rest.
                                 ((rest+'g'^~ex) =
                                  (<'1', 'g'^~ex>+
                                   <'2', 'g'^~ey, 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                   >+
                                   <'3', 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                   >
                                  ))
                                ⇒
                                 ⊥)  ∥
                               (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                               ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                (∀ #k.
                                  (Corrupt( $A ) @ #k)
                                 ⇒
                                  ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                (∀ #k.
                                  (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                 ⇒
                                  (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                          case case_1
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  by solve( SidUpdated( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >+
                                                          <'3', 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                          >
                                                         )
                                                        >
                                            ) @ #v.1 )
                                qed
                              qed
                            next
                              case case_2
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.17 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.19 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.19 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.21 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        next
                          case case_2
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          qed
                        next
                          case case_3
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case Register_key_honest_case_2
                  solve( !KU( ~x ) @ #vk.18 )
                    case Corrupt_Ltk
                    solve( Expire( <'UM3', $A, $B, 
                                    (<'1', 'g'^~ex>+
                                     <'2', Y, 
                                      MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                          <'I', $A, $B, 'g'^~ex, Y>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                          <'R', $B, $A, Y, 'g'^~ex>)
                                     >
                                    )
                                   >
                           ) @ #l )
                      case I_Expire
                      solve( I_Comp( <'UM3', $A, $B, 
                                      (<'1', 'g'^~ex>+
                                       <'2', Y, 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'I', $A, $B, 'g'^~ex, Y>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'R', $B, $A, Y, 'g'^~ex>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case I_Complete_case_1
                        by contradiction /* cyclic */
                      next
                        case I_Complete_case_2
                        by contradiction /* cyclic */
                      qed
                    next
                      case R_Expire
                      solve( R_Comp( <'UM3', $A, $B, 
                                      (<'1', 'g'^~ex>+
                                       <'2', Y, 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'I', $A, $B, 'g'^~ex, Y>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'R', $B, $A, Y, 'g'^~ex>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case R_Complete
                        solve( (∀ rest.
                                 ((rest+'g'^~ex) =
                                  (<'1', 'g'^~ex>+
                                   <'2', 'g'^~ey, 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                   >+
                                   <'3', 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                   >
                                  ))
                                ⇒
                                 ⊥)  ∥
                               (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                               ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                (∀ #k.
                                  (Corrupt( $A ) @ #k)
                                 ⇒
                                  ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                (∀ #k.
                                  (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                 ⇒
                                  (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                          case case_1
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  by solve( SidUpdated( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >+
                                                          <'3', 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                          >
                                                         )
                                                        >
                                            ) @ #v.1 )
                                qed
                              qed
                            next
                              case case_2
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.17 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.19 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.19 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.21 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        next
                          case case_2
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          qed
                        next
                          case case_3
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  solve( !KU( ~ea ) @ #vk.20 )
                    case Corrupt_Ltk
                    solve( Expire( <'UM3', $A, $B, 
                                    (<'1', 'g'^~ex>+
                                     <'2', Y, 
                                      MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                          <'I', $A, $B, 'g'^~ex, Y>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                          <'R', $B, $A, Y, 'g'^~ex>)
                                     >
                                    )
                                   >
                           ) @ #l )
                      case I_Expire
                      solve( I_Comp( <'UM3', $A, $B, 
                                      (<'1', 'g'^~ex>+
                                       <'2', Y, 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'I', $A, $B, 'g'^~ex, Y>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'R', $B, $A, Y, 'g'^~ex>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case I_Complete_case_1
                        by contradiction /* cyclic */
                      next
                        case I_Complete_case_2
                        by contradiction /* cyclic */
                      qed
                    next
                      case R_Expire
                      solve( R_Comp( <'UM3', $A, $B, 
                                      (<'1', 'g'^~ex>+
                                       <'2', Y, 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'I', $A, $B, 'g'^~ex, Y>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~ea*~x), $A, $B, 'g'^~ex, Y>)),
                                            <'R', $B, $A, Y, 'g'^~ex>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case R_Complete
                        solve( (∀ rest.
                                 ((rest+'g'^~ex) =
                                  (<'1', 'g'^~ex>+
                                   <'2', 'g'^~ey, 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                   >+
                                   <'3', 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                   >
                                  ))
                                ⇒
                                 ⊥)  ∥
                               (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                               ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                (∀ #k.
                                  (Corrupt( $A ) @ #k)
                                 ⇒
                                  ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                (∀ #k.
                                  (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                 ⇒
                                  (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                          case case_1
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  by solve( SidUpdated( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >+
                                                          <'3', 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                          >
                                                         )
                                                        >
                                            ) @ #v.1 )
                                qed
                              qed
                            next
                              case case_2
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.18 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.21 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.21 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.22 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        next
                          case case_2
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          qed
                        next
                          case case_3
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~ea*~ea), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case R_Complete
    solve( R_Act( ~ey, $B, $A, X ) ▶₀ #i )
      case R_Activate
      solve( !Ltk( $B, ~eb ) ▶₂ #i )
        case Register_key_honest
        solve( !Pk( $A, 'g'^~x ) ▶₃ #i )
          case Register_key_honest
          solve( !KU( MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                          <'R', $B, $A, 'g'^~ey, X>)
                 ) @ #vk.1 )
            case I_Complete_case_1
            solve( (∀ rest.
                     ((rest+'g'^~ex) =
                      (<'1', 'g'^~ex>+
                       <'2', 'g'^~ey, 
                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                       >+
                       <'3', 
                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                            <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                       >
                      ))
                    ⇒
                     ⊥)  ∥
                   (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                   ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                    (∀ #k.
                      (Corrupt( $A ) @ #k)
                     ⇒
                      ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                    (∀ #k.
                      (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                     ⇒
                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
              case case_1
              solve( (∃ #v.
                       (SidUpdated( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                        ) @ #v))  ∥
                     ((∀ #k.
                        (SessionKeyReveal( <'UM3', $A, $A, 
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >+
                                             <'3', 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                             >
                                            )
                                           >
                         ) @ #k)
                       ⇒
                        ⊥) ∧
                      (∀ #k.
                        (Corrupt( $A ) @ #k)
                       ⇒
                        ∃ #l.
                         (Expire( <'UM3', $A, $A, 
                                   (<'1', 'g'^~ex>+
                                    <'2', 'g'^~ey, 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                    >+
                                    <'3', 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                    >
                                   )
                                  >
                          ) @ #l)
                        ∧
                         #l < #k) ∧
                      (∀ #k.
                        (SessionStateReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                         ) @ #k)
                       ⇒
                        (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                case case_1
                solve( (∀ rest.
                         ((rest+<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >
                          ) =
                          (<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >+
                           <'3', 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                           >
                          ))
                        ⇒
                         ⊥)  ∥
                       (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by solve( SidUpdated( <'UM3', $A, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                          >+
                                          <'3', 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                          >
                                         )
                                        >
                            ) @ #v )
                next
                  case case_3
                  by solve( SidUpdated( <'UM3', $A, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                          >+
                                          <'3', 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                          >
                                         )
                                        >
                            ) @ #v )
                qed
              next
                case case_2
                solve( (∀ rest.
                         ((rest+<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >
                          ) =
                          (<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >+
                           <'3', 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                           >
                          ))
                        ⇒
                         ⊥)  ∥
                       (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  solve( SidUpdated( <'UM3', $A, $A, 
                                      (<'1', 'g'^~ex>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                       >
                                      )
                                     >
                         ) @ #v )
                    case R_Complete
                    solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                      case R_Activate
                      solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                            'g'^~ey>))
                             ) @ #vk.1 )
                        case Corrupt_SessionKey_case_1
                        by contradiction /* cyclic */
                      next
                        case Corrupt_SessionKey_case_2
                        by contradiction /* cyclic */
                      next
                        case Reveal_SessionKey_case_1
                        by contradiction /* from formulas */
                      next
                        case Reveal_SessionKey_case_2
                        by contradiction /* from formulas */
                      next
                        case c_second
                        solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                               ) @ #vk.6 )
                          case c_h
                          solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                            case I_Activate
                            by solve( !KU( ~ey ) @ #vk.15 )
                          next
                            case R_Activate
                            by solve( !KU( ~ex ) @ #vk.15 )
                          next
                            case c_exp
                            by solve( !KU( ~ex ) @ #vk.17 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_3
                  solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                        'g'^~ey>))
                         ) @ #vk.1 )
                    case Corrupt_SessionKey_case_1
                    by contradiction /* cyclic */
                  next
                    case Corrupt_SessionKey_case_2
                    by contradiction /* cyclic */
                  next
                    case Reveal_SessionKey_case_1
                    by contradiction /* from formulas */
                  next
                    case Reveal_SessionKey_case_2
                    by contradiction /* from formulas */
                  next
                    case c_second
                    solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                           ) @ #vk.6 )
                      case c_h
                      solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                        case I_Activate
                        by solve( !KU( ~ey ) @ #vk.15 )
                      next
                        case R_Activate
                        by solve( !KU( ~ex ) @ #vk.15 )
                      next
                        case c_exp
                        by solve( !KU( ~ex ) @ #vk.17 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              solve( (∃ #v.
                       (SidUpdated( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                        ) @ #v))  ∥
                     ((∀ #k.
                        (SessionKeyReveal( <'UM3', $A, $A, 
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >+
                                             <'3', 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                             >
                                            )
                                           >
                         ) @ #k)
                       ⇒
                        ⊥) ∧
                      (∀ #k.
                        (Corrupt( $A ) @ #k)
                       ⇒
                        ∃ #l.
                         (Expire( <'UM3', $A, $A, 
                                   (<'1', 'g'^~ex>+
                                    <'2', 'g'^~ey, 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                    >+
                                    <'3', 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                    >
                                   )
                                  >
                          ) @ #l)
                        ∧
                         #l < #k) ∧
                      (∀ #k.
                        (SessionStateReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                         ) @ #k)
                       ⇒
                        (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                case case_1
                solve( (∀ rest.
                         ((rest+<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >
                          ) =
                          (<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >+
                           <'3', 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                           >
                          ))
                        ⇒
                         ⊥)  ∥
                       (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                next
                  case case_3
                  by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                qed
              next
                case case_2
                solve( (∀ rest.
                         ((rest+<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >
                          ) =
                          (<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >+
                           <'3', 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                           >
                          ))
                        ⇒
                         ⊥)  ∥
                       (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                next
                  case case_3
                  by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                qed
              qed
            next
              case case_3
              solve( (∃ #v.
                       (SidUpdated( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                        ) @ #v))  ∥
                     ((∀ #k.
                        (SessionKeyReveal( <'UM3', $A, $A, 
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                             >+
                                             <'3', 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                             >
                                            )
                                           >
                         ) @ #k)
                       ⇒
                        ⊥) ∧
                      (∀ #k.
                        (Corrupt( $A ) @ #k)
                       ⇒
                        ∃ #l.
                         (Expire( <'UM3', $A, $A, 
                                   (<'1', 'g'^~ex>+
                                    <'2', 'g'^~ey, 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                    >+
                                    <'3', 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                    >
                                   )
                                  >
                          ) @ #l)
                        ∧
                         #l < #k) ∧
                      (∀ #k.
                        (SessionStateReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                         ) @ #k)
                       ⇒
                        (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                case case_1
                solve( (∀ rest.
                         ((rest+<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >
                          ) =
                          (<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >+
                           <'3', 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                           >
                          ))
                        ⇒
                         ⊥)  ∥
                       (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by solve( SidUpdated( <'UM3', $A, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                          >+
                                          <'3', 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                          >
                                         )
                                        >
                            ) @ #v )
                next
                  case case_3
                  by solve( SidUpdated( <'UM3', $A, $A, 
                                         (<'1', 'g'^~ex>+
                                          <'2', 'g'^~ey, 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                          >+
                                          <'3', 
                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                       >)),
                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                          >
                                         )
                                        >
                            ) @ #v )
                qed
              next
                case case_2
                solve( (∀ rest.
                         ((rest+<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >
                          ) =
                          (<'1', 'g'^~ex>+
                           <'2', 'g'^~ey, 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                           >+
                           <'3', 
                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                           >
                          ))
                        ⇒
                         ⊥)  ∥
                       (∃ #v.
                         (SidUpdated( <'UM3', $A, $A, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                        >
                                       )
                                      >
                          ) @ #v))  ∥
                       ((∀ #k.
                          (SessionKeyReveal( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                           ) @ #k)
                         ⇒
                          ⊥) ∧
                        (∀ #k.
                          (Corrupt( $A ) @ #k)
                         ⇒
                          ∃ #l.
                           (Expire( <'UM3', $A, $A, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                      >
                                     )
                                    >
                            ) @ #l)
                          ∧
                           #l < #k) ∧
                        (∀ #k.
                          (SessionStateReveal( <'UM3', $A, $A, 
                                                (<'1', 'g'^~ex>+
                                                 <'2', 'g'^~ey, 
                                                  MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                               'g'^~ey>)),
                                                      <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                 >
                                                )
                                               >
                           ) @ #k)
                         ⇒
                          (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  solve( SidUpdated( <'UM3', $A, $A, 
                                      (<'1', 'g'^~ex>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey
                                                    >)),
                                            <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                       >
                                      )
                                     >
                         ) @ #v )
                    case R_Complete
                    solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                      case R_Activate
                      solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                            'g'^~ey>))
                             ) @ #vk.1 )
                        case Corrupt_SessionKey_case_1
                        by contradiction /* cyclic */
                      next
                        case Corrupt_SessionKey_case_2
                        by contradiction /* cyclic */
                      next
                        case Reveal_SessionKey_case_1
                        by contradiction /* from formulas */
                      next
                        case Reveal_SessionKey_case_2
                        by contradiction /* from formulas */
                      next
                        case c_second
                        solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                               ) @ #vk.6 )
                          case c_h
                          solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                            case I_Activate
                            by solve( !KU( ~ey ) @ #vk.15 )
                          next
                            case R_Activate
                            by solve( !KU( ~ex ) @ #vk.15 )
                          next
                            case c_exp
                            by solve( !KU( ~ex ) @ #vk.17 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_3
                  solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                        'g'^~ey>))
                         ) @ #vk.1 )
                    case Corrupt_SessionKey_case_1
                    by contradiction /* cyclic */
                  next
                    case Corrupt_SessionKey_case_2
                    by contradiction /* cyclic */
                  next
                    case Reveal_SessionKey_case_1
                    by contradiction /* from formulas */
                  next
                    case Reveal_SessionKey_case_2
                    by contradiction /* from formulas */
                  next
                    case c_second
                    solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)
                           ) @ #vk.6 )
                      case c_h
                      solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                        case I_Activate
                        by solve( !KU( ~ey ) @ #vk.15 )
                      next
                        case R_Activate
                        by solve( !KU( ~ex ) @ #vk.15 )
                      next
                        case c_exp
                        by solve( !KU( ~ex ) @ #vk.17 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case I_Complete_case_2
            solve( (∀ rest.
                     ((rest+'g'^~ex) =
                      (<'1', 'g'^~ex>+
                       <'2', 'g'^~ey, 
                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                            <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                       >+
                       <'3', 
                        MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                            <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                       >
                      ))
                    ⇒
                     ⊥)  ∥
                   (∃ #v. (SidUpdated( <'UM3', $A, $B, 'g'^~ex> ) @ #v))  ∥
                   ((∀ #k. (SessionKeyReveal( <'UM3', $A, $B, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                    (∀ #k.
                      (Corrupt( $A ) @ #k)
                     ⇒
                      ∃ #l. (Expire( <'UM3', $A, $B, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                    (∀ #k.
                      (SessionStateReveal( <'UM3', $A, $B, 'g'^~ex> ) @ #k)
                     ⇒
                      (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
              case case_1
              solve( (∃ #v.
                       (SidUpdated( <'UM3', $A, $B, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                        ) @ #v))  ∥
                     ((∀ #k.
                        (SessionKeyReveal( <'UM3', $A, $B, 
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                             >+
                                             <'3', 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                             >
                                            )
                                           >
                         ) @ #k)
                       ⇒
                        ⊥) ∧
                      (∀ #k.
                        (Corrupt( $A ) @ #k)
                       ⇒
                        ∃ #l.
                         (Expire( <'UM3', $A, $B, 
                                   (<'1', 'g'^~ex>+
                                    <'2', 'g'^~ey, 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                         <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                    >+
                                    <'3', 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                         <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                    >
                                   )
                                  >
                          ) @ #l)
                        ∧
                         #l < #k) ∧
                      (∀ #k.
                        (SessionStateReveal( <'UM3', $A, $B, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                         ) @ #k)
                       ⇒
                        (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                case case_1
                by solve( SidUpdated( <'UM3', $A, $B, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v )
              next
                case case_2
                solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                      'g'^~ey>))
                       ) @ #vk.1 )
                  case Corrupt_SessionKey_case_1
                  by contradiction /* cyclic */
                next
                  case Corrupt_SessionKey_case_2
                  by contradiction /* cyclic */
                next
                  case Corrupt_SessionKey_case_3
                  by contradiction /* cyclic */
                next
                  case Corrupt_SessionKey_case_4
                  by contradiction /* cyclic */
                next
                  case Reveal_SessionKey_case_1
                  by contradiction /* from formulas */
                next
                  case Reveal_SessionKey_case_2
                  by contradiction /* from formulas */
                next
                  case Reveal_SessionKey_case_3
                  by contradiction /* from formulas */
                next
                  case Reveal_SessionKey_case_4
                  by contradiction /* from formulas */
                next
                  case c_second
                  solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)
                         ) @ #vk.6 )
                    case c_h
                    solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                      case I_Activate
                      by solve( !KU( ~ey ) @ #vk.16 )
                    next
                      case R_Activate
                      by solve( !KU( ~ex ) @ #vk.16 )
                    next
                      case c_exp
                      by solve( !KU( ~ex ) @ #vk.18 )
                    qed
                  qed
                qed
              qed
            next
              case case_2
              solve( (∃ #v.
                       (SidUpdated( <'UM3', $A, $B, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                        ) @ #v))  ∥
                     ((∀ #k.
                        (SessionKeyReveal( <'UM3', $A, $B, 
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                             >+
                                             <'3', 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                             >
                                            )
                                           >
                         ) @ #k)
                       ⇒
                        ⊥) ∧
                      (∀ #k.
                        (Corrupt( $A ) @ #k)
                       ⇒
                        ∃ #l.
                         (Expire( <'UM3', $A, $B, 
                                   (<'1', 'g'^~ex>+
                                    <'2', 'g'^~ey, 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                         <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                    >+
                                    <'3', 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                         <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                    >
                                   )
                                  >
                          ) @ #l)
                        ∧
                         #l < #k) ∧
                      (∀ #k.
                        (SessionStateReveal( <'UM3', $A, $B, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                         ) @ #k)
                       ⇒
                        (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                case case_1
                by solve( SidUpdated( <'UM3', $A, $B, 'g'^~ex> ) @ #v )
              next
                case case_2
                by solve( SidUpdated( <'UM3', $A, $B, 'g'^~ex> ) @ #v )
              qed
            next
              case case_3
              solve( (∃ #v.
                       (SidUpdated( <'UM3', $A, $B, 
                                     (<'1', 'g'^~ex>+
                                      <'2', 'g'^~ey, 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                      >+
                                      <'3', 
                                       MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                           <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                      >
                                     )
                                    >
                        ) @ #v))  ∥
                     ((∀ #k.
                        (SessionKeyReveal( <'UM3', $A, $B, 
                                            (<'1', 'g'^~ex>+
                                             <'2', 'g'^~ey, 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                             >+
                                             <'3', 
                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                           'g'^~ey>)),
                                                  <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                             >
                                            )
                                           >
                         ) @ #k)
                       ⇒
                        ⊥) ∧
                      (∀ #k.
                        (Corrupt( $A ) @ #k)
                       ⇒
                        ∃ #l.
                         (Expire( <'UM3', $A, $B, 
                                   (<'1', 'g'^~ex>+
                                    <'2', 'g'^~ey, 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                         <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                    >+
                                    <'3', 
                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)),
                                         <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                    >
                                   )
                                  >
                          ) @ #l)
                        ∧
                         #l < #k) ∧
                      (∀ #k.
                        (SessionStateReveal( <'UM3', $A, $B, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                               >+
                                               <'3', 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                               >
                                              )
                                             >
                         ) @ #k)
                       ⇒
                        (∀ #l. (Corrupt( $B ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                case case_1
                by solve( SidUpdated( <'UM3', $A, $B, 
                                       (<'1', 'g'^~ex>+
                                        <'2', 'g'^~ey, 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'I', $A, $B, 'g'^~ex, 'g'^~ey>)
                                        >+
                                        <'3', 
                                         MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey
                                                     >)),
                                             <'R', $B, $A, 'g'^~ey, 'g'^~ex>)
                                        >
                                       )
                                      >
                          ) @ #v )
              next
                case case_2
                solve( !KU( second(h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 
                                      'g'^~ey>))
                       ) @ #vk.1 )
                  case Corrupt_SessionKey_case_1
                  by contradiction /* cyclic */
                next
                  case Corrupt_SessionKey_case_2
                  by contradiction /* cyclic */
                next
                  case Corrupt_SessionKey_case_3
                  by contradiction /* cyclic */
                next
                  case Corrupt_SessionKey_case_4
                  by contradiction /* cyclic */
                next
                  case Reveal_SessionKey_case_1
                  by contradiction /* from formulas */
                next
                  case Reveal_SessionKey_case_2
                  by contradiction /* from formulas */
                next
                  case Reveal_SessionKey_case_3
                  by contradiction /* from formulas */
                next
                  case Reveal_SessionKey_case_4
                  by contradiction /* from formulas */
                next
                  case c_second
                  solve( !KU( h(<'g'^(~ex*~ey), 'g'^(~eb*~x), $A, $B, 'g'^~ex, 'g'^~ey>)
                         ) @ #vk.6 )
                    case c_h
                    solve( !KU( 'g'^(~ex*~ey) ) @ #vk.9 )
                      case I_Activate
                      by solve( !KU( ~ey ) @ #vk.16 )
                    next
                      case R_Activate
                      by solve( !KU( ~ex ) @ #vk.16 )
                    next
                      case c_exp
                      by solve( !KU( ~ex ) @ #vk.18 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case c_MAC
            solve( !KU( first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)) ) @ #vk.4 )
              case c_first
              solve( !KU( h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>) ) @ #vk.12 )
                case c_h
                solve( !KU( 'g'^(~eb*~x) ) @ #vk.19 )
                  case Register_key_honest_case_1
                  solve( !KU( ~eb ) @ #vk.20 )
                    case Corrupt_Ltk
                    solve( Expire( <'UM3', $B, $A, 
                                    (<'1', X>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                          <'I', $A, $B, X, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                          <'R', $B, $A, 'g'^~ey, X>)
                                     >
                                    )
                                   >
                           ) @ #l )
                      case I_Expire
                      solve( I_Comp( <'UM3', $B, $A, 
                                      (<'1', X>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'I', $A, $B, X, 'g'^~ey>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'R', $B, $A, 'g'^~ey, X>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case I_Complete
                        solve( (∀ rest.
                                 ((rest+'g'^~ex) =
                                  (<'1', 'g'^~ex>+
                                   <'2', 'g'^~ey, 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                   >+
                                   <'3', 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                   >
                                  ))
                                ⇒
                                 ⊥)  ∥
                               (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                               ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                (∀ #k.
                                  (Corrupt( $A ) @ #k)
                                 ⇒
                                  ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                (∀ #k.
                                  (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                 ⇒
                                  (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                          case case_1
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  by solve( SidUpdated( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >+
                                                          <'3', 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                          >
                                                         )
                                                        >
                                            ) @ #v )
                                qed
                              qed
                            next
                              case case_2
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.20 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.22 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.22 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.24 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        next
                          case case_2
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          qed
                        next
                          case case_3
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case R_Expire
                      solve( R_Comp( <'UM3', $B, $A, 
                                      (<'1', X>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'I', $A, $B, X, 'g'^~ey>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'R', $B, $A, 'g'^~ey, X>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case R_Complete_case_1
                        by contradiction /* cyclic */
                      next
                        case R_Complete_case_2
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                next
                  case Register_key_honest_case_2
                  solve( !KU( ~x ) @ #vk.20 )
                    case Corrupt_Ltk
                    solve( Expire( <'UM3', $B, $A, 
                                    (<'1', X>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                          <'I', $A, $B, X, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                          <'R', $B, $A, 'g'^~ey, X>)
                                     >
                                    )
                                   >
                           ) @ #l )
                      case I_Expire
                      solve( I_Comp( <'UM3', $B, $A, 
                                      (<'1', X>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'I', $A, $B, X, 'g'^~ey>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'R', $B, $A, 'g'^~ey, X>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case I_Complete
                        solve( (∀ rest.
                                 ((rest+'g'^~ex) =
                                  (<'1', 'g'^~ex>+
                                   <'2', 'g'^~ey, 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                   >+
                                   <'3', 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                   >
                                  ))
                                ⇒
                                 ⊥)  ∥
                               (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                               ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                (∀ #k.
                                  (Corrupt( $A ) @ #k)
                                 ⇒
                                  ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                (∀ #k.
                                  (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                 ⇒
                                  (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                          case case_1
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  by solve( SidUpdated( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >+
                                                          <'3', 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                          >
                                                         )
                                                        >
                                            ) @ #v )
                                qed
                              qed
                            next
                              case case_2
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.20 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.22 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.22 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.24 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        next
                          case case_2
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          qed
                        next
                          case case_3
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case R_Expire
                      solve( R_Comp( <'UM3', $B, $A, 
                                      (<'1', X>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'I', $A, $B, X, 'g'^~ey>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'R', $B, $A, 'g'^~ey, X>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case R_Complete_case_1
                        by contradiction /* cyclic */
                      next
                        case R_Complete_case_2
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                next
                  case c_exp
                  solve( !KU( ~eb ) @ #vk.22 )
                    case Corrupt_Ltk
                    solve( Expire( <'UM3', $B, $A, 
                                    (<'1', X>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                          <'I', $A, $B, X, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                          <'R', $B, $A, 'g'^~ey, X>)
                                     >
                                    )
                                   >
                           ) @ #l )
                      case I_Expire
                      solve( I_Comp( <'UM3', $B, $A, 
                                      (<'1', X>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'I', $A, $B, X, 'g'^~ey>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'R', $B, $A, 'g'^~ey, X>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case I_Complete
                        solve( (∀ rest.
                                 ((rest+'g'^~ex) =
                                  (<'1', 'g'^~ex>+
                                   <'2', 'g'^~ey, 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                   >+
                                   <'3', 
                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                        <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                   >
                                  ))
                                ⇒
                                 ⊥)  ∥
                               (∃ #v. (SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v))  ∥
                               ((∀ #k. (SessionKeyReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k) ⇒ ⊥) ∧
                                (∀ #k.
                                  (Corrupt( $A ) @ #k)
                                 ⇒
                                  ∃ #l. (Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l) ∧ #l < #k) ∧
                                (∀ #k.
                                  (SessionStateReveal( <'UM3', $A, $A, 'g'^~ex> ) @ #k)
                                 ⇒
                                  (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                          case case_1
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  by solve( SidUpdated( <'UM3', $A, $A, 
                                                         (<'1', 'g'^~ex>+
                                                          <'2', 'g'^~ey, 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                          >+
                                                          <'3', 
                                                           MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                        'g'^~ex, 'g'^~ey>)),
                                                               <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                          >
                                                         )
                                                        >
                                            ) @ #v )
                                qed
                              qed
                            next
                              case case_2
                              solve( SidUpdated( <'UM3', $A, $A, 
                                                  (<'1', 'g'^~ex>+
                                                   <'2', 'g'^~ey, 
                                                    MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                 'g'^~ex, 'g'^~ey>)),
                                                        <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                   >
                                                  )
                                                 >
                                     ) @ #v )
                                case R_Complete
                                solve( R_Act( ~ey, $A, $A, 'g'^~ex ) ▶₀ #v )
                                  case R_Activate
                                  solve( !KU( 'g'^(~ex*~ey) ) @ #vk.21 )
                                    case I_Activate
                                    by solve( !KU( ~ey ) @ #vk.24 )
                                  next
                                    case R_Activate
                                    by solve( !KU( ~ex ) @ #vk.24 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~ex ) @ #vk.25 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 
                                              (<'1', 'g'^~ex>+
                                               <'2', 'g'^~ey, 
                                                MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                             'g'^~ey>)),
                                                    <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                               >
                                              )
                                             >
                                     ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >
                                                   )
                                                  >
                                          ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        next
                          case case_2
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            next
                              case case_2
                              by solve( SidUpdated( <'UM3', $A, $A, 'g'^~ex> ) @ #v )
                            qed
                          qed
                        next
                          case case_3
                          solve( (∀ rest.
                                   ((rest+<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >
                                    ) =
                                    (<'1', 'g'^~ex>+
                                     <'2', 'g'^~ey, 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                     >+
                                     <'3', 
                                      MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 'g'^~ey>)),
                                          <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                     >
                                    ))
                                  ⇒
                                   ⊥)  ∥
                                 (∃ #v.
                                   (SidUpdated( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >
                                                 )
                                                >
                                    ) @ #v))  ∥
                                 ((∀ #k.
                                    (SessionKeyReveal( <'UM3', $A, $A, 
                                                        (<'1', 'g'^~ex>+
                                                         <'2', 'g'^~ey, 
                                                          MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                       'g'^~ex, 'g'^~ey>)),
                                                              <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                         >
                                                        )
                                                       >
                                     ) @ #k)
                                   ⇒
                                    ⊥) ∧
                                  (∀ #k.
                                    (Corrupt( $A ) @ #k)
                                   ⇒
                                    ∃ #l.
                                     (Expire( <'UM3', $A, $A, 
                                               (<'1', 'g'^~ex>+
                                                <'2', 'g'^~ey, 
                                                 MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 'g'^~ex, 
                                                              'g'^~ey>)),
                                                     <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                >
                                               )
                                              >
                                      ) @ #l)
                                    ∧
                                     #l < #k) ∧
                                  (∀ #k.
                                    (SessionStateReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >
                                                          )
                                                         >
                                     ) @ #k)
                                   ⇒
                                    (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          next
                            case case_3
                            solve( (∃ #v.
                                     (SidUpdated( <'UM3', $A, $A, 
                                                   (<'1', 'g'^~ex>+
                                                    <'2', 'g'^~ey, 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                    >+
                                                    <'3', 
                                                     MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                  'g'^~ex, 'g'^~ey>)),
                                                         <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                    >
                                                   )
                                                  >
                                      ) @ #v))  ∥
                                   ((∀ #k.
                                      (SessionKeyReveal( <'UM3', $A, $A, 
                                                          (<'1', 'g'^~ex>+
                                                           <'2', 'g'^~ey, 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                           >+
                                                           <'3', 
                                                            MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                         $A, 'g'^~ex, 'g'^~ey>)),
                                                                <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                           >
                                                          )
                                                         >
                                       ) @ #k)
                                     ⇒
                                      ⊥) ∧
                                    (∀ #k.
                                      (Corrupt( $A ) @ #k)
                                     ⇒
                                      ∃ #l.
                                       (Expire( <'UM3', $A, $A, 
                                                 (<'1', 'g'^~ex>+
                                                  <'2', 'g'^~ey, 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                  >+
                                                  <'3', 
                                                   MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, $A, 
                                                                'g'^~ex, 'g'^~ey>)),
                                                       <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                  >
                                                 )
                                                >
                                        ) @ #l)
                                      ∧
                                       #l < #k) ∧
                                    (∀ #k.
                                      (SessionStateReveal( <'UM3', $A, $A, 
                                                            (<'1', 'g'^~ex>+
                                                             <'2', 'g'^~ey, 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'I', $A, $A, 'g'^~ex, 'g'^~ey>)
                                                             >+
                                                             <'3', 
                                                              MAC(first(h(<'g'^(~ex*~ey), 'g'^(~eb*~eb), $A, 
                                                                           $A, 'g'^~ex, 'g'^~ey>)),
                                                                  <'R', $A, $A, 'g'^~ey, 'g'^~ex>)
                                                             >
                                                            )
                                                           >
                                       ) @ #k)
                                     ⇒
                                      (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥) ∧ (∀ #l. (Corrupt( $A ) @ #l) ⇒ ⊥))) )
                              case case_1
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            next
                              case case_2
                              solve( Expire( <'UM3', $A, $A, 'g'^~ex> ) @ #l.1 )
                                case I_Expire
                                by solve( I_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              next
                                case R_Expire
                                by solve( R_Comp( <'UM3', $A, $A, 'g'^~ex> ) ▶₀ #l.1 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case R_Expire
                      solve( R_Comp( <'UM3', $B, $A, 
                                      (<'1', X>+
                                       <'2', 'g'^~ey, 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'I', $A, $B, X, 'g'^~ey>)
                                       >+
                                       <'3', 
                                        MAC(first(h(<z, 'g'^(~eb*~x), $A, $B, X, 'g'^~ey>)),
                                            <'R', $B, $A, 'g'^~ey, X>)
                                       >
                                      )
                                     >
                             ) ▶₀ #l )
                        case R_Complete_case_1
                        by contradiction /* cyclic */
                      next
                        case R_Complete_case_2
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.


analyzing: examples/ake/dh/UM_three_pass.spthy

------------------------------------------------------------------------------
analyzed: examples/ake/dh/UM_three_pass.spthy

  output:          examples/ake/dh/UM_three_pass.spthy.tmp
  processing time: 145.790083661s
  key_agreement_reachable (exists-trace): verified (14 steps)
  CK_secure_UM3 (all-traces): verified (1170 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: examples/ake/dh/UM_three_pass.spthy

  output:          examples/ake/dh/UM_three_pass.spthy.tmp
  processing time: 145.790083661s
  key_agreement_reachable (exists-trace): verified (14 steps)
  CK_secure_UM3 (all-traces): verified (1170 steps)

==============================================================================
*/
